[
  {
    "title": "vercel/next.js – v15.6.0-canary.53",
    "date": "2025-10-08T19:22:51.000Z",
    "source": "GitHub",
    "url": "https://github.com/vercel/next.js/releases/tag/v15.6.0-canary.53",
    "content": "### Core Changes\n\n- feat(next/image)!: deprecate and warn on `images.domains` config: #84625\n- feat(next/legacy/image)!: deprecate and warn on `next/legacy/image` usage: #84622\n- Turbopack: improve errors/warnings for turbopack messages: #84552\n- Turbopack: rename turbopackPersistentCachingForXXX to turbopackFileSystemCacheForXXX: #84632\n- [Segment Cache] Add refresh URL to reused default segments: #84627\n- [Segment Cache] Fix tests related to optimistic loading state reuse: #84498\n- Upgrade React from `a4eb2dfa-20251006` to `3025aa39-20251007`: #84613\n- [breaking]: enable clientSegmentCache by default: #84643\n- feat: Acquire a lockfile on `distDir` in `next dev` and `next build`: #84428\n- Add deprecation warning to Runtime config: #84168\n\n### Misc Changes\n\n- [create-next-app]: prompt to use recommended options: #84570\n- Update labeler: #84623\n- Turbopack: use mmap advise to help the OS preloading: #84379\n- Turbopack: skip invalidating a task on cell/output change when the dependency is outdated: #84551\n- Turbopack: follow-up changes from untracked tracing: #84629\n- Turbopack: sourcemaps for JSON modules: #84611\n- Turbopack: avoid race condition when updating cells: #84598\n\n### Credits \n\nHuge thanks to @ztanner, @samselikoff, @styfle, @sokra, @mischnic, @acdlite, @bgw, and @devjiwonchoi for helping!\n"
  },
  {
    "title": "誰でも書けるスクリプト言語は、immutable な配列を提供すればよかった",
    "date": "2025-10-08T15:32:20.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/toga/articles/immutable-vector",
    "content": "\n 突然ですが、\nPython あるある〜。\na = [1, 2, 3]\nb = a # コピー？\nc = a # コピー？\n\nb.append(4) # 追加\nc.append(5) # 追加\n\nprint(b)\n# [1, 2, 3, 4, 5]\n# c に追加したはずの 5 が\n# b にも追加されていて、ビビる\n\nprint(c)\n# [1, 2, 3, 4, 5]\n# b に追加したはずの 4 が\n# c にも追加されていて、ビビる\nJavaScript 版もありますconst a = [1, 2, 3]\nconst b = a // コピー？\nconst c = a // コ..."
  },
  {
    "title": "現場で使える！Dify x Pythonハイブリッド開発実践！",
    "date": "2025-10-08T09:18:55.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/sapeet/articles/edfee5b30d79a8",
    "content": "\n はじめに\nこんにちは！株式会社Sapeetのソリューション事業部でアルゴリズムエンジニアとして働いている堀ノ内です。ソリューション事業部では受託開発を行なっており、近年は生成AIを活用したプロジェクトが非常に増えています。\n弊社では開発を迅速に進めるため、PoCの段階ではノーコードツールであるDifyを活用しており、多くのプロジェクトに導入してきました。これまではDifyを単体で使うことが多かったのですが、ノーコードツールであるが故、少し凝った処理をしようとしたり、UIをリッチにしようとすると実現が難しいという課題があります。\nこちらの解決策の1つとして、AI周りのワークフローはDi..."
  },
  {
    "title": "寄稿: サンエー様 基幹システムモダナイゼーションの挑戦 – 序章 –",
    "date": "2025-10-08T04:16:54.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/sana-modernization-1st/",
    "content": "<p>本稿は、沖縄県の小売企業である株式会社サンエー（以降、サンエー）様の内製によるモダナイゼーションのお取り組みをご紹介する AWS との共同寄稿です（サンエー: 丸山氏、高原氏、宮良氏、AWS: 中島）。</p> \n<h2 id=\"temp:C:PTL1374a8915de54e31a95acafe9\">はじめに</h2> \n<p>サンエーは、1950 年創業、1970 年設立の沖縄県を拠点とする総合小売企業です。食料品、衣料品、家電、日用雑貨等の住居関連用品の小売業を主力事業とし、沖縄県内で78店舗（2025 年 10 月現在）の小売店舗および外食レストラン等のフランチャイズを展開しています。2025 年 6 月にはサンエー石垣シティをリニューアルオープンするなど、ビジネス拡大を進めています。また、2024 年度は過去最高益となる売上高 2,275 億円を達成しました。ビジネスが成長する中でシステムのモダナイゼーションへの機運も高まり、基幹システムのモダナイズを始められたサンエー様のこれまでの活動と AWS の支援を紹介します。</p> \n<h2 id=\"temp:C:PTLa98c235b9d4b48bfad8592324\">モダナイゼーションのきっかけ</h2> \n<p>AWS 中島: モダナイゼーションの取り組みのきっかけを教えてください。</p> \n<p>サンエー丸山氏: そうですね、きっかけをお伝えする前に、まずは弊社の内製化の歴史を少しご紹介させてください。もともとサンエーでは IBM AS/400 というメインフレームで社内システムを内製にて構築していました。それを約 10 年ほど前から、アプリケーションをスクラッチでつくり直しながら内製で AWS に移行し続けています。利用しているプログラミング言語がシェルスクリプト形式ということもあり、移行先のアーキテクチャは EC2 と EFS をメインで利用しています。DBを使わずにファイルを量産するプログラミング言語なので、どうしてもEFSの利用料が常に膨らんでいきます。モダナイゼーションの初期の検討では RDBMS を用いた IaaS での 3 層 Web を一度経由する案もありましたが、その構成の知見が社内に多いわけでもありませんでした。そのような背景もあり、今後、内製でスクラッチ開発するシステムでは、サーバレスを採用したいと考えていました。</p> \n<p>AWS 中島: 2021 年に参加された (<a href=\"https://aws.amazon.com/jp/blogs/psa/2021-10-angel-dojo/\">ANGEL Dojo</a>) も同じような思いがあられたからでしょうか？</p> \n<p>サンエー丸山氏: そうですね。サーバレスを知識としては知っていたものの、実際に作ってみたことがほとんどなくて。このイベントに参加して手触り感が欲しかったというのもあります。ただ、当時は今回のテーマのモダナイゼーションに本腰を入れていたというよりは、サーバレスという便利なものがある、AWSは EC2 と EFS だけじゃない、というのをチームメンバーや会社に知って欲しかったという意図の方が大きかったです。</p> \n<p>AWS 中島: なるほど、ありがとうございます。では、モダナイゼーションに本腰を入れて活動を開始されたのはいつ頃からでしょうか？</p> \n<p>サンエー丸山氏: 以前より検討はしていたのですが、2023年にパートナーの支援を受けながらポイントシステムをサーバレスで内製構築した経験がきっかけとなり、徐々に本格化し始めました。実際に組織体制を変更して、目にみえるかたちで活動し始めたのは 2024 年からだと思います。前述のコストの話だけではなく、これまでの技術スタックでは、社内からの開発要望に機能的に答えられないものが出てきたり、開発体験やシステム運用の課題に気づいたり、と、そういうものが積み重なってモダナイゼーションを本気で実行しないと先がないのではないかと思うようになりました。そういう意味ではトップダウンで発令されたとか、大きな事故があったとか、そういう大きなきっかけではないんです。でも、ビジネスをさらに成長させるためには必要だと感じていました。</p> \n<h2 id=\"temp:C:PTL0abd90614d844fce9995968e8\">モダナイゼーションへの一歩目を踏み出す</h2> \n<p>AWS 中島: では、2024 年からの活動について教えてください。</p> \n<p>サンエー丸山氏: サンエーのシステムのあり方は、今まで、世の中のベストプラクティスに則ったかたちがあまり取れていませんでした。ですので、自分たちのやり方で進める前にきちんと学んでみようと思ったんです。そこで出会ったのがストリームアラインドチームという考え方でした。マイクロサービスを技術として取り入れるだけでは成功せず、組織も変える必要があることを知ったんです。AWS との打ち合わせの中でも、そういうお話をしてくださいましたよね。</p> \n<p>AWS 中島: はい、コンウェイの法則(※)などを含めてお話しさせていただきました。チームトポロジーの本を握りしめて会話したことを覚えています。その後、本当に組織を変えられたと聞いた時は正直驚きました。<br> ※<i><i>システム（広義に定義）を設計するあらゆる組織は、組織のコミュニケーション構造をコピーした構造を持つ設計を生み出す。</i></i></p> \n<p>サンエー丸山氏: モダナイゼーションに必要なことはやろうと決めていましたので、上司に掛け合ってチームを再編しました。組織を変える目処がついた後に困ったのが EC2 + EFS からどういう形に変えていこうかということでした。サーバレスがいいなとは思っていたのですが、具体的にどういうかたちが良いのかについては不透明でした。社内エンジニアのスキルセットはバニラ (素の) html, js と sh をラップした有償製品のコマンドに偏っており、いわゆる Web アプリケーションフレームワークや汎用プログラミング言語に明るい人間もいない。そんな時、AWSからご提案をいただいたんです。</p> \n<p>AWS 中島: 貴社を日々ご支援する中で、課題は広く難易度は高いが、それらが点になっており、うまく整理がついてないように感じました。そこで、1/デベロッパートランスフォーメーション (以降 DevTx) チームから Discovery ワークをご提供することによって課題の整理と短距離の目標を定義すること。2/内製メンバーで作れるようになるきっかけ作りのためにプロトタイピング (以降 Proto) チームと協業で開発してみること。3/協業の期間は短くそれだけで作れるようになるわけではないため、プロトタイピング後、実際の開発において伴走しながらスキルアップを支援してくれる AWS パートナーのご紹介。ここまでを 1 セットでご提案しました。</p> \n<p>サンエー丸山氏: どこまでやれるのか不安もありましたが AWSの提案に乗ってみようと思いました。2024 年11月のキックオフ後、Discovery ワークを進める中で、コスト以外にも、開発テスト、運用、認証、UI など幅広い課題を整理することができました。また Proto の方をテックリードとして一緒に開発してみることで、サーバレス, REST, SPA + API, フロントエンド Framework, OSS の活用などの開発方法を実際に作りながら学ぶことができました。言語を全て TypeScript で統一したのもプロトタイピングの進め方として良かったと思います。様々な体験が得られましたが、ワークショップ後にモダナイゼーションへの投資を役員と合意することができたことはとても大きな成果でした。先述のとおり、モダナイゼーションはトップダウンで降りてきたものではないため、モダナイゼーションを進めるためには役員との合意が必須だったんです。役員合意が取れたのは 2025年3月のことでした。</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/risk.png\"><img loading=\"lazy\" class=\"alignnone size-full wp-image-166570\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/risk.png\" alt=\"\" width=\"2042\" height=\"1160\"></a><br> 図は プロトタイピングの成果物に対して DevTx チームと実施したリスクストーミングの一コマ</p> \n<p>AWS 中島: ここで、Discovery ワークとプロトタイピングにご参加いただいたメンバーの高原様と宮良様にご感想を聞いてみたいと思います。高原様いかがでしたか？</p> \n<p>サンエー高原氏: 協業で開発したのは 2 週間という短期間でしたが、モダンな開発手法やツールに触れることができて非常に勉強になりました。Git の使い方や サーバレスに関する AWS のサービスについて実際に手を動かしながら学べたのは大きな収穫でした。TypeScript は フロントエンドでもバックエンドでも CDK でも使えることを体感したため、今後もしっかりと学習していく必要があると感じています。エラーメッセージを読む習慣やドキュメントを参照する姿勢は身についたので、これを継続していきたいと思います。チーム開発の楽しさも実感できました。モブプログラミングで他の人の考え方を知ることができたり、困った時にすぐに相談できる環境があったのは心強かったです。中島さんがライブラリの調査やドキュメント読みを実際にやってみせてくださったのが非常に参考になりました。本番開発に向けて、基礎的な部分をしっかりと固めて、チームにより貢献できるよう頑張りたいと思います。</p> \n<p>AWS 中島: ありがとうございます。高原様はメンバーの中で IT 経験が一番少ない中でご参加くださいました。では、続いて宮良様、いかがでしょうか？</p> \n<p>サンエー宮良氏: 2週間をとおして、一番の大きな変化は「調べる文化」が身についたことだと思います。既存の開発言語では調べても情報が少なく、誰かに聞くか、とりあえず書いてみるという文化でしたが、モダンな開発では豊富なドキュメントやコミュニティの情報があることを実感できました。技術的には、React の概念や TypeScript の型システムなど、既存の開発言語とはまったく異なる概念に苦戦し、従来の開発経験とのギャップが大きく、理解に時間がかかりました。ただ、何かを作る楽しさを久しぶりに感じることができたのは大きな収穫でした。コードの品質についても多くの気づきがありました。Proto 担当の和田さんからのレビューコメントで、命名規則や処理の順番、可読性の重要性を学びました。「動けばいい」から「他の人が読みやすいコード」を意識する必要があると強く感じました。本番開発に向けては、基礎的な概念の理解を深めることと、自分の理解を言語化する練習が必要だと思います。生成 AI に自分の理解が合っているか質問しながら学習を進めていきたいと思います。</p> \n<p>AWS 中島: 宮良様ありがとうございます。宮良様は貴社独自の生成 AI プロンプト作成アプリの開発もしていただいているので、ぜひ基幹システムのモダナイゼーションでもご活躍いただきたいです。</p> \n<h2 id=\"temp:C:PTLed6fdf0a5ba3466aa1b9a910e\">基幹システム開発に向けて</h2> \n<p>AWS 中島: それでは、Discovery ワーク・プロトタイピング後の活動について教えてください。</p> \n<p>サンエー丸山氏: 現在、システムのモダナイゼーションに向けて社内の認証認可基盤を作り直しています。これは Discovery ワークで明らかになった認証認可の課題を解決してから、アプリケーション側をモダナイズするという方針にしたためです。認証認可基盤は AWS のパートナーに伴走いただきながら進めています。</p> \n<p>AWS 中島: 今の活動において Discovery ワークやプロトタイピングの効果を感じていただけているでしょうか？</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/wb.png\"><img loading=\"lazy\" class=\"alignnone size-full wp-image-166574\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/wb.png\" alt=\"\" width=\"992\" height=\"483\"></a></p> \n<p>サンエー丸山氏: こちらを見てみてください。これは高原さんと宮良さんが パートナー企業と議論して書いたホワイトボードです。Discovery ワークやプロトタイピング後に 2 人が追加で学んだ部分もありますが、それでも EC2 と EFS の現行のアーキテクチャの説明もおぼつかなかった 2 人が、このようにホワイトボードにアーキテクチャを描き、パートナー企業と議論する姿を見ると、ご提案いただいた活動の効果を感じています。現在開発中の認証認可基盤が完成した後、アプリケーション側のモダナイズを実施する予定です。高原さんと宮良さんにはぜひこのプロジェクトを引っ張っていってもらいたいです。</p> \n<h2 id=\"temp:C:PTLddc98e6057f6431da667b8cdb\">最後に</h2> \n<p>AWS 中島: 丸山様、高原様、宮良様、本日はありがとうございました。これからも是非 AWS と一緒にモダナイゼーションジャーニーを歩ませていただければと思っております。最後に我々アカウントチームへ今後期待することをお聞かせいただけないでしょうか？</p> \n<p>サンエー丸山氏: AWSとの協業は、単なる技術導入に留まらず、私たちの開発文化そのものを変える大きなきっかけとなりました。深く感謝しています。<br> 現在進めている基幹のモダナイゼーションは、その先に見据える AI 活用によるビジネス革新のための重要な布石です。この未踏の領域への挑戦においても、AWS には戦略的パートナーとして、最先端の知見と専門的な支援で私たちの成長を力強くリードしていただけることを期待しています。</p> \n<p>AWS 中島: ありがとうございます。ちなみに今回、”序章” ということですが、次回があると思ってよろしいでしょうか？</p> \n<p>サンエー丸山氏: そうですね。次回はモダナイズしたプロダクション環境がリリースされた後にまた寄稿させていただければと思います。</p> \n<h3>サンエー様 著者</h3> \n<table style=\"width: 100%;border-collapse: collapse\"> \n <tbody>\n  <tr> \n   <td style=\"text-align: center;padding: 20px\"> <img src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/maruyama.png\" alt=\"\" style=\"width: 300px;height: 300px;object-fit: cover\"><p></p> <h3>丸山 海理 氏</h3> </td> \n   <td style=\"text-align: center;padding: 20px\"> <img src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/takahara.png\" alt=\"\" style=\"width: 300px;height: 300px;object-fit: cover\"><p></p> <h3>高原 元来 氏</h3> </td> \n   <td style=\"text-align: center;padding: 20px\"> <img src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/miyara.png\" alt=\"\" style=\"width: 300px;height: 300px;object-fit: cover\"><p></p> <h3>宮良 一輝 氏</h3> </td> \n  </tr> \n </tbody>\n</table> \n<p></p>"
  },
  {
    "title": "AIにリファクタリングをさせて、PRのタイトルと説明文も生成する",
    "date": "2025-10-08T02:49:39.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/noppe/articles/d637794eb7583b",
    "content": "\n Codex\nCodexを使ってリポジトリの小さなリファクタリングを自動化しながら、Pull Requestのタイトルと説明文までまとめて生成する方法を紹介します。自動化の狙いは、レビュー前に整った説明を添えることで手戻りを減らすことです。\n\n\n 背景と目的\n日常的にSwiftやObjective Cの修正を繰り返す中で、細かなリファクタリングを積み重ねる作業は単調になりがちです。生成AIに任せられる部分は任せ、開発者が判断すべき箇所に集中するためのフローを構築しました。Codexの全自動モードとJSON出力機能を組み合わせると、この狙いを達成できます。\n\n 準備した環境\nCodexの..."
  },
  {
    "title": "AWS でのデジタル資産決済の処理",
    "date": "2025-10-08T01:59:27.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/processing-digital-asset-payments-on-aws-jp/",
    "content": "<p>デジタル資産決済により、迅速かつ低コストのピアツーピア取引が可能になります。<br> ブロックチェーンベースの決済システムは、従来の決済方法で企業が直面する主要な課題に対処します。<br> これには、高い処理手数料、キャッシュフローに影響を与える決済遅延、業務に影響を及ぼす複雑な国際取引などが含まれます。</p> \n<p>この投稿では、ブロックチェーンベースのデジタル資産決済システムがどのようにコストと遅延を削減できるかを説明します。<br> <a href=\"https://www.circle.com/usdc\" target=\"_blank\" rel=\"noopener noreferrer\">USDC</a>、<a href=\"https://www.paypal.com/us/digital-wallet/manage-money/crypto/pyusd\" target=\"_blank\" rel=\"noopener noreferrer\">PYUSD</a>、<a href=\"https://globaldollar.com/\" target=\"_blank\" rel=\"noopener noreferrer\">USDG</a> などのステーブルコインを例として、AWS 上でサーバーレス決済システムを構築する方法を紹介します。<br> このソリューションは、従来の決済方法に代わる低コストでスケーラブル、かつ分散型の選択肢を提供します。<br> 実装は <a href=\"http://github.com/aws-samples/sample-serverless-digital-asset-payments\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub リポジトリ</a>で公開されています。</p> \n<p>この投稿は、デジタル資産決済ソリューションの技術的な概要を示すものであり、法的助言や規制上のガイダンスを意図したものではありません。<br> 法的コンプライアンス、検証、確認の要件は管轄区域によって異なる場合があり、読者ご自身の責任です。<br> この投稿で説明されている決済ソリューションを実装または使用する前に、ご自身でデューデリジェンスを実施してください。</p> \n<h2>ブロックチェーンベースの決済のメリット</h2> \n<p>デジタル資産決済を導入する企業には、魅力的なメリットがあります。</p> \n<p><strong>コスト管理</strong></p> \n<ul> \n <li>決済処理のオーバーヘッドの削減</li> \n</ul> \n<p><strong>決済効率</strong></p> \n<ul> \n <li>ブロックチェーンの確認後に資金にアクセスできます。正確なタイミングはネットワークによって異なります (数秒から数分)</li> \n</ul> \n<p><strong>グローバル展開</strong></p> \n<ul> \n <li>複数の仲介業者を介さずに国境を越えた取引を実行し、為替手数料を排除します</li> \n</ul> \n<p><strong>トランザクションの可視性</strong></p> \n<ul> \n <li>オンチェーン検証による完全なトランザクションの透明性により、監査の効率化</li> \n</ul> \n<p>デジタル資産決済は、さまざまなステークホルダーにメリットをもたらします。</p> \n<ul> \n <li><strong>加盟店</strong> – 高速で低手数料の決済により、EC （イーコマース）を効率化します。</li> \n <li><strong>金融機関</strong> – 決済時間を短縮し、国際送金や資金管理を促進します。</li> \n <li><strong>共通のメリット</strong> – 通貨交換と決済処理の手数料を最小化します。</li> \n</ul> \n<p>最終的に、デジタル資産決済は、マーチャントや金融機関が技術革新を進め、コストを最小化し、新たな機会を引き出すのに役立ちます。</p> \n<h2>ソリューション概要</h2> \n<p>このソリューションにより、企業は Ethereum を含む Ethereum Virtual Machine (EVM) 互換ネットワーク全体で、デジタル資産による消費者からの支払いを、完全な自動化と安全な資金処理で受け入れることができます。<br> テストネットとメインネット環境の両方に対応しています。<br> <a href=\"https://github.com/aws-samples/sample-serverless-digital-asset-payments\" target=\"_blank\" rel=\"noopener noreferrer\">リポジトリ</a>では、デジタル資産支払いソリューションをデプロイして使用する手順を順を追って説明しています。</p> \n<p>このソリューションの主な機能は以下の通りです。</p> \n<p><img loading=\"lazy\" class=\"wp-image-674 alignnone\" src=\"https://d2908q01vomqb2.cloudfront.net/d54ad009d179ae346683cfc3603979bc99339ef7/2025/09/26/digital_asset_payments_features-1-1024x355.png\" alt=\"\" width=\"800\" height=\"277\"></p> \n<p>デジタル資産決済ソリューションの 3 つのコアコンポーネントについて、さらに詳しく見ていきましょう。</p> \n<h3>請求書ジェネレーター</h3> \n<p>このコンポーネントを使用すると、請求書を生成し、顧客から直接支払いを受け付けることができます。</p> \n<p>請求書ジェネレーターは以下の機能を提供します:</p> \n<ul> \n <li><strong>確定的な請求書生成</strong> – 請求書ジェネレーターは、請求書とブロックチェーンアドレスの 1 対 1 のマッピングを容易にします。これにより、各支払いが対応する請求書に正しく紐付けられることが保証されます。このシステムは、<a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithItems.html#WorkingWithItems.AtomicCounters\" target=\"_blank\" rel=\"noopener\">アトミックカウンター</a>を <a href=\"https://aws.amazon.com/dynamodb/\" target=\"_blank\" rel=\"noopener\">Amazon DynamoDB</a> に保存してウォレットインデックスを維持し、高い同時実行シナリオでもスレッドセーフなアドレス生成を維持します。</li> \n <li><strong>効率的な鍵管理</strong> – <a href=\"https://en.bitcoin.it/wiki/BIP_0032\" target=\"_blank\" rel=\"noopener\">BIP32</a>/<a href=\"https://en.bitcoin.it/wiki/BIP_0044\" target=\"_blank\" rel=\"noopener\">BIP44</a> は、階層的決定性鍵導出関数を使用して、<a href=\"https://aws.amazon.com/secrets-manager/\" target=\"_blank\" rel=\"noopener noreferrer\">AWS Secrets Manager</a> に保存された単一のプライマリシードから多数の鍵パスを生成し、複数のアカウントとアドレスの構造化された管理を可能にします。</li> \n <li><strong>UI ですぐに使える出力</strong> – 請求書ジェネレーターは、請求書の入金アドレスと Data URL 形式の Base64 エンコードされた QR コードの両方を返します。これは HTML の <code><img></code> タグに直接埋め込むことができます。</li> \n <li><strong>セキュリティとプライバシーの強化</strong> – 各顧客は一意の 1 回限りの支払いアドレスを受け取ります。これにより、アドレスの再利用を防ぎ、パブリックブロックチェーン上でユーザーのプライバシーを保護することができます。</li> \n <li><strong>簡素化された会計処理</strong> – 合理化された追跡により、会計と監査が容易になります。</li> \n</ul> \n<p>定期支払いのシナリオでは、安定した顧客識別子から支払いアドレスを導出するようにソリューションを拡張できます。<br> これにより、各顧客に対して一貫したウォレットアドレスが作成され、定期支払いが合理化され、顧客の許可リスト登録プロセスが簡素化されます。</p> \n<h3>支払いの自動検出</h3> \n<p>「The Watcher」は、自動的な更新情報とイベント駆動型通知による支払い状況の監視を可能にします。</p> \n<p>自動支払い検出コンポーネントは、以下の機能を提供します。</p> \n<ul> \n <li><strong>最適化されたデータベースクエリ</strong> – DynamoDB グローバルセカンダリインデックス (<code>status-index</code>) を使用して、<code>pending</code> 状態の請求書のみをクエリします。これにより、請求書の総量が増加してもクエリのパフォーマンスが維持され、DynamoDB の読み取り消費量が大幅に削減されます。</li> \n <li><strong>リアルタイム残高検証</strong> – ETH および ERC-20 トークンの残高を請求書の金額と照合して検証します。</li> \n <li><strong>自動ステータス更新</strong> – 十分な支払いが検出されると、請求書を自動的に <code>paid</code> としてマークします。(デフォルトでは、このソリューションはファイナリティやリオーグを考慮しません。より強力な保証が必要な場合は、Watcher の <code>eth_getBalance</code> に <code>finalized</code> ブロックタグを渡すことができます。)</li> \n <li><strong>即時通知</strong> – 支払い確認時に Amazon SNS を通じて加盟店への通知をトリガーします。</li> \n</ul> \n<h3>資金照合</h3> \n<p>請求書の支払いを受け取った後、資金は安全な管理のために指定された財務ウォレット (できれば高度にセキュアなコールドウォレット) に自動的に移動されます。</p> \n<p>これにより、数分以内にオフラインで支払いが安全に処理され、加盟店が選択したウォレットへの資金集約のための監査可能なメカニズムがサポートされます。</p> \n<p>ファンド照合プロセスは、以下の機能を提供します。</p> \n<ul> \n <li><strong>DynamoDB Streams によるトリガー</strong> – フィルタリングされたストリームトリガーを通じて確認済みの支払いを検出します (ステータスが <code>paid</code>)。ネットワークの混雑や一時的なブロックチェーンの問題に対処するための組み込みメカニズムを備えています。</li> \n <li><strong>ガスの最適化</strong> – コスト効率の高いトランザクションのために、ネットワークのガス価格を動的に計算します。</li> \n <li><strong>ガス補充メカニズム</strong> – 専用のホットウォレット「ガスタンク」が、ネットワークのネイティブトークン (例: ETH) の準備金を保持します。これは、ERC-20 インボイスを補充するためだけに使用され、最小限のガス料金で コールドストレージの金庫に集約できるようにします。</li> \n <li><strong>安全な転送</strong> – 秘密鍵はメモリ内で決定論的に導出され、保存されません。これらは個々のインボイスからの転送を実行するために使用されます。これは Lambda 内で行われ、AWS は<a href=\"https://aws.amazon.com/trust-center/operator-access/\" target=\"_blank\" rel=\"noopener noreferrer\">オペレーターによるアクセスはありません</a>。</li> \n <li><strong>ステータスの更新</strong> – 正常に完了すると、インボイスのステータスを <code>swept</code> に更新します。</li> \n</ul> \n<p>次の図は、ソリューションのアーキテクチャを示しています。<br> このアーキテクチャは、サーバーレスなデジタル資産決済処理の PoC （ Proof of Concept ）を目的としており、本番環境で使用できる状態ではありません。<br> セキュリティ、信頼性、コンプライアンス、監査可能性に関する本番環境の基準を満たすには、追加の機能強化が必要です。</p> \n<p><img loading=\"lazy\" class=\"alignnone wp-image-682 size-full\" src=\"https://d2908q01vomqb2.cloudfront.net/d54ad009d179ae346683cfc3603979bc99339ef7/2025/09/26/Payments-Digital-Assets-with-legend-1.png\" alt=\"\" width=\"2167\" height=\"1297\"></p> \n<p>以下のフローの各ステップの番号は、Ethereum ネットワーク上でのステーブルコイン決済を示しており、上記のアーキテクチャ図の番号に対応しています。</p> \n<ol> \n <li>加盟店は、<a href=\"https://aws.amazon.com/api-gateway/\" target=\"_blank\" rel=\"noopener noreferrer\">Amazon API Gateway</a> が提供する <code>/create-invoice</code> REST API へのリクエストを通じて、ステーブルコインのインボイスを作成します。これは API キーを使用して保護されています。</li> \n <li><a href=\"https://aws.amazon.com/lambda/\" target=\"_blank\" rel=\"noopener noreferrer\">AWS Lambda</a> 関数である Invoice Generator がトリガーされ、<a href=\"https://aws.amazon.com/secrets-manager/\" target=\"_blank\" rel=\"noopener noreferrer\">AWS Secrets Manager</a> からニーモニック<a href=\"https://en.bitcoin.it/wiki/Seed_phrase\" target=\"_blank\" rel=\"noopener noreferrer\">シードフレーズ</a>を取得します。シードフレーズは、インボイスに対応するキーペアを作成 (および復元) するために必要です。</li> \n <li>Invoice Generator は Amazon DynamoDB のアトミックカウンターをインクリメントします。アトミックカウンターの値はインデックスを表します。これはシードフレーズと共に使用され、特定の支払いに対する<a href=\"https://www.investopedia.com/terms/h/hd-wallet-hierarchical-deterministic-wallet.asp\" target=\"_blank\" rel=\"noopener noreferrer\">階層的決定性 (HD)</a> ウォレットアドレスを決定論的に導出します。</li> \n <li>Invoice Generator Lambda 関数は新しいインボイスを作成し、<code>status: pending</code> として DynamoDB に保存します。データは <a href=\"https://aws.amazon.com/kms/\" target=\"_blank\" rel=\"noopener noreferrer\">AWS Key Management Service</a> (AWS KMS) を使用して保管時に自動的に暗号化されます。</li> \n <li>前のステップで生成された QR コードには、送金先アドレス、通貨、金額がエンコードされており、加盟店に返されます。加盟店は QR コードを顧客と共有します。顧客は、入金アドレスに適切な金額の資金を送信することで、ステーブルコインの支払いを行います。</li> \n <li><a href=\"https://aws.amazon.com/eventbridge/\" target=\"_blank\" rel=\"noopener noreferrer\">Amazon EventBridge</a> スケジュールを通じて、Watcher という Lambda 関数が毎分トリガーされます。Watcher は DynamoDB から保留中のインボイスを取得し、提供された RPC エンドポイントを通じて行われた支払いを確認します。支払いが到着した場合、インボイスを <code>paid</code> に更新します。</li> \n <li>Watcher Lambda 関数は、<a href=\"https://aws.amazon.com/sns/\" target=\"_blank\" rel=\"noopener noreferrer\">Amazon Simple Notification Service</a> (Amazon SNS) を使用して、加盟店に支払い確認を送信します。</li> \n <li><code>CryptoInvoices</code> データベースで支払いが検出されると (ステータスが <code>paid</code> に遷移すると)、<a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.html\" target=\"_blank\" rel=\"noopener noreferrer\">Amazon DynamoDB Streams</a> を使用してイベントが発行されます。これにより Lambda Sweeper 関数がトリガーされます。</li> \n <li>Sweeper 関数は資金の集約トランザクションに必要なガスを計算し、これが ERC20 インボイスであるため Eth をリクエストします。</li> \n <li>十分な Eth が利用可能になると、Sweeper 関数はインボイスに関連付けられたトークンをオフラインの保管用ウォレットに送信します。Sweeper 関数は、HD ウォレットのシードフレーズをリクエストし、トランザクションに署名するための秘密鍵を導出することでこれを行います。その後、インボイスは <code>CryptoInvoices</code> データベースで <code>swept</code> としてマークされます。資金の集約プロセス中にエラーが発生した場合、失敗がログに記録され、最大 3 回の再試行が行われます。</li> \n <li>加盟店は、API Gateway を使用して公開された REST エンドポイントを通じてインボイスを管理できます (インボイスの現在のステータスを表示したり、保留中のインボイスをキャンセルしたりできます)。</li> \n</ol> \n<p>支払い、支払い監視、資金の回収フローの詳細な図解については、<a href=\"https://github.com/aws-samples/sample-serverless-digital-asset-payments#technical-payment-flow\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub リポジトリ</a>を参照してください。</p> \n<h2>まとめ</h2> \n<p>このサーバーレスソリューションは、AWS 上でデジタル資産決済を処理するための安全で効率的、かつコスト効率の高いシステムを提供します。<br> AWS のサービスとブロックチェーン技術を活用することで、組織は決済処理コストを削減し、資金へのより迅速なアクセスを実現し、キャッシュフローを向上させ、グローバルに事業を展開できます。</p> \n<p>本記事は、2025 年 10 月 2 日に公開された <a href=\"https://aws.amazon.com/jp/blogs/web3/processing-digital-asset-payments-on-aws/\">Processing digital asset payments on AWS</a> を翻訳したものです。翻訳は Blockchain Prototyping Engineer の 深津颯騎 が担当しました。</p> \n<p><a href=\"http://github.com/aws-samples/sample-serverless-digital-asset-payments\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a> で完全なコードを確認し、AWS 上で安全なサーバーレスデジタル資産決済ソリューションの構築を始めましょう。</p> \n<h3>著者について</h3> \n<footer> \n <div class=\"blog-author-box\"> \n  <div class=\"blog-author-image\">\n   <img loading=\"lazy\" class=\"aligncenter size-full wp-image-29797\" src=\"https://d2908q01vomqb2.cloudfront.net/d54ad009d179ae346683cfc3603979bc99339ef7/2025/08/28/simongo.png\" alt=\"Simon Goldberg\" width=\"120\" height=\"160\">\n  </div> \n  <h3 class=\"lb-h4\">Simon Goldberg</h3> \n  <p><a href=\"https://www.linkedin.com/in/simon-go/\" target=\"_blank\" rel=\"noopener\">Simon</a> は、AWS のブロックチェーン/Web3 スペシャリストソリューションアーキテクトです。仕事以外では、音楽制作、読書、クライミング、テニス、ハイキング、コンサート鑑賞、Web3 テクノロジーの研究を楽しんでいます。</p> \n </div> \n <div class=\"blog-author-box\"> \n  <div class=\"blog-author-image\">\n   <img loading=\"lazy\" class=\"aligncenter size-full wp-image-29797\" src=\"https://d2908q01vomqb2.cloudfront.net/d54ad009d179ae346683cfc3603979bc99339ef7/2025/08/28/david.jpeg\" alt=\"David Dornseifer\" width=\"120\" height=\"160\">\n  </div> \n  <h3 class=\"lb-h4\">David Dornseifer</h3> \n  <p><a href=\"https://www.linkedin.com/in/daviddornseifer/\" target=\"_blank\" rel=\"noopener\">David</a> は、AWS のブロックチェーンおよびコンフィデンシャルコンピュートアーキテクトです。彼は、お客様がエンドツーエンドのブロックチェーンおよびコンフィデンシャルコンピュートソリューションの設計、開発、スケーリングを支援することに注力しています。主な専門分野は、デジタル資産の保管と鍵管理ソリューションです。</p> \n </div> \n</footer>"
  },
  {
    "title": "Rustでセキュリティsandboxツールを作った",
    "date": "2025-10-08T00:00:01.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/techlead/articles/2025-10-05-rust-sandbox-tool-mori",
    "content": "\n はじめに\nども\n最近、仕事場にClaude Codeを導入して、チームのパフォーマンスが爆増して仕事が減ってきたゴリラです。\nClaude Codeを導入する際に便利なMCP(serenaやcontext7、playwrightなど)をいくつか入れたんですが、セキュリティちゃんとしないとねという話しになり、それがきっかけでセキュリティsandboxツールのmoriを作った話しです。\n\nhttps://github.com/skanehira/mori\n\n mori(杜)とは\nセキュリティといっても、様々な観点で対策を打つ必要がありますが、今回開発したmoriはsandbox-exec..."
  },
  {
    "title": "vercel/next.js – v15.6.0-canary.52",
    "date": "2025-10-07T23:45:10.000Z",
    "source": "GitHub",
    "url": "https://github.com/vercel/next.js/releases/tag/v15.6.0-canary.52",
    "content": "### Core Changes\n\n- [Breaking] Bump sass-loader to v16: #84387\n- Update cases for build complete with adapters: #84361\n- Turbopack: delete .next folder before throwing due to \"pages/app directory must be in the same folder\": #84553\n- [mcp] change get-project-path to get-project-metadata: #84619\n\n### Misc Changes\n\n- Update Rspack development test manifest: #84592\n- Update Rspack production test manifest: #84593\n- Turbopack: Remove workaround in hyper for rustc miscompilation bug on macos intel: #84578\n- Turbopack: add manual worker count override: #84454\n- Turbopack: don't ignore TS parse errors: #84597\n- Add middleware to routes order doc: #84618\n\n### Credits \n\nHuge thanks to @vercel-release-bot, @bgw, @devjiwonchoi, @mischnic, @ijjk, @sokra, and @huozhi for helping!\n"
  },
  {
    "title": "AWS Common Runtime で Amazon S3 のスループットを高速化",
    "date": "2025-10-07T22:50:05.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/improving-amazon-s3-throughput-for-the-aws-cli-and-boto3-with-the-aws-common-runtime/",
    "content": "<p>このブログは 2023 年 11 月 27 日に James Bornholt、Abhinav Goyal、Jonathan Henson、Andrew Kutsy によって執筆された内容を日本語化したものです。原文は<a href=\"https://aws.amazon.com/jp/blogs/storage/improving-amazon-s3-throughput-for-the-aws-cli-and-boto3-with-the-aws-common-runtime/\" target=\"_blank\" rel=\"noopener\">こちら</a>を参照してください。</p> \n<p>データはあらゆる機械学習パイプラインの中心にあります。基盤モデル (FM) の事前トレーニング、ビジネス固有のデータによる FM のファインチューニング、推論クエリの実行など、機械学習ライフサイクルのあらゆる段階においてコンピューティングリソースを常時稼働させて有用な作業を実行できるようにするには、低コストで高性能なデータストレージが必要です。お客様はトレーニングデータやモデルチェックポイントの保存に <a href=\"https://aws.amazon.com/jp/s3/\" target=\"_blank\" rel=\"noopener\">Amazon Simple Storage Service (Amazon S3)</a> を使用することが推奨されています。理由として弾力性、複数のテラビット/秒にスケールする性能、そして S3 Intelligent-Tiering のようなストレージクラスによってアクセスパターンが変化した際に自動的にストレージコストを節約できるからです。</p> \n<p>Amazon S3 との間のデータ転送を自動的に高速化し、機械学習パイプラインの基盤をさらに強化する <a href=\"https://aws.amazon.com/jp/cli/\" target=\"_blank\" rel=\"noopener\">AWS Command Line Interface (AWS CLI)</a> と <a href=\"https://aws.amazon.com/jp/sdk-for-python/\" target=\"_blank\" rel=\"noopener\">AWS SDK for Python (Boto3)</a> の新しいアップデートを発表しました。AWS CLI と Boto3 は、Amazon S3 との間の高スループットデータ転送を提供するために特別に設計・構築された AWS Common Runtime (CRT) S3 クライアントと統合されました。この統合は現在、Amazon EC2 <a href=\"https://aws.amazon.com/jp/ec2/instance-types/trn1/\" target=\"_blank\" rel=\"noopener\">Trn1</a>、<a href=\"https://aws.amazon.com/jp/ec2/instance-types/p4/\" target=\"_blank\" rel=\"noopener\">P4d</a>、<a href=\"https://aws.amazon.com/jp/ec2/instance-types/p5/\" target=\"_blank\" rel=\"noopener\">P5</a> インスタンスタイプではデフォルトで有効化されており、他のインスタンスタイプではオプトインとして有効化することができます。</p> \n<h2>AWS Common Runtime とは何か</h2> \n<p>Amazon S3 は、どの HTTP クライアントからもアクセスできるシンプルな REST API で、お客様から好評をいただいています。ただし、大量のデータを扱うアプリケーションで最高のパフォーマンスを得るには、リクエストの並列化、タイムアウト、再試行、バックオフなどの<a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/optimizing-performance.html\" target=\"_blank\" rel=\"noopener\">パフォーマンスのベストプラクティス</a>を実装する必要があります。数年前、私たちはこれらのパターンを各 AWS SDK で再実装していて、お客様も独自のアプリケーションにこれらのパターンを実装しなければならないことに気付きました。私たちは、こうした一般的な設計パターンを再実装することなく、どのアプリケーションからでも簡単に S3 の伸縮自在なパフォーマンスにアクセスできるようにしたいと考えていました。</p> \n<p>このポータブルなパフォーマンスを実現するために、<a href=\"https://docs.aws.amazon.com/sdkref/latest/guide/common-runtime.html\" target=\"_blank\" rel=\"noopener\">AWS Common Runtime (CRT)</a> を構築しました。CRT は C で書かれたオープンソースライブラリの集合体で、高性能 HTTP クライアントや暗号化ライブラリなど、AWS サービスとやり取りするための共通機能を実装しています。CRT ライブラリは連携して AWS サービスに高速で信頼性の高いクライアントエクスペリエンスを提供します。Amazon S3 の場合、CRT にはネイティブ S3 クライアントが含まれており、自動リクエストの並列化、リクエストのタイムアウトと再試行、接続の再利用と管理を実装して、ネットワークインターフェイスの過負荷を回避します。たとえば、S3 から 1 つの巨大なオブジェクトをダウンロードする場合、CRT クライアントは複数のバイト範囲を自動的に並行してダウンロードするため、スループットが向上し、ネットワークインターフェースを上手に活用します。</p> \n<p>CRT は <a href=\"https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/crt-based-s3-client.html\" target=\"_blank\" rel=\"noopener\">Java</a> や <a href=\"https://docs.aws.amazon.com/sdk-for-cpp/v1/developer-guide/examples-s3-crt.html\" target=\"_blank\" rel=\"noopener\">C++</a> を含む複数の AWS SDK で既に本番環境で利用可能であり、以前は AWS CLI の実験的なオプションとして提供されていました。また、オープンソースファイルクライアントである <a href=\"https://aws.amazon.com/jp/s3/features/mountpoint/\" target=\"_blank\" rel=\"noopener\">Mountpoint for Amazon S3</a> の基盤でもあります。 私たちはCRTをTrn1、P4d、P5 EC2 インスタンスタイプの AWS CLI と Boto3 で提供を開始しました。これらのインスタンスタイプは大きな CPU とネットワークインターフェースを持ち、これらのパフォーマンス設計パターンから最も恩恵を受けることができます。 他のインスタンスタイプについては、AWS CLI または Boto3 アプリケーションで CRT を使用するように選択すると、多くの場合、自動的にパフォーマンス向上が得られます。</p> \n<h2>ML パイプラインのパフォーマンス向上</h2> \n<p>AWS Common Runtime で実現できる可能性のあるパフォーマンス向上を実証するために、ML ライフサイクルの各ステップを表す 4 つのベンチマークデータセットを収集しました：</p> \n<ul> \n <li>Caltech-256：<a href=\"https://data.caltech.edu/records/nyy15-4j048\" target=\"_blank\" rel=\"noopener\">画像データセット</a>で、平均 40 kB サイズの 30,607 の小さな画像ファイルを含み、総データセットサイズは 1.1 GB です。</li> \n <li>Caltech-256-WebDataset：同じ Caltech 256 の画像データセットですが、WebDataset 形式を使用して保存されており、複数の画像を 100 MB のシャードオブジェクトにまとめています。シャード化されたデータセットは、ML トレーニングで Amazon S3 を使用する際に、より高いパフォーマンスを達成できることがよくあります。</li> \n <li>C4-en：<a href=\"https://commoncrawl.org/\" target=\"_blank\" rel=\"noopener\">Common Crawl corpus</a>に基づく C4 データセットの英語サブセットで、320 MB の 1,024 ファイルを含みます。</li> \n <li>Checkpoint：単一の 7.6 GB PyTorch チェックポイントファイルで、大規模 ML モデルのシャード化されたチェックポイントを代表しています。</li> \n</ul> \n<p>AWS CLIを使用して、これらの各データセットを trn1n.32xlarge EC2 インスタンスからアップロードおよびダウンロードしました。AWS CRTが有効になっていない場合と有効になっている場合の両方です。結果は次のとおりです：</p> \n<p><img loading=\"lazy\" class=\"aligncenter size-full wp-image-19674\" src=\"https://d2908q01vomqb2.cloudfront.net/e1822db470e60d090affd0956d743cb0e7cdf113/2023/11/25/Benchmark-datasets-representative-of-ML-lifecycle-steps.png\" alt=\"Benchmark datasets representative of ML lifecycle steps\" width=\"1031\" height=\"1470\"></p> \n<p>CRT は、AWS CLI の最新リリースへの更新以外の追加作業なしで、これらのベンチマーク全体で 2 ～ 6 倍のパフォーマンス向上を実現します。CRT を有効にして Boto3 を使用する Python アプリケーションでも、同様のパフォーマンス向上が見られました。</p> \n<h2>アプリケーションで CRT を使い始める</h2> \n<p>AWS CLI で CRT を使用するには、まず <a href=\"https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html\" target=\"_blank\" rel=\"noopener\">AWS CLI の最新バージョンをインストールしてください。</a>まだ <a href=\"https://docs.aws.amazon.com/cli/latest/userguide/cliv2-migration.html\" target=\"_blank\" rel=\"noopener\">AWS CLI のバージョン 2 にアップデート</a>していない場合は絶好の機会です。CRT との統合はバージョン 2 でのみ利用可能です。Trn1、P4d、または P5 EC2 インスタンスで実行している場合はこれだけで準備完了です — aws s3 sync のような CLI コマンドを使用する際に、CRT はデフォルトで有効になります。その他のインスタンスタイプでは、次のコマンドを実行して CRT を有効にすることができます：</p> \n<pre>aws configure set s3.preferred_transfer_client crt</pre> \n<p>Boto3 で CRT を使用するには、まず追加の crt 機能を含む Boto3 をインストールしていることを確認してください。たとえば、pip を使用してインストールする場合は、以下を実行します：</p> \n<pre>pip install boto3[crt]</pre> \n<p>Trn1、P4d、および P5 インスタンスでは、Boto3 が crt 機能付きでインストールされると、upload_file と download_file の呼び出しに自動的に CRT が使用されます。たとえば、CRT を使用してファイルを S3 にアップロードするには、以下を実行します：</p> \n<pre>import boto3\ns3 = boto3.client('s3')\ns3.upload_file('/tmp/hello.txt', 'doc-example-bucket', 'hello.txt')</pre> \n<p>また、s3transfer パッケージを使用して Boto3 で CRT にアクセスできますが、このパッケージはまだ一般提供を開始されておらず、将来変更される可能性があります。</p> \n<h2>パフォーマンスチューニング</h2> \n<p>CRT は S3 を使用するアプリケーションのパフォーマンスを自動的に最適化します。デフォルト設定では多くの状況で速度が向上します。これらのデフォルトでは、CPU トポロジー、メモリ量、<a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/enhanced-networking-ena.html\" target=\"_blank\" rel=\"noopener\">Elastic Network Adapter (ENA)</a> インターフェイスの数とレイアウトなど、実行中のインスタンスタイプの仕様に基づいて CRT が自動的に設定されます。これらの詳細に基づいて、 CRTはS3リクエストの並列化戦略（並列接続の数、各リクエストのサイズ、S3 IPアドレスごとのリクエスト数など）を選択します。</p> \n<p>CRT 転送で使用されるネットワーク帯域幅の量を制限する場合など、状況によってはこれらのデフォルトをオーバーライドしたい場合があります。AWS CLI で CRT を使用する場合は、target_bandwidth パラメーターを設定することでデフォルトをオーバーライドできます。たとえば、転送を 5 ギガビット/秒に制限するには、以下を実行します：</p> \n<pre>aws configure set s3.target_bandwidth 5Gb/s</pre> \n<h2>注意事項とオプトアウト</h2> \n<p>CLI と Boto3 用の CRT の今回のリリースでは、多くの ML アプリケーションのパフォーマンスが向上しますが、注意すべき点が 3 つあります。</p> \n<h3>マルチプロセス実行</h3> \n<p>CRT は、S3 リクエストを複数のスレッドで並行して行うことで、高スループットのデータ転送を実現します。これは、一度に 1 つの S3 クライアントしか使用しないアプリケーションに最適です。これらのスレッドはインスタンスの vCPU に分散する可能性があるためです。ただし、それぞれが独自の S3 クライアントを作成する複数のプロセスを使用する場合、これらのスレッドは互いに競合して S3 のパフォーマンスを低下させる可能性があります。また、これらの複数のクライアントがネットワーク帯域幅をめぐって競合し、輻輳が発生してパフォーマンスが低下する場合もあります。</p> \n<p>AWS CLI と Boto3 の CRT 統合では、複数のプロセスが CRT ベースの S3 クライアントを作成していることを自動的に検出し、このような場合は非 CRT ベースの S3 クライアントにフォールバックします。このフォールバックにより、CRT クライアントが 1 つだけ存在するようになるため、システム上で競合が発生するリスクが軽減されますが、その結果、他のクライアントのパフォーマンスが低下する可能性があります。この制限は複数の S3 クライアントにのみ影響します。1 つの S3 クライアントを同じプロセス内の複数のスレッドで共有することも、同じ AWS CLI 呼び出し内の多数の S3 転送で共有することもできます。</p> \n<p>アプリケーションが複数のプロセスで独自の S3 クライアントを作成してしまうパターンは主に 2 つあります。1 つ目は、AWS CLI の呼び出しを複数同時に実行すると、各 CLI プロセスに独自の S3 クライアントが存在することになります。たとえば、以前に AWS CLI を parallel や xargs -P ユーティリティを実行してパフォーマンスを向上させたことがある場合は、複数の AWS CLI プロセスを使用し、それぞれに独自の S3 クライアントを用意することになります。新しい CRT 統合では、CLI プロセスを 1 つだけ使用し、CLI に転送の並列処理を任せることをお勧めします。2 つ目に、<a href=\"https://pytorch.org/\" target=\"_blank\" rel=\"noopener\">PyTorch</a> のような ML フレームワークで Boto3 を使用する場合、データをロードするために複数のワーカープロセス （たとえば、PyTorch の <a href=\"https://docs.pytorch.org/docs/stable/data.html\" target=\"_blank\" rel=\"noopener\">DataLoader</a> の num_workers 引数） を使用することになります。</p> \n<h3>マルチリージョンおよびクロスリージョンアクセス</h3> \n<p>AWS CLI と Boto3 の CRT 統合は、現在 S3 バケットの自動リージョン検出をサポートしていません。つまり、アプリケーションがインスタンスが実行されているリージョンとは異なるリージョンの S3 バケットにアクセスする場合、ターゲットリージョンを手動で指定する必要があります。これを行うには、AWS CLI の –region argument を使用するか、AWS CLI と Boto3 の両方に AWS_REGION 環境変数を設定します。Boto3 の場合、リージョンはクライアントの作成時に設定されるため、この制限により、1 つの S3 クライアントは 1 つのリージョンのバケットにしかアクセスできないことにもなります。複数のリージョンのバケットにアクセスする必要がある場合は、複数のクライアントを作成する必要があります。</p> \n<h3>Transfer コンフィグレーション</h3> \n<p>Boto3 の CRT 統合は、クライアントを転送ごとに設定するための <a href=\"https://boto3.amazonaws.com/v1/documentation/api/latest/reference/customizations/s3.html#boto3.s3.transfer.TransferConfig\" target=\"_blank\" rel=\"noopener\">TransferConfig</a> API をサポートしていません。代わりに、CRT はネットワーク帯域幅を最大化するようにクライアントを自動的に設定し、同じプロセスで同時に実行される S3 リクエストすべてでその帯域幅を共有します。</p> \n<h3>CRT からのオプトアウト</h3> \n<p>これらの制限のいずれかを回避する必要がある場合は、CRT をオプトアウトできます。AWS CLI の CRT 統合を無効にするには、以下を実行します：</p> \n<pre>aws configure set s3.preferred_transfer_client classic</pre> \n<p>同様に、Boto3 の CRT S3 統合を無効にするには、boto3 転送コールで使用するときに TransferConfig の preferred_transfer_client を classic に設定してください。</p> \n<pre><code class=\"lang-python\">from boto3.s3.transfer import TransferConfig\nconfig = TransferConfig(preferred_transfer_client='classic')\nclient = boto3.client('s3', region_name='us-west-2')\nclient.upload_file('/tmp/file', Bucket='doc-example-bucket',\nKey='test_file', Config=config)</code></pre> \n<h2>まとめと今後の改善点</h2> \n<p>Amazon S3 は伸縮自在でパフォーマンスが高いため、ML トレーニングデータやモデルチェックポイントを保存するのに最適です。AWS CLI と Boto3 の改善により、ML パイプラインで S3 にアクセスする際のパフォーマンスをさらに簡単に最適化できるようになり、ジョブをより早く完了し、コストを削減できるようになりました。将来的には、AWS Common Runtime をデフォルトでより多くのインスタンスタイプで有効にし、よりきめ細かな調整機能を公開して、ワークロードのパフォーマンスをさらに最適化できるようにする予定です。<a href=\"https://github.com/aws/aws-cli/tree/v2\">AWS CLI</a>、<a href=\"https://github.com/boto/boto3\" target=\"_blank\" rel=\"noopener\">Boto3</a>、<a href=\"https://github.com/awslabs/aws-c-s3\" target=\"_blank\" rel=\"noopener\">AWS Common Runtime</a> はすべてオープンソースプロジェクトであり、それぞれの GitHub リポジトリに関するフィードバックをお待ちしています。</p> \n<footer> \n <div class=\"blog-tag-list\">\n  TAGS:\n  <br> \n  <a href=\"https://aws.amazon.com/blogs/storage/tag/amazon-simple-storage-service-amazon-s3/\" rel=\"tag\">Amazon Simple Storage Service (Amazon S3)</a>, \n  <a href=\"https://aws.amazon.com/blogs/storage/tag/aws-cloud-storage/\" rel=\"tag\">AWS Cloud Storage</a>, \n  <a href=\"https://aws.amazon.com/blogs/storage/tag/aws-open-source/\" rel=\"tag\">AWS Open Source</a>, \n  <a href=\"https://aws.amazon.com/blogs/storage/tag/aws-reinvent/\" rel=\"tag\">AWS re:Invent</a>, \n  <a href=\"https://aws.amazon.com/blogs/storage/tag/machine-learning/\" rel=\"tag\">machine learning</a>\n </div> \n <div class=\"blog-author-box\"> \n  <div class=\"blog-author-image\">\n   <img src=\"https://d2908q01vomqb2.cloudfront.net/e1822db470e60d090affd0956d743cb0e7cdf113/2021/10/20/image-28.png\" alt=\"James Bornholt\" width=\"125\">\n  </div> \n  <h3 class=\"lb-h4\">James Bornholt</h3> \n  <p>James Bornholt は、Amazon S3 の自動推論に取り組んでいます。</p> \n </div> \n <div class=\"blog-author-box\"> \n  <div class=\"blog-author-image\">\n   <img src=\"https://d2908q01vomqb2.cloudfront.net/e1822db470e60d090affd0956d743cb0e7cdf113/2023/11/26/Abhinav-Goyal-1024x1020.jpg\" alt=\"Abhinav Goyal\" width=\"125\">\n  </div> \n  <h3 class=\"lb-h4\">Abhinav Goyal</h3> \n  <p>Abhinav Goyal は、AWS の SDK およびツールチームのエンジニアリングマネージャーで、Common Runtime Tools、AWS Rust SDK、AWS C++ SDK を担当しています。AWS に入社する前は、さまざまな銀行アプリケーション向けの大規模分散システムを構築した 20 年以上の技術リーダーシップの経験があります。余暇には、Abhinav は読書をしたり、卓球をしたり、長い散歩をしたりするのが好きです。彼はデリーのインド工科大学（インド）で学士号を取得しています。</p> \n </div> \n <div class=\"blog-author-box\"> \n  <div class=\"blog-author-image\">\n   <img src=\"https://d2908q01vomqb2.cloudfront.net/e1822db470e60d090affd0956d743cb0e7cdf113/2023/11/27/henso.jpeg\" alt=\"Jonathan Henson\" width=\"125\">\n  </div> \n  <h3 class=\"lb-h4\">Jonathan Henson</h3> \n  <p>Jonathan Henson は AWS の主任ソフトウェアエンジニアで、AWS SDK のランタイムとアーキテクチャを専門としています。</p> \n </div> \n <div class=\"blog-author-box\"> \n  <div class=\"blog-author-image\">\n   <img src=\"https://d2908q01vomqb2.cloudfront.net/e1822db470e60d090affd0956d743cb0e7cdf113/2021/11/30/Andrew-Kutsy.jpg\" alt=\"Andrew Kutsy\" width=\"125\">\n  </div> \n  <h3 class=\"lb-h4\">Andrew Kutsy</h3> \n  <p>Andrew は Amazon S3 のプロダクトマネージャーです。彼は 2016 年に Amazon に入社し、ユーザーがAWS を使用する革新的な方法について学ぶためにユーザーと話すのが大好きです。彼はコーヒーに夢中で、旅行が好きで、現在、世界で最高のクロワッサンを探しています。</p> \n </div> \n</footer>"
  },
  {
    "title": "vercel/next.js – v15.6.0-canary.51",
    "date": "2025-10-07T17:39:59.000Z",
    "source": "GitHub",
    "url": "https://github.com/vercel/next.js/releases/tag/v15.6.0-canary.51",
    "content": "### Core Changes\n\n- Build: Highlight TypeScript and ESLint being run clearer: #84606\n\n### Credits \n\nHuge thanks to @timneutkens for helping!\n"
  },
  {
    "title": "vercel/next.js – v15.6.0-canary.50",
    "date": "2025-10-07T16:28:31.000Z",
    "source": "GitHub",
    "url": "https://github.com/vercel/next.js/releases/tag/v15.6.0-canary.50",
    "content": "### Core Changes\n\n- [Cache Components] Schedule work on timeouts: #84344\n- [dev] Define request ID for RSC requests on the client: #84605\n- fix(cache-tags): add `/index` to implicit tags and adjust `revalidatePath()`: #84586\n\n### Credits \n\nHuge thanks to @gnoff, @unstubbable, and @styfle for helping!\n"
  },
  {
    "title": "vercel/next.js – v15.6.0-canary.49",
    "date": "2025-10-07T14:41:55.000Z",
    "source": "GitHub",
    "url": "https://github.com/vercel/next.js/releases/tag/v15.6.0-canary.49",
    "content": "### Core Changes\n\n- Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006`: #84589\n\n### Misc Changes\n\n- fix(cna): use correct postcss plugins syntax: #79949\n- Turbopack: absolute requests in webpack loader: #84575\n\n### Credits \n\nHuge thanks to @stefanprobst and @mischnic for helping!\n"
  },
  {
    "title": "AWS WAF で AI ボットを管理し、セキュリティを強化する方法",
    "date": "2025-10-07T11:01:49.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/how-to-manage-ai-bots-with-aws-waf-and-enhance-security/",
    "content": "<p>本稿は、2025 年 8 月 1 日に公開された “<a href=\"https://aws.amazon.com/jp/blogs/networking-and-content-delivery/how-to-manage-ai-bots-with-aws-waf-and-enhance-security/\" target=\"_blank\" rel=\"noopener\">How to manage AI Bots with AWS WAF and enhance security</a>” を翻訳したものです。</p> \n<p>最初の Web クローラーは 1993 年に Web のサイズを測定する目的で作成されましたが、現在ではエージェント型 AI を搭載した最新のボットへと進化しています。今日のインターネットは、AI 関連タスクをサポートするためにアプリケーションと対話する自動化された AI ボットによって、ますます占有され支配されるようになっています。</p> \n<p>私たちは AI ボットを 3 つのタイプに分類しました：</p> \n<ol> \n <li><strong>AI スクレイパー</strong>: AI モデルをトレーニングするために、アプリケーションから体系的にデータを収集します。</li> \n <li><strong>AI ツール</strong> : 関数呼び出しを使用して、AI アプリケーション内でアプリケーションのデータを表示します。</li> \n <li><strong>AI エージェント</strong> : 複雑なタスクを実行するために、アプリケーションを自律的にナビゲートし、動的に対話できます。</li> \n</ol> \n<p>AI ボットの中には、面倒なタスクを自動化するといった価値あるサービスを提供するものもありますが、悪意のあるボットは Web アプリケーションの所有者や運用者にとって深刻な問題となる可能性があります。悪意のあるボットは過剰なトラフィックでサーバーを圧倒し、パフォーマンスの低下やシステム停止を引き起こします。こうしたボットを野放しにすると、セキュリティが侵害されるだけでなく、ユーザーからの信頼を失い、ブランドイメージを損なうことにもつながります。</p> \n<p>この記事では、AI ボットが引き起こすさまざまな問題について考察し、<a href=\"https://aws.amazon.com/jp/waf/\" target=\"_blank\" rel=\"noopener\">Amazon Web Services (AWS) WAF</a> を使用して AI ボットを検出・管理するさまざまな手法について学びます。</p> \n<h2>前提条件</h2> \n<p>本記事では、アプリケーションへの AI ボットのアクティビティを監視・管理する最前線の防御として、AWS WAF に焦点を当てています。AWS WAF による保護をまだ有効化していない場合は、まず <a href=\"https://docs.aws.amazon.com/ja_jp/waf/latest/developerguide/nsd-chapter.html\" target=\"_blank\" rel=\"noopener\">AWS Shield network security director</a> を使って脅威の全体像を可視化することから始めましょう。これにより、AWS WAF で保護されていないリソースを特定できます。</p> \n<p>その後、ワンクリックセキュリティ統合機能を使用して、初期セキュリティ体制を構築できます。この機能は、最も一般的な脅威からアプリケーションを保護するルールを含む<a href=\"https://docs.aws.amazon.com/ja_jp/waf/latest/developerguide/how-aws-waf-works.html\" target=\"_blank\" rel=\"noopener\">保護パックまたは Web ACL</a> を自動的に作成します。詳細については、以下のリファレンスを参照してください：</p> \n<ol> \n <li><a href=\"https://aws.amazon.com/cloudfront/\" target=\"_blank\" rel=\"noopener\">Amazon CloudFront</a> を使用してアプリケーションをホストしている場合は、<a href=\"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/WAF-one-click.html\" target=\"_blank\" rel=\"noopener\">CloudFront ワンクリック AWS WAF 統合</a>を使用して保護を有効にします。</li> \n <li><a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/introduction.html\" target=\"_blank\" rel=\"noopener\">Application Load Balancer (ALB)</a> を使用してアプリケーションをホストしている場合は、<a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancers.html#load-balancer-waf\" target=\"_blank\" rel=\"noopener\">ALB ワンクリック AWS WAF 統合</a>を使用して保護を有効にします。</li> \n</ol> \n<h2>AI ボットによって引き起こされる問題</h2> \n<p>ボットは Web 上の新しい脅威ではありません。ただし、大規模言語モデル (LLM) が必要とする大量のデータや、AI エージェントが可能にした新たな対話パターンにより、多くのアプリケーションでボットの挙動がより問題視されるようになりました。Web アプリケーションは、AI ボットにより次のような問題に直面する可能性があります：</p> \n<ol> \n <li><strong>独自データをモデルのトレーニングに使用される</strong> : 組織のデータが無許可で AI モデルのトレーニングに使用されると、知的財産に関する懸念が生じます。たとえば、あなたのコンテンツが対価なしに競合サービスの作成に利用され、コンテンツの独自の市場価値が低下する可能性があります。</li> \n <li><strong>パフォーマンスの低下とコストの増加</strong> : アプリケーションのコンテンツを積極的に収集する AI ボットは、膨大なトラフィックを発生させ、正規ユーザーのパフォーマンスを低下させる可能性があります。これにより、データ転送送信 (DTO) 料金が発生し、コンピューティングリソースが浪費されるほか、スクレイピングのピーク時にはサービス停止が発生する可能性もあります。</li> \n <li><strong>望ましくない自動/エージェント動作</strong> : AI ボットは、人間が介在することなくアプリケーションと自動的に対話できます。AI が結果を要約できるため、アプリケーションへの貴重な人間のトラフィックを奪う可能性があります。また、AI ボットは、限定在庫の購入など、高価値で時間的制約のあるワークフローを完了するために、正規の人間のトラフィックと競合する可能性もあります。これらのボットは通常、以下の手法を使ってアプリケーションと対話します：</li> \n</ol> \n<ul> \n <li style=\"list-style-type: none\"> \n  <ul> \n   <li><strong>関数呼び出しと AI 検索</strong> : AI アプリケーションはツールを使って、アプリケーションから直接データを検索し、単発のリクエストを実行します。</li> \n   <li><strong>ブラウザ自動化フレームワークによる対話</strong> : Amazon Nova Act などの AI エージェントは Playwright を使用して実際のブラウザを制御します。複数ステップのタスクを完了し、人間のような方法でアプリケーションと対話できます。これらのエージェントは JavaScript を実行し、複雑な UI 要素を効果的に処理することが可能です。</li> \n   <li><strong>VM ベースの対話</strong> : Anthropic の Computer Use のようなシステムは、仮想マシン (VM) 環境内で動作します。より人間に近い方法でアプリケーションと対話し、Playwright の自動化ブラウザとは異なり、標準にインストールされたブラウザを使用します。そのため、その動作は実際の人間ユーザーとほぼ区別できません。</li> \n  </ul> </li> \n</ul> \n<h2>AI ボットアクティビティの規模を把握する</h2> \n<p>まず、AI ボットがどのようにアプリケーションに影響を与えているか、またその規模を理解する必要があります。最初のステップとして、検査レベル Commonで AWS WAF Bot Control ルールグループをリソース保護パックに追加しましょう。初期段階では Count モードを使ってトラフィックパターンを監視します。このアプローチにより、本番環境のトラフィックに影響を与える可能性のある変更を行う前に、ボットアクティビティを分析できます。</p> \n<p>Bot Control の Common ルールグループは、署名検証によって自己申告ボットを検証します。このルールグループには、検証済み AI ボットを検出する CategoryAI ルールが含まれています。図 1 に示すように、必ず最新バージョンでルールグループを設定してください。</p> \n<div id=\"attachment_166462\" style=\"width: 310px\" class=\"wp-caption aligncenter\">\n <img aria-describedby=\"caption-attachment-166462\" loading=\"lazy\" class=\"wp-image-166462\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/07/Blog-AWS-WAFAI-1.jpeg\" alt=\"\" width=\"300\" height=\"243\">\n <p id=\"caption-attachment-166462\" class=\"wp-caption-text\">図 1: 検査レベル Common およびバージョン 3.2 の AWS WAF Bot Control ルールグループ</p>\n</div> \n<p>マネージドルールグループを数日間実行した後、収集したデータを分析できます。インサイトを表示するには、AWS WAF および <a href=\"https://aws.amazon.com/shield/\" target=\"_blank\" rel=\"noopener\">AWS Shield</a> コンソールを開き、<a href=\"https://aws.amazon.com/about-aws/global-infrastructure/regions_az/\" target=\"_blank\" rel=\"noopener\">AWS リージョン</a>を選択します。保護パックを選択して<strong>ダッシュボードを表示</strong>を選択します。 <strong>概要</strong>セクションに移動し、<strong>ボット</strong>オプションを選択すると、ボットアクティビティ、検出、カテゴリ、シグナルを確認できます。このダッシュボードでは、アプリケーション上のボットアクティビティに関するインサイトが得られます。</p> \n<p>図 2 は、Bot categories セクションの例を示しています。<code>ai - AllowedRequests</code> としてマークされた大量のリクエストが表示されています。これらは <code>CategoryAI</code> ルールによって検出されたものの、ブロックはされていない AI ボットです。また、他のボットも大量のリクエストを送信している様子が確認できる場合があります。</p> \n<div id=\"attachment_166464\" style=\"width: 310px\" class=\"wp-caption aligncenter\">\n <img aria-describedby=\"caption-attachment-166464\" loading=\"lazy\" class=\"wp-image-166464\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/07/Blog-AWS-WAFAI-2.jpeg\" alt=\"\" width=\"300\" height=\"185\">\n <p id=\"caption-attachment-166464\" class=\"wp-caption-text\">図 2: AWS WAF が検出した CategoryAI ルールのトラフィック概要</p>\n</div> \n<h2>AI ボットによって引き起こされる問題の管理</h2> \n<p>以下のセクションでは、AI ボットによって引き起こされる問題を管理するためのさまざまな方法について説明します。</p> \n<h3><code>robots.txt</code> で AI ボットを早期に停止する</h3> \n<h4>シナリオ 1 : ルール準拠AIボットの早期遮断</h4> \n<p><a href=\"https://en.wikipedia.org/wiki/Robots.txt\" target=\"_blank\" rel=\"noopener\">robots.txt</a> ファイルを使用すると、アプリケーションに対するボットのアクセスを制御できます。このシンプルなテキストファイルをアプリケーションのルートディレクトリ（/robots.txt）に配置し、標準形式でルール準拠ボットに対してアクセス可能範囲を指示します。すべてのボットがこれらのルールに従うわけではありませんが、信頼できるボット事業者は適切に構成された robots.txt ファイルを尊重します。<a href=\"https://github.com/ai-robots-txt/ai.robots.txt\" target=\"_blank\" rel=\"noopener\">ai.robots.txt</a> などのオープンソースプロジェクトでは、最新のAI関連クローラーを含む <code>robots.txt</code> が提供されており、アプリケーションのクロール開始前にこれらのボットを停止できます。</p> \n<p>AWS WAF で特定のボットからの大量リクエストが検出された場合、<code>robots.txt</code> を使用して、過剰ながらもルールに従うスクレイピングボットを停止できます。これにより、DTO およびアプリケーションパフォーマンスへの影響を防止できます。</p> \n<p>次の例は、Amazon <a href=\"https://developer.amazon.com/amazonbot\" target=\"_blank\" rel=\"noopener\">Amazonbot</a> に <code>/public URL</code> のクロールを許可し、<code>/private URL</code> のクロールを禁止する設定です。</p> \n<p><code>User-agent: Amazonbot</code><br> <code>Disallow: /private/</code><br> <code>Allow: /public/</code></p> \n<h4>シナリオ2:AIボットのデータ使用方法を管理</h4> \n<p>主要なテクノロジー企業のボットは二重の目的で動作します。アプリケーションを一度スクレイピングし、取得したデータを検索インデックス化とAIモデルのトレーニングに利用します。これらのボットに対して、検索インデックス作成を目的としたアプリケーションのクロールは許可しつつ、LLMトレーニングへのデータ使用は拒否するよう指定できます。次に示すのは、主要なボット運用事業者がLLMのトレーニングにデータを使用することを防止する3つの例です。</p> \n<ol> \n <li><strong>Amazonbot</strong> : HTTP レスポンスヘッダー <code>X-Robots-Tag: noarchive</code> を使って、このレスポンスを LLM の学習に使用しないよう指示します。CloudFront の<a href=\"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/modifying-response-headers.html\" target=\"_blank\" rel=\"noopener\">レスポンスヘッダーポリシー</a>を利用することで、アプリケーションから返されるすべてのレスポンスにこのヘッダーを付与できます。<code>HTTP/1.1 200 OK</code><br> <code>Date: Tue, 15 Oct 2024 08:09:00 GMT</code><br> <code>X-Robots-Tag: noarchive</code></li> \n <li><strong>Applebot</strong> : <code>robots.txt</code> に <a href=\"https://support.apple.com/en-us/119829\" target=\"_blank\" rel=\"noopener\">User-agent Applebot-Extended</a> という項目を追加することで、Apple の機械学習（ML）モデルの学習にアプリケーションのデータを使わせないよう要請できます。この設定でも、検索用のコンテンツインデックス作成は引き続き Apple に許可されます。以下は、アプリケーション全体で Applebot-Extended のアクセスを拒否する記述例です。<code>User-agent: Applebot-Extended</code><br> <code>Disallow: /</code><code>robots.txt</code> における <code>User-agent</code> ディレクティブは、特定の目的を持ちます。このディレクティブは、ボットが宣言するアイデンティティに対してパターンマッチングを実行しますが、これは <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers/User-Agent\" target=\"_blank\" rel=\"noopener\">HTTP User-Agent</a> ヘッダーとは異なるものです。</li> \n <li><strong>Googlebot</strong> : 同じように、Google も <code>robots.txt</code> に User-agent Google-Extended を追加することで、Google の ML <a href=\"https://blog.google/technology/ai/an-update-on-web-publisher-controls/\" target=\"_blank\" rel=\"noopener\">モデル学習へのデータ使用を拒否</a>できます。<code>User-agent: Google-Extended</code><br> <code>Disallow: /</code></li> \n</ol> \n<p><code>robots.txt</code> ファイルを尊重しないボット運用者も存在するため、そうしたボットは AWS WAF で管理する必要があります。</p> \n<h2>AWS WAF を使用した対策</h2> \n<h4>シナリオ 3 :パフォーマンス低下と高コストの原因となる AI ボットの管理</h4> \n<p>過度にデータをスクレイピングする AI ボットは、アプリケーションの性能を悪化させ、DTO やコンピューティングの費用を大幅に増加させる恐れがあります。以下に紹介する AWS WAF を使った手法で、<code>robots.txt</code> のルールを守らないボットからアプリケーションを守ることができます。</p> \n<p><strong>1 . AWS WAF Bot Control ルールグループ(検査レベル Common)を使った自己識別 AI ボットの管理</strong></p> \n<p>検査レベル Common の AWS WAF Bot Control ルールグループにおいて、以前「Count」としていた<strong>すべてのルールアクションをオーバーライド</strong>を解除することで、AI ボットからの大量アクセスを防ぐことが可能です。<code>CategoryAI</code> ルールにより、これらの AI ボットリクエストは標準でブロックされるようになっています。</p> \n<p><code>CategoryAI</code> ルール配下の AI ボットを除き、AWS WAF は一般的かつ検証可能なボットをブロックしません。大量のトラフィックを生成している検証済みボットやボットカテゴリを特定した場合は、図 3 に示すように、AWS WAF Bot Control ルールグループの後方に、特定のボット（または<a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-label-requirements.html\" target=\"_blank\" rel=\"noopener\">ラベル名前空間</a>で表現されるボットクラス）をブロックするルールを明示的に追加する必要があります。</p> \n<div id=\"attachment_166467\" style=\"width: 279px\" class=\"wp-caption aligncenter\">\n <img aria-describedby=\"caption-attachment-166467\" loading=\"lazy\" class=\"wp-image-166467\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/07/Blog-AWS-WAFAI-3.jpeg\" alt=\"\" width=\"269\" height=\"300\">\n <p id=\"caption-attachment-166467\" class=\"wp-caption-text\">図 3：ラベルを活用し yandexbot をブロックするための AWS WAF のカスタムルール設定</p>\n</div> \n<p><strong>2. 検知回避を試みるスクレイパーの速度抑制</strong></p> \n<p>ボットは、有名なボットや正当なユーザークライアントになりすますため、HTTP ユーザーエージェントヘッダーを偽造します。<a href=\"https://aws.amazon.com/about-aws/whats-new/2025/06/aws-waf-automatic-application-layer-ddos-protection/\" target=\"_blank\" rel=\"noopener\">AWS WAF の拡張されたアプリケーション層（L7）DDoS 保護</a>と <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-type-rate-based.html\" target=\"_blank\" rel=\"noopener\">AWS WAF レートベースルール</a>を利用することで、これらのボットによるアプリケーションへの過剰な負荷を防ぐことができます。DDoS ルールとレート制限ルールにより、ボットを含む大量リクエストを行うすべてのソースからアプリケーションを守ることができます。レートベースルールのしきい値の設定方法や最適な作成方法については、<a href=\"https://aws.amazon.com/blogs/security/three-most-important-aws-waf-rate-based-rules/\" target=\"_blank\" rel=\"noopener\">AWS WAF の主要な 3 つのレートベースルール</a>に関する記事をご覧ください。</p> \n<p><strong>3. 検知回避を試みるスクレイパーに負荷をかける</strong></p> \n<p><a href=\"https://aws.amazon.com/blogs/networking-and-content-delivery/protect-against-bots-with-aws-waf-challenge-and-captcha-actions/\" target=\"_blank\" rel=\"noopener\">AWS WAF の Challenge アクション</a>は、ユーザーの介入なしでクライアント環境においてサイレントチャレンジを実行します。これはユーザー体験に認識可能な影響を与えないよう設計されています。このチャレンジでは、クライアントに計算コストの高い作業（プルーフオブワーク）の実行を要求します。この方式により、正当なユーザーに対しては環境検証のためのシームレスな仕組みを提供する一方で、アプリケーションにアクセスを試みるボット運用者のコストを上昇させることを意図しています。</p> \n<p>図 4 では、AWS WAF Bot Control ルールグループの後方にカスタムルールを追加する方法を示しています。このルールでは、許可済み/検証済みボットを除き、ユーザーが処理を継続する前にチャレンジの完了を必要とします。検証済みボットは、<code>awswaf:managed:aws:bot-control:bot</code> という名前空間内のラベルにより識別されます。</p> \n<div id=\"attachment_166468\" style=\"width: 231px\" class=\"wp-caption aligncenter\">\n <img aria-describedby=\"caption-attachment-166468\" loading=\"lazy\" class=\"wp-image-166468 size-medium\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/07/Blog-AWS-WAFAI-4-221x300.jpeg\" alt=\"\" width=\"221\" height=\"300\">\n <p id=\"caption-attachment-166468\" class=\"wp-caption-text\">図 4：未検証のボットトラフィックに対してチャレンジを強制する AWS WAF ルール</p>\n</div> \n<p><strong>4 . 巧妙なボットの捕捉にハニーポットを活用</strong></p> \n<p><a href=\"https://aws.amazon.com/solutions/implementations/security-automations-for-aws-waf/\" target=\"_blank\" rel=\"noopener\">Security Automations for AWS WAF</a> には、<a href=\"https://docs.aws.amazon.com/solutions/latest/security-automations-for-aws-waf/embed-the-honeypot-link-in-your-web-application-optional.html\" target=\"_blank\" rel=\"noopener\">ハニーポットエンドポイント</a>が組み込まれています。このエンドポイントは、正当なユーザーや適切な振る舞いをするボットがアクセスしないように設計されており、アプリケーションをクロールするボットを誘い込む仕組みとなっています。アプリケーションへのスクレイピングの影響を抑制するため、検知した IP アドレスをブロックします。</p> \n<p><iframe loading=\"lazy\" title=\"AWS re:Inforce 2025 - Sticky situations: Building advanced AWS WAF honeypots for better security\" width=\"500\" height=\"281\" src=\"https://www.youtube-nocookie.com/embed/2mlQL2cQfDY?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen sandbox=\"allow-scripts allow-same-origin\"></iframe></p> \n<h4>シナリオ 4：不要な自律型/エージェント型 AI ボットへの対処</h4> \n<p>自律型 AI ボットへの対処には、次の技術を活用できます：</p> \n<p><strong>1 . AWS WAF Bot Control ルールグループ（検査レベル Common）</strong>：<code>CategoryAI</code> ルールには、Amazon Nova Act などの広く認識された AI エージェントへの対応ルールが含まれています。また、<code>SignalNonBrowserUserAgent</code> と <code>SignalAutomatedBrowser</code> の各ルールにより、Playwright タイプのブラウザ自動化エージェントをブロックすることができます。<br> <strong>2 . AWS WAF Bot Control ルールグループ（検査レベル Target）</strong>：このレベルの検査では、トラフィックパターンの知的ベースラインを構築します。人間をシミュレートするエージェント型ボットからアプリケーションを守るため、フィンガープリンティング手法を活用します。設定手順の詳細については、<a href=\"https://aws.amazon.com/blogs/security/detect-and-block-advanced-bot-traffic/\" target=\"_blank\" rel=\"noopener\">高度なボットトラフィックの検知・ブロック</a>に関する投稿をご確認ください。<br> <strong>3 . AWS WAF CAPTCHA アクション</strong>：主要プロバイダーが提供する LLM は、CAPTCHA を解決しないよう学習されています。これにより、多くのエージェントによる要求された操作の完了を防ぐことができます。前述の チャレンジ 技術と同様に、特定のリクエストに対して CAPTCHA の完了を要求するルールを設定できます。設定手順の詳細については、「<a href=\"https://aws.amazon.com/blogs/security/use-aws-waf-captcha-to-protect-your-application-against-common-bot-traffic/\" target=\"_blank\" rel=\"noopener\">Use AWS WAF CAPTCHA to protect your application against common bot traffic</a>」の投稿をご確認ください。<br> <strong>4 . 認証（生体認証を含む）</strong>：ボットは継続的に進化し、対策を回避するようになっていきます。人間による操作を厳密に要求する場合は、やり取りを継続する前に、生体認証を含む認証の使用を検討してください。ボットトラフィックの可能性を示す動作が確認された際の適応的なユーザー認証の実装方法については、「<a href=\"https://aws.amazon.com/blogs/networking-and-content-delivery/how-to-use-aws-waf-bot-control-for-targeted-bots-signals-and-mitigate-evasive-bots-with-adaptive-user-experience/\" target=\"_blank\" rel=\"noopener\">How to use AWS WAF Bot Control for targeted bots signals and mitigate evasive bots with adaptive user experience</a>」の記事を参照してください。</p> \n<h2>まとめ</h2> \n<p>AI ボットは、パフォーマンスを低下させコストを増加させる過剰なスクレイピング、AI トレーニングのための不正なコンテンツ使用、迷惑なものから悪意のあるものまで様々な自動化された操作を通じて、重大な課題を引き起こします。本記事で説明した基本的な <code>robots.txt</code> の設定から、高度な AWS WAF Bot Control ルール、レート制限、CAPTCHA チャレンジまでの戦略を実装することで、不正なデータスクレイピングから保護し、パフォーマンスの低下を防ぎ、AI ボットによるコンテンツの使用方法を制御することができます。</p> \n<p>さらに、AWS WAF の最新情報については、<a href=\"https://aws.amazon.com/blogs/security/tag/aws-waf/\" target=\"_blank\" rel=\"noopener\">AWS WAF Security Blog</a> および <a href=\"https://aws.amazon.com/about-aws/whats-new/security_identity_and_compliance/?whats-new-content.sort-by=item.additionalFields.postDateTime&amp;whats-new-content.sort-order=desc&amp;awsf.whats-new-products=general-products%23aws-waf\" target=\"_blank\" rel=\"noopener\">AWS Security, Identity, and Compliance</a> の新着情報をご参照ください。</p> \n<p>本記事をお読みいただき、ありがとうございます。本記事に関するご質問がある場合は、<a href=\"https://repost.aws/tags/TAKdJ093DSSdGOQ1VVKX4EvQ/aws-waf\" target=\"_blank\" rel=\"noopener\">AWS WAF re:Post</a> で新しいスレッドを開始するか、<a href=\"https://console.aws.amazon.com/support/home\" target=\"_blank\" rel=\"noopener\">AWS サポート</a>までお問い合わせください。</p> \n<h2>著者</h2> \n<footer> \n <div class=\"blog-author-box\"> \n  <div class=\"blog-author-image\">\n   <img loading=\"lazy\" class=\"aligncenter size-full wp-image-29797\" src=\"https://d2908q01vomqb2.cloudfront.net/22d200f8670dbdb3e253a90eee5098477c95c23d/2023/06/09/dmacnz.png\" alt=\"David MacDonald\" width=\"120\" height=\"160\">\n  </div> \n  <h3 class=\"lb-h4\">David MacDonald</h3> \n  <p>David は、ニュージーランドのスタートアップ企業が安全でスケーラブルなソリューションを構築できるよう支援することに注力しているシニアソリューションアーキテクトです。彼はキャリアの大半を、さまざまな業界にサービスを提供するSaaS 製品の構築と運用に費やしてきました。仕事以外では、David はアマチュア農家として、少数のアルパカとヤギの群れの世話をしています。</p> \n </div> \n <div class=\"blog-author-box\"> \n  <div class=\"blog-author-image\">\n   <img loading=\"lazy\" class=\"aligncenter size-full wp-image-29798\" src=\"https://d2908q01vomqb2.cloudfront.net/5b384ce32d8cdef02bc3a139d4cac0a22bb029e8/2023/03/18/AuthorImage-kbbheemi.jpg\" alt=\"Kartik Bheemisetty\" width=\"120\" height=\"160\">\n  </div> \n  <h3 class=\"lb-h4\">Kartik Bheemisetty</h3> \n  <p>Kartik Bheemisetty は、米国 ISV 顧客向けのシニアテクニカルアカウントマネージャーであり、お客様が AWS クラウドサービスを活用してビジネス目標を達成できるよう支援しています。彼は AWS のネットワークおよびコンテンツ配信サービスに関する専門知識を有しています。ベストプラクティスに関する専門的なガイダンスを提供し、各分野の専門家へのアクセスを促進し、AWS の支出、ワークロード、イベントの最適化に関する実用的な洞察を提供しています。<a href=\"https://www.linkedin.com/in/kartikbheemisetty/\" target=\"_blank\" rel=\"noopener\">LinkedIn</a> で彼とつながることができます。</p> \n </div> \n</footer> \n<p>翻訳は Solutions Architect の長谷川 純也が担当しました。</p>"
  },
  {
    "title": "2600億回のモンテカルロを14秒で：Rust×rayon×SIMDで並列化してみた",
    "date": "2025-10-07T11:00:01.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/yua134/articles/montecarlo-pi",
    "content": "\n 1. 導入 🦀\nモンテカルロ法はシンプルながらも膨大な試行回数を必要とするアルゴリズムです。数十億、数百億といった規模になると、素朴な実装では到底現実的な時間で終わりません。\n今回はこのモンテカルロ法で円周率を推定しようと試みました。\n今回取り組んだ末に得たものは「2600億回の試行を14秒で終わらせる」でした。Rustの安全性と低レベル最適化の両立、そして並列化のためのrayon、さらにCPUの演算能力を引き出すSIMDを組み合わせることで、CPUフレンドリーかつの余力を使い切る実装を目指しました。\n\n\n 2. モンテカルロ法による円周率推定\nモンテカルロ法で円周率を推定するために..."
  },
  {
    "title": "GitHubの依存アップデートPRをまとめて捌くCLI拡張「gh-dep」を作りました",
    "date": "2025-10-07T10:59:33.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/jackchuka/articles/65592ccfb8c548",
    "content": "\n TL;DR\n\n依存アップデート PR のレビューを効率化する GitHub CLI 拡張を作りました\nInstall は簡単 gh extension install jackchuka/gh-dep\n\n使い方は gh dep --owner &lt;owner&gt; と打つだけ\n検索機能でまとめて Approve (&amp; merge) できます\nGitHub Star ⭐ 記事 ♥️ もらえると喜びます！\n\nhttps://github.com/jackchuka/gh-dep\n\n\n 背景\nDependabot や Renovate で大量に発生する依存アップデート PR。..."
  },
  {
    "title": "AWS re:Invent 2025 におけるクラウドガバナンスの必須ガイド",
    "date": "2025-10-07T09:35:26.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/your-essential-guide-to-cloud-governance-at-aws-reinvent-2025/",
    "content": "<p><img src=\"https://d2908q01vomqb2.cloudfront.net/972a67c48192728a34979d9a35164c1295401b71/2025/09/30/2025-09-30_12-50-38.png\"></p> \n<p>組織がガバナンスをコンプライアンスの負荷としてではなく戦略的な実現手段 (enabler) として認識するようになってきている中、今年の AWS Cloud Ops トラックにおけるクラウドガバナンスでは、運用の卓越性 (operational excellence) とビジネスイノベーションの間のギャップを埋める最先端のセッションを提供します。</p> \n<p>ガバナンスの環境は急速に進化しており、今年のセッションは、今日のクラウドガバナンス専門家が直面している最も差し迫った課題と機会を反映した 4 つの重要なテーマを中心に構成されています。</p> \n<h2>クラウドガバナンストラックの参加を計画しよう</h2> \n<p><span id=\"more-166526\"></span></p> \n<p>今年、AWS Cloud Ops トラック下のクラウドガバナンスには 4 つの主要テーマがあります。ハンズオンワークショップから専門家レベルのディスカッションまで、あらゆる方にあらゆるコンテンツを提供します。re:Invent での体験を最高のものにするために、以下をおすすめします:</p> \n<ol> \n <li>優先事項に焦点を当てる: 組織の直近の運用課題に合致するセッションを選択する</li> \n <li>形式を組み合わせる: 講義形式のセッションとインタラクティブなワークショップやビルダーズセッションを組み合わせる</li> \n <li>スキルを伸ばすために計画する: 現在のスキルレベルに合ったセッションと、能力を伸ばすセッションを選択する</li> \n <li>早めに予約する: 人気のセッションはすぐに満席になるため、登録開始と同時に予約する</li> \n</ol> \n<h2>クラウドガバナンスの re:Invent における主要テーマ</h2> \n<p>re:Invent 2025 の AWS Cloud Ops トラック下のクラウドガバナンスは、今日の最も喫緊の運用課題に対処する 4 つの主要テーマを中心に構成されています:</p> \n<h4>1. 生成 AI とインテリジェントガバナンス</h4> \n<p>ガバナンスワークフローへの生成 AI の統合は、組織がコンプライアンス、コントロール、運用監視を管理する方法に革命をもたらしています。Amazon Q による CloudTrail ログの分析から、自動化されたコントロール検証のための AI 活用まで、これらのテクノロジーは、リアクティブなガバナンスを、プロアクティブでインテリジェントなシステムに変革します。問題を予測し、応答を自動化し、大規模にコンテキスト認識型のインサイトを提供できるようにします。</p> \n<h4>2. 運用効率とコスト最適化</h4> \n<p>効果的なガバナンスとは、セキュリティとコンプライアンスだけではありません。リソースを最適化しながらビジネスの俊敏性を実現することです。最新のガバナンスフレームワークは、堅牢な統制と業務効率のバランスを図り、費用対効果の高い監視戦略を実施し、アカウント管理を合理化し、日常業務を自動化することで、チームが戦略的取り組みに注力できる環境を整えなければなりません。</p> \n<h4>3. セキュアな運用と自動化</h4> \n<p>セキュリティガバナンスは、チェックボックス式のコンプライアンスから、ビジネス運用を制約するのではなく推進するような自動的・継続的な保護へと進化しています。Policy-as-code、自動化されたコンプライアンス検証、プロアクティブなセキュリティコントロールを用いることで、組織は強力なセキュリティ態勢を維持しながら成長に合わせて拡張できるガバナンスフレームワークを構築できます。</p> \n<h4>4. マルチクラウドとソブリンクラウド要件</h4> \n<p>組織がグローバルに、そして複数のクラウド環境にわたって拡大するにつれて、ガバナンスは、データ主権や地域コンプライアンス、国境を越えた運用に関する複雑な要件に対処する必要が出てきます。本テーマのセッションでは、国固有の規制を満たし、運用の柔軟性を維持しながら、多様な環境全体で一貫したガバナンスを維持する方法を探ります。</p> \n<h2>学習パスを選択する</h2> \n<p>必見のクラウドガバナンスセッションをテーマ別に整理してご紹介します。ご自身にパーソナライズされたアジェンダの作成にお役立てください:</p> \n<h2>生成AIとインテリジェントガバナンス</h2> \n<p>コンプライアンスを強化しつつ手作業を削減する AI 駆動の自動化とインテリジェントなインサイトによって、ガバナンスアプローチを変革します。</p> \n<p><strong>COP350 | Building and validating cloud controls with generative AI | Breakout session</strong><br> 場所: 12月3日(水) | 午後4:00 – 5:00 PST | Caesars Forum<br> このテクニカルセッションでは、生成 AI を活用してコンプライアンスモニタリングと検証プロセスを自動化および強化する方法を実演します。生成 AI が AWS Control Tower を通じて AWS アカウントのカスタマイズを加速し、AWS Config ルールを作成し、AWS CloudTrail ログを分析する方法を学びます。</p> \n<p><strong>COP411 | Intelligent automation for managing cloud governance and compliance | Builders session</strong><br> 場所: 12月4日(木) | 午前11:30 – 午後12:30 PST | Mandalay Bay<br> AWS Config、AWS Security Hub、AWS Audit Manager を含む AWS コンプライアンスツールからのデータを分析し、効率的なポリシー実施とリスク管理のためのコンテキスト認識型インサイトを提供するスマートワークフローの作成方法を学びます。ハンズオン演習を通じて、コンプライアンスクエリを処理し、複雑なガバナンス調査のためのインターフェースを実装する自動化ソリューションを構築します。</p> \n<h2>運用効率とコスト最適化</h2> \n<p>運用コストとリソース利用を最適化しながら、ビジネスの俊敏性を実現するガバナンスフレームワークを構築するための戦略をマスターします。</p> \n<p><strong>COP355 | A practical guide to implement cost-effective governance controls | Chalk talk</strong><br> 場所: 12月1日(月) | 午後3:00 – 4:00 PST | Mandalay Bay<br> この chalk talk では、堅牢なセキュリティとコンプライアンスモニタリングを維持しながら運用コストを削減する方法を示します。ガバナンスを損なうことなく実装を最適化するための実証済みの戦略を学びます。実際のシナリオを通じて、AWS Config や AWS CloudTrail などのサービスを用い、コンプライアンス要件を満たしながらモニタリングコストを削減することに成功した組織の事例を見ていきます。</p> \n<p><strong>COP351 | Innovation Sandbox on AWS: Automating Temporary Cloud Environments| Lightning Talk</strong><br> 場所: 12月1日(月) | 午後4:30 – 4:50 PST | Venetian<br> クラウド管理者は、セキュリティとコスト管理を徹底しつつ一時的なサンドボックス環境を効率的に管理するためにはどうしたらよいかという課題に直面しています。AWS 上のイノベーションサンドボックスは、短期間の環境のデプロイと管理を自動化し、サービスコントロールポリシー、支出管理、アカウントリサイクルメカニズムを実装して、数週間分の管理時間を節約します。</p> \n<p><strong>COP324 | Moving AWS Accounts seamlessly at scale | Chalk talk</strong><br> 場所: 12月1日(月) | 正午12:00 – 午後1:00 PST | MGM<br> 合併・買収、事業売却、その他のビジネス移行に際しては、運用の中断を防ぎ、セキュリティギャップに対処するために、AWS アカウントを安全かつ正確に移行する必要がよく生じます。マルチアカウントのベストプラクティスは、ビジネスの変化や移行時にマエストロ (指揮者) のように AWS アカウントを移行するのに役立ちます。ワークロードのスケーリングを簡素化し、時間を節約しリスクを軽減しながら俊敏性を促進できます。依存関係を評価し、追加のチェックを実行して、迅速で安全かつ効率的な移行を実行する方法を学びます。</p> \n<h2>セキュアな運用と自動化</h2> \n<p>自動化、policy-as-code、継続的なコンプライアンス検証を通じて、プロアクティブなセキュリティガバナンスを構築します。</p> \n<p><strong>COP347 | Actionable controls for improving governance and compliance | Breakout session</strong><br> 場所: 12月1日(月) | 午前8:30 – 9:30 PST | Wynn<br> 効果的なギャップ分析とコントロールマッピングを通じて、コンプライアンスフレームワークを実行可能な AWS コントロールに変換する方法を学びます。このセッションでは、AWS Control Tower、AWS Security Hub、AWS Config、AWS Audit Manager を活用してスケーラブルなガバナンス戦略を構築および維持する方法を示します。複数のフレームワークにわたる共通コントロールのマッピング、自動化されたコンプライアンスチェックの実装、カスタムコントロールデプロイメントの作成の実例を探ります。</p> \n<p><strong>COP352 | From Reactive to Proactive: Infrastructure governance by design | Code talk</strong><br> 場所: 12月4日(木) | 午後3:30 – 4:30 PST | MGM<br> この code talk では、AWS CloudFormation Hooks と AWS CloudFormation Guard を使用したセキュリティのベストプラクティスについて説明し、非準拠のインフラストラクチャデプロイメントが発生する前に防止する方法を実演します。静的テンプレート検証のための CloudFormation Guard ドメイン固有言語 (DSL) ルールの記述方法と、マネージドフックを含む CloudFormation Hooks との統合方法を学び、組織全体でセキュリティ標準をプロアクティブに実施します。</p> \n<p><strong>COP406 | Build and automate policy as code | Builders session</strong><br> 場所: 12月3日(水) | 午前10:00 – 11:00 PST | MGM<br> このハンズオンセッションでは、完全な policy-as-code パイプラインを構築し、セキュリティチェック、Pre-commit hooks、早期に問題をキャッチするカスタム組織ルールの実装方法を学びます。ガイド付き演習を通じて、シフトレフトセキュリティプラクティスを理解し、インフラストラクチャガバナンスを強化する自動化されたフィードバックループを作成します。</p> \n<p><strong>COP353 | Building your data protection strategy with governance controls | Chalk talk</strong><br> 場所: 12月4日(木) | 午後2:30 – 3:30 PST | Mandalay Bay<br> このインタラクティブセッションでは、ガバナンスポリシーとコントロールを使用した効果的なデータ保護戦略を探ります。不正アクセスの防止、セキュリティポリシーの実施、大規模な一貫したリソース構成の維持方法を実演する実際のシナリオに取り組みます。認可と管理ポリシーがどのように連携して組織のデータの自動化されたコントロールを作成するかを見ていきます。</p> \n<p><strong>COP348 | Scaling Compliance Controls and Risk Assessment | Chalk talk</strong><br> 場所: 12月4日(木) | 午後4:00 – 5:00 PST | Wynn<br> リスクを評価し、証拠収集のために AWS Audit Manager と統合する AWS ポリシーを有効にする方法を学びます。このセッションは、リスクオーナーと技術チームに、プライバシー管理、コンプライアンス自動化、監査文書化のための実用的なツールを提供し、機密データ環境の保護に対して即座に価値をもたらします。</p> \n<h2>マルチクラウドとソブリンクラウド要件</h2> \n<p>複雑な主権要件に対応し、多様なクラウド環境全体で機能するガバナンスフレームワークを構築します。</p> \n<p><strong>COP409 | Building Sovereign Cloud Environments | Code talk</strong><br> 場所: 12月3日(水) | 午前10:30 – 11:30 PST | Mandalay Bay<br> このセッションでは、AWS Control Tower と Landing Zone Accelerator on AWS が、国固有のコンプライアンスフレームワーク、リージョナルサービスの選択、データ移動のための自動化されたコントロール、国境を越えた転送を含む主要な主権要件をどのようにサポートするかを探ります。</p> \n<p><strong>COP349 | Balancing agility and compliance feat. the Digital Agency of Japan | Breakout session</strong><br> 場所: 12月3日(水) | 午前9:00 – 10:00 PST | Mandalay Bay<br> このセッションでは、日本政府が 30 の省庁と 1,700 の地方自治体にわたるクラウド採用のための集中ガバナンスモデルをどのように成功裏に実装し、5,000 以上のアカウントをシームレスに管理できるようにしたのかを学びます。AWS Control Tower、AWS Config、AWS Security Hub などの AWS クラウドガバナンスサービスにより、規制業種および公共サービス業は、運用を合理化し、ガバナンスを強化し、進化するコンプライアンス要件を満たして、中央集権管理と地方自治のバランスを実現します。</p> \n<p><strong>COP346 | Governance that Enables Innovation at Scale feat. Eli Lilly | Breakout session</strong><br> 場所: 12月4日(木) | 午後1:00 – 2:00 PST | Caesars Forum<br> AWS Control Tower を用いてクラウドガバナンスをモダナイズすることで、顧客は安全で回復力のある方法でより迅速に実験、イノベーション、スケールすることができます。アメリカの製薬会社である Eli Lilly が、重要なワークロードをダウンタイムゼロで AWS Control Tower に移行することによってガバナンス構造をどのように成功裏にモダナイズしたかを学びます。コンプライアンス要件を満たすためのコントロールの実装方法と、Account Factory for Terraform を統合してプロビジョニングを自動化し、俊敏性を高め、セキュリティ態勢を改善し、より迅速にイノベーションを行い、生活とコミュニティの改善に集中できるようにした方法を学びます。</p> \n<h2>クラウドガバナンスの展望</h2> \n<p>これらのセッションは、単なる技術トレーニングを超え、コンプライアンス上の必要性から戦略的ビジネス推進要因 (enabler) へと進化するクラウドガバナンスの実践例を示しています。AI 駆動型のガバナンスと統制を導入し、セキュリティ運用を自動化する組織は、スピード、セキュリティ、運用効率の面で大きな競争優位性を獲得します。<br> 生成 AI をガバナンスワークフローに統合し、policy-as-code の自動化を重視し、事後対応型ではなく事前対応型の統制に焦点を当てることは、クラウド運用へのアプローチにおける根本的な転換を示しています。</p> \n<p>re:Invent 2025 では、組織でこの変革をリードするための知識と実践的なスキルを獲得できます。<br> まだ参加できます！ <a href=\"https://registration.awsevents.com/flow/awsevents/reinvent2025/reg/createaccount?trk=www.google.com\">re:Invent ポータルから登録してください</a>。</p> \n<p></p> \n<footer> \n <div class=\"blog-author-box\"> \n  <div class=\"blog-author-image\">\n   <img src=\"https://d2908q01vomqb2.cloudfront.net/e1822db470e60d090affd0956d743cb0e7cdf113/2023/07/24/DavidSo.jpeg\" alt=\"David Sokolik\" width=\"125\">\n  </div> \n  <h3 class=\"lb-h4\">David Sokolik</h3> \n  <p>10 年以上の IT およびクラウド経験を持つ David は、スケーラブルで耐障害性が高く、コスト効率に優れたソリューション構築において、顧客のための献身的なチームメンバーであり、支援者です。David は家族や友人と世界中を旅し、現地の料理を探求する時間を大切にしています。 </p>\n </div> \n</footer> \n<p></p> \n<p>翻訳はソリューションアーキテクトの山田が担当しました。原文は<a href=\"https://aws.amazon.com/blogs/mt/your-essential-guide-to-cloud-governance-at-aws-reinvent-2025/\">こちら</a>です。</p>"
  },
  {
    "title": "「動けばOK」だった僕が2ヶ月のAPI実装研修を通して学んだこと",
    "date": "2025-10-07T06:31:37.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/bita/articles/4a0d0f9af31110",
    "content": "\n はじめに\n\nこんにちは！株式会社ビットエー所属　25卒エンジニアのkonchanです。\n学生時代に数年間プログラミングを学び、「これで僕もWebアプリが作れるぜ！」と意気揚々と入社した僕を待っていたのは、4つのAPI実装研修課題でした。\n研修で実装した内容は、グループ会社の社内報サービス『ourly』の既存APIをRuby on Railsで再現する、というものでした。\n実装は、本番には影響しない安全な研修用環境で行い、テストケースを含む以下の4機能に取り組みました。\n\n【課題1】コメント投稿API\n【課題2】コメント編集API\n【課題3】コメント削除API\n【課題4】プロフィール設..."
  },
  {
    "title": "[AWS Summit Japan 2025] 生成 AI を用いた自治体向けソリューションデモのご紹介",
    "date": "2025-10-07T06:02:22.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/aws-summit-japan-2025-genai-lg/",
    "content": "<p>自治体においては、労働人口減少に伴い職員数の確保が難しくなっていることや住民へのインターネットの普及率の向上から、職員の業務効率化や業務のデジタルトランスフォーメーションが重要な課題となっています。近年の生成AIの登場は、これらの課題に対する有効なソリューションとして期待されています。生成AIを取り巻く技術は目覚ましい発展を遂げており、自治体での活用可能性もますます拡大しています。</p> \n<p>こうした状況を踏まえ、2025 年 6 月 25 日・26 日に開催された AWS Summit Japan 2025 において、生成 AI 技術を活用した自治体向けのソリューションのデモ展示をいたしました。親しみやすいアバターを通して避難者情報を収集しカードの発行までを行う「避難所窓口対応ソリューション」と、電話上で自然な日本語を使って情報の検索や予約などが行える「<a href=\"https://aws.amazon.com/jp/connect/\">Amazon Connect</a> x 生成AI」、さらに書類不備の早期発見を助ける「AirDoc」の 3 つのデモを通じて、現在の生成 AI 技術が自治体でどのような可能性を秘めているかをご紹介しました。</p> \n<p>本ブログでは、Summit 会場にてご紹介したデモの詳細を解説し、現在の生成 AI 技術が自治体の業務改善にどのように貢献できるかを、より多くの皆様にお伝えしたいと思います。動画で実際に動く様子も見ることができますので、ぜひご覧ください。</p> \n<p><span id=\"more-165950\"></span></p> \n<p>目次</p> \n<ol> \n <li>避難所窓口対応ソリューション</li> \n <li>Amazon Connect x 生成AIエージェント</li> \n <li>Airdoc – PDF書類のAI OCR・JSONデータ抽出ツール</li> \n <li>まとめ</li> \n</ol> \n<h2>避難所窓口対応ソリューション</h2> \n<p>生成AIエージェントを用いた窓口アバターです。<br> <a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/09/29/Screenshot-2025-09-29-at-16.12.14.png\"><img loading=\"lazy\" class=\"alignnone size-large wp-image-165970\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/09/29/Screenshot-2025-09-29-at-16.12.14-1024x577.png\" alt=\"避難所AIアバター\" width=\"1024\" height=\"577\"></a></p> \n<h3>解決したい課題</h3> \n<ul> \n <li>避難所での、被災者情報を取得し各種申請を行なったり、罹災したことを証明する避難者カードを発行するという業務</li> \n <li>高齢者や子供など、すべての人がタブレットなどの端末から自分で情報を入力できるわけではないため、完全セルフサービスにしてしまうのも問題がある</li> \n</ul> \n<h3>生成AIを利用したソリューションアプローチ</h3> \n<p>上記課題を踏まえて、今回のデモでは生成AIを用いて避難者情報の対話型収集を行い、JSON形式で情報を記録するとともに、そのデータを加工してHTMLベースの人間が閲覧しやすく印刷もできる避難者カードを発行する、というソリューションを開発しました。</p> \n<p>生成AIの自然な日本語によるヒアリングで、プライバシー設定や怪我の有無などを聞き出し、避難者カードに必要な情報を収集します。その後、生成AIが収集した情報を使ってJSONデータを作成し、さらにコードを実行してそのデータを決まった形のHTMLカードに整形します。</p> \n<p>生成AIが対応するため、動画にある通り、「私は無事ですが、花子は怪我をしています」などの曖昧な指示をしても、「私」が誰であるかや「怪我」とは被害のことであることを認識し、出来上がったカードでは正しい名前とともに 無事です/被害があります/不明です のいずれかにチェックがされています。</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/09/29/hinanjyo-low.gif\"><img loading=\"lazy\" class=\"alignnone size-full wp-image-165969\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/09/29/hinanjyo-low.gif\" alt=\"避難所AIアバター\" width=\"720\" height=\"405\"></a></p> \n<h3>技術的なポイント</h3> \n<p>ローカルのアプリケーションから、基盤モデルは <a href=\"https://aws.amazon.com/jp/bedrock/\">Amazon Bedrock</a> を、音声読み上げは <a href=\"https://aws.amazon.com/jp/polly/\">Amazon Polly</a> を、音声認識は <a href=\"https://aws.amazon.com/jp/transcribe/\">Amazon Transcribe</a> を活用しています。<br> AI エージェントを用いることによって、ローカルでコードを実行してJSONデータを加工し、生成AIの挙動に左右されることなくいつも同じ形式のHTMLカードを作成することができます。<br> AWSがサンプルとして提供するオープンソースソフトウェアである<a href=\"https://github.com/aws-samples/bedrock-engineer\">Bedrock Engineer</a> をベースとして、<a href=\"https://github.com/aws-samples/generative-ai-avatar-chat\">Generative AI Avatar Chat</a> を組み合わせる形で作成しました。</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/09/29/Screenshot-2025-06-11-at-15.49.04.png\"><img loading=\"lazy\" class=\"alignnone size-large wp-image-165953\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/09/29/Screenshot-2025-06-11-at-15.49.04-1024x542.png\" alt=\"避難所AIアバターの仕組み\" width=\"1024\" height=\"542\"></a></p> \n<h3>期待できる効果</h3> \n<ul> \n <li>電子機器に不慣れな市民についても、人間を介することなく対応できる</li> \n <li>職員数を確保することが難しい災害時において、申請・発行業務に割く人員を削減できる</li> \n <li>より必要な支援を住民に届けることができる</li> \n</ul> \n<h3>実際に稼働させる場合に考慮すべきこと/コスト</h3> \n<ul> \n <li>ローカルでアプリケーションを動かしていることから、AWS上で発生するコストは基盤モデル、音声読み上げ、音声認識のAPI使用料のみです。詳しくは <a href=\"https://aws.amazon.com/jp/bedrock/pricing/\">Amazon Bedrock の料金ページ</a>、<a href=\"https://aws.amazon.com/jp/polly/pricing/\">Amazon Polly の料金ページ</a>、<a href=\"https://aws.amazon.com/jp/transcribe/pricing/\">Amazon Transcribe の料金ページ</a>をご覧ください。</li> \n <li>ローカルでアプリケーションを動かしデータもローカルに保存するため、端末の取り扱いや端末のネットワーク接続に気をつける必要があります。</li> \n</ul> \n<h2>Amazon Connect x 生成AI</h2> \n<p>RAG（情報検索）、生成AIエージェント、人間へのエスカレーションといった機能を持つコールセンター自動応答ソリューションです。</p> \n<h3>解決したい課題</h3> \n<ul> \n <li>電話対応</li> \n <li>マニュアルから引用して答えれば事足りるもの・予約などの事務手続き・複雑で専門性が求められる問い合わせなどが混在</li> \n <li>一部は自動化きるが一部は人間の対応が必要</li> \n</ul> \n<h3>生成AIを利用したソリューションアプローチ</h3> \n<p>上記課題を踏まえて、今回のデモではお問い合わせをしてきた住民の要望を判別し、情報検索を行って回答したり、データベースアクセスできる予約エージェントに繋いだり、人間にエスカレーションしたりすることができるコールセンターAIを実装しました。</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/09/29/image-1-30.png\"><img loading=\"lazy\" class=\"alignnone size-large wp-image-165954\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/09/29/image-1-30-1024x575.png\" alt=\"生成AIコンタクトセンターの概要\" width=\"1024\" height=\"575\"></a></p> \n<p>下の音声では、</p> \n<ul> \n <li>情報検索を行って回答するケースとして、子ども医療費助成制度の案内を行なう</li> \n <li>予約エージェントに繋いで、場所や希望日時などを収集し、予約情報をデータベースに保存する</li> \n <li>複雑な相談や苦情対応では、人間のオペレータへ適切に引き継ぐ</li> \n</ul> \n<p>といった動作が確認できます。</p> \n<audio class=\"wp-audio-shortcode\" id=\"audio-165950-2\" preload=\"none\" style=\"width: 100%;\" controls=\"controls\">\n <source type=\"audio/mpeg\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/09/29/connect-voiceonly.mp3?_=2\">\n</audio> \n<p>また、<a href=\"https://aws.amazon.com/jp/connect/\">Amazon Connect</a> は音声通話にもチャットにも対応しているため、一度設定を行えば両方で対応することが可能です。</p> \n<h3>技術的なポイント</h3> \n<p>音声通話またはチャットが開始されると、まず<a href=\"https://aws.amazon.com/jp/connect/q/\">Amazon Q in Connect</a> (Amazon Connect と統合された Amazon Q) が対応します。このエージェントは情報検索（RAG）による回答や予約エージェントへの切り替え、人間へのエスカレーションを担っています。<br> 予約エージェントは、<a href=\"https://aws.amazon.com/jp/lambda/\">AWS Lambda</a> で動作しており、Amazon DynamoDB にある空き時間テーブルを見て住民に都合のいい時間帯を確認し、予約内容について了承が取れたら予約テーブルに新しい予約情報を挿入します。</p> \n<h3>期待できる効果</h3> \n<ul> \n <li>自動化できる部分を自動化し、人間への適切なエスカレーションを行う</li> \n <li>職員の業務を効率化</li> \n <li>住民の待ち時間を減らす</li> \n</ul> \n<h3>実際に稼働させる場合に考慮すべきこと/コスト</h3> \n<ul> \n <li>2025年8月現在、 \n  <ul> \n   <li>通話のユースケースでは以下の料金がかかります \n    <ul> \n     <li>Amazon Q in Connect の使用料 0.008 USD/分</li> \n     <li>Amazon Connect のサービス利用料金 0.018 USD/分</li> \n     <li>ウェブ通話の音声使用料金 0.01 USD/分</li> \n    </ul> </li> \n   <li>チャットのユースケースでは以下の料金がかかります \n    <ul> \n     <li>Amazon Q in Connect の使用料 0.0015 USD/メッセージ</li> \n     <li>チャット料金 0.004 USD/メッセージ</li> \n    </ul> </li> \n  </ul> </li> \n <li>2025年8月現在、既存の電話番号を移行することは基本的にできないため、既存の電話番号を利用する際は別途転送などの料金を考慮することが必要です。</li> \n <li>電話番号を取得しなくても、Web上に埋め込んだソフトフォンからチャット・音声通話を受けることができます。</li> \n</ul> \n<p>最新の詳しい情報は、Amazon Connect の <a href=\"https://aws.amazon.com/jp/connect/pricing/\">料金ページ</a> をご覧ください。</p> \n<h2>Airdoc</h2> \n<p>申請書類などのファイルデータ (PDFや画像) を⽣成 AI を⽤いて OCR (文字認識) し、JSON 形式のデータとして抽出するソリューションです。</p> \n<h3>解決したい課題</h3> \n<ul> \n <li>日々多数提出される住民からの就労証明書や各種申請書類などのPDF書類</li> \n <li>記入内容の確認・不備のチェック・データ入力作業などを、手作業で行っていて処理に時間を要している</li> \n</ul> \n<h3>生成AIを利用したソリューションアプローチ</h3> \n<p>上記課題を踏まえて、申請書類のファイルに記入された内容をシステムが扱いやすいJSON形式のデータとして抽出する生成 AI ソリューションを開発しました。<br> 具体的には、以下の 2 ステップで内容を抽出しています。</p> \n<ol> \n <li>サンプルファイル（就労証明書の記入例の PDF ファイルなど）からその書類の内容に合った JSON スキーマを生成 AI で自動生成。（JSON スキーマは必要に応じてユーザーが編集可能）</li> \n <li>ステップ 1 で作成した JSON スキーマに従って、実際に申請された書類の内容を、JSON 形式のデータとして生成 AI で抽出。</li> \n</ol> \n<p>自治体のシステムに本ソリューションを組み込めば、（書類の内容が JSON データとして抽出されシステムで処理することが可能になるので）今まで職員が手作業で行っていたデータ入力作業や書類の内容を精査する作業を自動化出来るようになります。<br> <a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/09/29/summit-airdoc-demo-low.gif\"><img loading=\"lazy\" class=\"alignnone size-full wp-image-165963\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/09/29/summit-airdoc-demo-low.gif\" alt=\"AirDocデモ\" width=\"720\" height=\"405\"></a></p> \n<h3>技術的なポイント</h3> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/09/29/スクリーンショット-2025-07-03-9.57.26.png\"><img loading=\"lazy\" class=\"alignnone size-large wp-image-165955\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/09/29/スクリーンショット-2025-07-03-9.57.26-1024x523.png\" alt=\"AirDocアーキテクチャ\" width=\"1024\" height=\"523\"></a></p> \n<ul> \n <li>バックエンドには AWS Lambda、Amazon Bedrock、Amazon DynamoDB、Amazon S3 を組み合わせたサーバーレス構成を採用しています。</li> \n <li>JSON スキーマの抽出、JSON スキーマの生成を担う部分には Amazon Bedrock で利用可能な Claude モデルを利用し、Few-shot プロンプトを追加することで精度を高めています。</li> \n <li>フロントエンドには Vue.js を利用して、Amazon CloudFront と Amazon S3 でホストしています。</li> \n <li>セキュリティの観点では、AWS WAF で IP アドレス制限をかけたり、Amazon Cognitoで認証認可を行っています。また、フロントエンドのアプリケーションから AWS Lambda の Function URL に API リクエストを送る部分では、SigV4 署名で IAM の認証情報を追加しています。</li> \n</ul> \n<h3>期待できる効果</h3> \n<ul> \n <li>職員の業務負担軽減</li> \n <li>住民サービス向上</li> \n</ul> \n<h3>実際に稼働させる場合に考慮すべきこと/コスト</h3> \n<ul> \n <li>月間の処理件数や書類内容のデータ量によって、Amazon Bedrock の利用料金（処理トークン数に応じた従量課金）が変動するため、事前の処理量見積もりが必要になります。詳しくは <a href=\"https://aws.amazon.com/jp/bedrock/pricing/\">Amazon Bedrock の料金ページ</a> をご覧ください。</li> \n <li>プロンプトのチューニングやモデルの変更、書類の形式変更などによって、データ抽出の精度向上を検証する必要があります。</li> \n <li>生成AIの特性上 100% の精度は保証できないため、自動化された業務の最後に職員による最終確認フローを残す必要があります。</li> \n</ul> \n<h2>まとめ</h2> \n<p>本ブログでは AWS Summit Japan 2025 にて自治体向けブースで展示をした 3 種類のデモについてご紹介しました。<br> 今回ご紹介したデモが、自治体の課題解決に役立てられれば幸いです。<br> 最後に、本ブログでご紹介したデモに関して、ご興味・ご質問をお持ちのお客様は<a href=\"https://aws.amazon.com/jp/contact-us/sales-support/\">お問い合わせフォーム</a>もしくは担当営業までご連絡ください。また会場で投影した資料を<a href=\"https://pages.awscloud.com/summit-japan-2025-doc-download.html?id=I-33A\">こちら</a>からダウンロードできます。<br> 本ブログは、<a href=\"https://aws.amazon.com/jp/government-education/worldwide/japan/\">アマゾン ウェブ サービス ジャパン合同会社 パブリックセクター</a>のソリューションアーキテクト、押川令、岸本尚大が執筆しました。</p>"
  },
  {
    "title": "株式会社情報戦略テクノロジー様の AWS 生成 AI 活用事例 : Amazon Bedrock を活用し社員一人ひとりに寄り添いともに成長するAIエージェント秘書「パイオにゃん」 を開発。情報探索業務を83%改善、社員の成長の可視化を実現。",
    "date": "2025-10-07T05:11:10.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/genai-case-study-ist/",
    "content": "<p><em>本ブログは株式会社情報戦略テクノロジー様とAmazon Web Services Japan 合同会社が共同で執筆いたしました。</em></p> \n<p>みなさん、こんにちは。AWS アカウントマネージャーの中道です。</p> \n<p>社内の重要な情報が複数のツールに分散し、必要な情報を見つけ出すのに思わぬ時間を費やしていませんか？また、組織の成長に伴い、社員一人ひとりの成長やスキルアップを適切に把握・支援することが難しいと感じることは、多くのお客様の共通課題だと感じています。</p> \n<p>伴走型戦略DXファームの<a href=\"https://www.is-tech.co.jp/\">株式会社情報戦略テクノロジー様</a>は、<strong>社員一人ひとりに寄り添い、共に成長することをコンセプトとしたパーソナルAIエージェント秘書サービス「パイオにゃん」</strong>を開発されました。本記事では、AI Agent を活用した、情報探索の効率化や社員の成長の可視化に向けた取り組みについてご紹介します。</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/07/01-1.png\"><img loading=\"lazy\" class=\"alignnone wp-image-166482 size-full\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/07/01-1.png\" alt=\"\" width=\"629\" height=\"326\"></a></p> \n<h2></h2> &nbsp;\n<p></p> \n<h2><strong>お客様の状況と経緯</strong></h2> \n<p>株式会社情報戦略テクノロジー様は、事業拡大に伴い以下の課題に直面されていました。</p> \n<p><strong>・情報探索の非効率性</strong>：社内の情報が複数のツールに分散し、必要な情報の検索に多大な時間を要している。</p> \n<p><strong>・社員数増加と個別対応の限界</strong>：コミュニケーションが希薄化し、一人ひとりの状況や課題の把握が難しい。</p> \n<p><strong>・成長の可視化</strong>：個人のスキルや経験の成長を客観的に評価することが難しく、効果的な育成計画の立案が難しい。</p> \n<p>これらの課題に対して、AI Agent を活用し効率的な情報探索、社員一人ひとりへのきめ細やかな支援、個人の成長の可視化を目指しました。</p> \n<h2></h2> &nbsp;\n<p></p> \n<h2>ソリューション / 構成内容</h2> \n<p>「パイオにゃん」は、Slack、Googleドライブ、GitHubといった社内の多様な情報源と連携し、過去のやり取りや文脈を深く理解することで、各個人に最適化されたアドバイスや情報を提供します。利用者のスキル向上と連動してAI自身もレベルアップし、アバターが視覚的に成長していく「AI成長システム」です。これにより、社員はゲーム感覚で自身の成長を実感でき、学習意欲の向上を促します。</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/07/02.png\"><img loading=\"lazy\" class=\"alignnone wp-image-166485 size-full\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/07/02.png\" alt=\"\" width=\"567\" height=\"223\"></a></p> \n<p>「パイオにゃん」の成長度合いや、社員のAIリテラシーレベルが一目でわかる専用のダッシュボードを提供します。猫のアバターが子猫から成猫へと成長していく様子を視覚的に確認でき、AIリテラシーレベルに応じた機能のアンロックや高度なアドバイスが提供されゲーム感覚でAI活用を促進し利用者のモチベーションを維持しながら、継続的なスキルアップを促します。画面は全てレスポンシブデザインで、PC・タブレット・スマートフォンなどデバイスを選ばず操作可能としました。</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/07/03.png\"><img loading=\"lazy\" class=\"alignnone wp-image-166486 size-full\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/07/03.png\" alt=\"\" width=\"567\" height=\"225\"></a></p> \n<p>情報の探索部分は<a href=\"https://aws.amazon.com/jp/bedrock/\">Amazon Bedrock</a> のKnowledge Bases 機能を採用し、RAG (Retrieval Augmented Generation) によって膨大な情報をあいまい検索できる機能を実現しています。さらにKnowledge Bases のメタデータフィルタリングの機能により、ユーザーごとの権限によって検索対象となる情報を制限する機能を構築しました。</p> \n<p>パーソナルアドバイスについては、業務内容、行動パターン、参照履歴などのユーザーひとりひとりの固有情報を用いて、検索処理や応答を最適化することで、個人個人へと最適化したRAG へ進化する仕組みを導入しています。</p> \n<p>また、成長システムについては、Strands Agents SDK を利用して構築した AI エージェントが「組織独自のコンピテンシー定義」「ユーザーごとの会話履歴などの短期記憶、長期記憶」といったデータを元に、ユーザーの成長レーダーチャートを生成します。</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/07/パイオにゃんlogo.png\"><img loading=\"lazy\" class=\"alignnone size-full wp-image-166487\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/07/パイオにゃんlogo.png\" alt=\"\" width=\"76\" height=\"19\"></a></p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/07/04-1.png\"><img loading=\"lazy\" class=\"alignnone wp-image-166495 size-full\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/07/04-1.png\" alt=\"\" width=\"553\" height=\"430\"></a></p> \n<h2></h2> &nbsp;\n<p></p> \n<h2>導入効果</h2> \n<p>「パイオにゃん」の導入により、<strong>年間24,000 時間かかっていた情報探索の時間を 4,000時間まで 約83%削減</strong>できることが期待されており、社員は本来集中すべき業務に時間を費やすことができるようになります。※</p> \n<p>また、社員一人ひとりの業務状況や課題、学習進捗を理解し、個別最適化されたサポートを提供することで社員のエンゲージメントが向上し、自身のスキルや経験の成長が客観的な指標やアバターの進化として可視化されることで、組織全体の生産性を最大化、継続的なモチベーション維持と自立的な学習を促進します。</p> \n<p>(※フェルミ推定条件 : 対象人数400人、年間稼働日数240日、情報探索の頻度を1日5回とした場合。導入前の情報探索時間3分/回、導入後の情報探索時間30秒/回にて試算。)</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/07/パイオにゃんlogo.png\"><img loading=\"lazy\" class=\"alignnone size-full wp-image-166487\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/07/パイオにゃんlogo.png\" alt=\"\" width=\"76\" height=\"19\"></a></p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/07/05.png\"><img loading=\"lazy\" class=\"alignnone wp-image-166490 size-full\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/07/05.png\" alt=\"\" width=\"567\" height=\"366\"></a></p> \n<h2></h2> &nbsp;\n<p></p> \n<h2>今後の展望</h2> \n<p>株式会社情報戦略テクノロジー様は、2025年のパイオにゃんβ版リリースを皮切りに、段階的な機能拡張を計画されています。社内のフィードバックを元に機能改善を行い、各ツールの連携を拡大していく予定です。中長期的には、音声入力や出力機能、API 公開による外部サービス連携を視野にいれており、社員間のAI エージェントの貸し借りを可能にすることで、異なる思考や情報収集を疑似体験できる新たな価値提供を実現することを目指されています。</p> \n<blockquote>\n <p>「『パイオにゃん』開発の核は、いかにして『一人ひとりに寄り添うAI』を実現するかでした。Amazon Bedrock の Knowledge Bases は、RAGによる高精度な検索とメタデータフィルタリングによる厳密な権限管理を驚くほど迅速に実現してくれました。技術的な挑戦であったアバターの成長システムも、今では社員のモチベーションを支える重要な要素です。アイデアを迅速に形にできたのは、AWSの豊富なサービス群と手厚いサポートがあったからこそ。生成AIの可能性を最大限引き出せるプラットフォームとして、Amazon Bedrock は最高の選択でした。」</p> \n <p>株式会社情報戦略テクノロジー AI Officer　藤本 雅俊 氏</p>\n</blockquote> \n<p>本取り組みは、アマゾンウェブサービスジャパン合同会社 広域事業統括本部主催の生成AI コンテストにてアイデアの革新性、ビジネスへの貢献度が高く評価され、23社の取り組みの中で「Scalable Innovation Award」を獲得されました。</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/07/06.png\"><img loading=\"lazy\" class=\"alignnone wp-image-166491 size-full\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/07/06.png\" alt=\"\" width=\"425\" height=\"319\"></a></p> \n<p>Amazon Web Services Japan</p> \n<p>アカウントマネージャー 中道 野々香</p> \n<p>ソリューションアーキテクト 小林 大樹</p>"
  },
  {
    "title": "BigQueryの本番データがすべて消えた日 - 大規模障害から学んだ復旧と再発防止策",
    "date": "2025-10-07T02:46:22.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/carenet/articles/recovering-from-bigquery-dataset-deletion",
    "content": "\n はじめに\nこんにちは！AI技術開発室のYTです。\nケアネットでは、本番データウェアハウスとしてBigQueryを導入しています。ユーザー向けサービスと連動はしておらず、データ解析を目的とし、複数の部署が単一のGoogle Cloudプロジェクトを共有してデータを集約する運用をとっています。\n今回は、冷や汗が止まらなかった、BigQueryの本番データセットをすべて削除してしまったインシデントについて、その原因と復旧の過程、そして得られた学びを共有したいと思います。同じような環境でデータ運用されている方の参考になれば幸いです。\n\n 障害発生から復旧までのタイムライン\n忘れもしない202..."
  },
  {
    "title": "第一三共、AWSと連携しAIエージェント統合型創薬基盤の構築を開始　ー　AI・クラウド・実験自動化技術の融合で次世代創薬研究プロセスを実現",
    "date": "2025-10-07T01:36:21.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/daiichi-sankyo-ai-agent-integrated-drug-discovery/",
    "content": "<p>第一三共株式会社（以下、第一三共）はAWSとの連携を強化し、AIエージェントシステムを統合した創薬研究基盤の構築を開始しました。第一三共は現在、AI・クラウド技術を実験自動化技術と融合した次世代の創薬研究プロセスを段階的に構築しており、2026年の運用開始を目指しています。</p> \n<p>近年、AIと高品質なデータの融合が、創薬研究に変革をもたらしています。なかでも、注目されているのが、創薬研究プロセス全体をAIエージェントシステムで統合し、研究者の知的活動をサポートする創薬AIプラットフォームです。（※1）英ウェルカムトラストとボストンコンサルティンググループ（BCG）の調査レポート（※2）によると、従来の低分子創薬の領域では探索研究から前臨床試験に至る創薬プロセスでのAI活用により、創薬研究に必要な時間とコストを少なくとも25-50%削減できる可能性が示されています。さらに第一三共が近年強化しているバイオロジクス創薬（※3）の領域においても、大規模言語モデルを活用した創薬の効率化に期待が高まるなど、AI活用が製薬業界における次世代イノベーションの鍵として世界的に注目を集めています。</p> \n<p><strong>独自の研究データとAIを融合した次世代創薬プロセスを実現</strong><br> 第一三共では、創薬研究プロセス全体の変革に向けて、研究者が従来、手作業で実施していた医薬品候補物質に関する実験の自動化を進めています。研究機器をAWSクラウド上で統合し、実験プロセスをプログラムコード化することで、実験から生まれたデータとその詳細情報（メタデータ）を自動的に捉え、AWS上の研究データ基盤に保存します。これにより、高品質な研究データを大規模に創出することが可能となります。さらに、この独自の研究データとAIを効果的に活用することで、創薬プロセスにおける医薬品候補物質の設計・合成・評価・分析（Design-Make-Test-Analyze、DMTA）サイクルの大幅な加速を目指しています。</p> \n<p>例えば、研究者が医薬品候補物質について実験の指示を出すと、AIエージェントが自律的に過去の研究データを参照して最適な実験を計画し、24時間365日、複数の自動化された研究機器を連携させながら実験を進め、データを保存します。この研究データを国際的に認められるFAIR原則（※4）に基づいて管理することで、研究者だけでなくAIエージェントも自律的にデータを活用できるようになります。</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/07/20251007_DaiichiSankyo_1-1.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-166456\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/07/20251007_DaiichiSankyo_1-1.jpg\" alt=\"\" width=\"2560\" height=\"1440\"></a></p> \n<p>第一三共では2023年に、組織横断でクラウド活用を推進するため、研究部門とIT部門が協働してCloud Center of Excellence（CCoE）を立ち上げ、翌2024年には研究者自身がセルフサービス方式でAWS上のクラウド基盤を創薬研究に利用できる環境を整備しました。今回の取り組みでは、研究機器をAWSクラウド上で統合し、<a href=\"https://aws.amazon.com/jp/sagemaker/unified-studio/\">Amazon SageMaker Unified Studio</a>を活用して、データメッシュアーキテクチャを採用した研究データ基盤を構築中です。データガバナンスポリシーに従い適切に管理・統制された環境において、AIエージェントを介したデータアクセスと活用を実現します。AIエージェントの開発には、生成AIアプリケーション構築のための<a href=\"https://aws.amazon.com/jp/bedrock/\">Amazon Bedrock</a>を採用し、将来的な導入に向けて<a href=\"https://aws.amazon.com/jp/bedrock/agentcore/\">Amazon Bedrock AgentCore</a> の検証も進めています。このように、AWSの多様なマネージドサービスを活用することで、創薬研究基盤におけるアジリティとスケーラビリティを高め、研究者がイノベーティブな活動に集中できる環境を実現します。</p> \n<p><strong>人材育成と組織変革で実現する持続的イノベーション</strong><br> AWSは第一三共の持続的な創薬プロセス変革に向けた、人材育成とアジャイルな組織文化の醸成も支援しています。第一三共はAWS Professional Servicesの助言のもと、研究者自身がクラウドサービスやAI技術を学習しながら、創薬研究のデジタル変革を主導する体制を構築しています。さらに、クラウド・AIを活用した複数のアジャイル研究チームが共通のビジョンと価値創出に向けて連携しやすいよう、プロダクトマネジメントオフィス（PdMO）を設置するなど、組織面における変革にもチャレンジしています。今後も第一三共はAWSとの連携を深化させ、技術面と組織文化の両面から変革加速を支援することで、「革新的医薬品を継続的に創出し、多様な医療ニーズに応える医薬品を提供する」という同社ミッションの実現に向けて取り組みを加速します。</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/07/20251007_DaiichiSankyo_2.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-166457\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/07/20251007_DaiichiSankyo_2.jpg\" alt=\"\" width=\"2560\" height=\"1440\"></a></p> \n<p>※1 日本政府 新しい資本主義のグランドデザイン及び実行計画2025年改訂版<br> <a href=\"https://www.cas.go.jp/jp/seisaku/atarashii_sihonsyugi/pdf/ap2025.pdf\" rel=\"noopener noreferrer\">https://www.cas.go.jp/jp/seisaku/atarashii_sihonsyugi/pdf/ap2025.pdf</a></p> \n<p>※2 ウェルカムトラスト・ボストンコンサルティンググループ（BCG）署 「Unlocking the potential of AI in Drug Discovery」2023年、6ページ<br> <a href=\"https://web-assets.bcg.com/86/e5/19d29e2246c7935e179db8257dd5/unlocking-the-potential-of-ai-in-drug-discovery-vf.pdf\" rel=\"noopener noreferrer\">https://web-assets.bcg.com/86/e5/19d29e2246c7935e179db8257dd5/unlocking-the-potential-of-ai-in-drug-discovery-vf.pdf</a></p> \n<p>※3バイオロジクス創薬：遺伝子、タンパク質、細胞といった生体由来の物質や生物の機能を利用し、医薬品を開発する創薬研究プロセス。従来の化学合成された小さな分子を用いて病気の原因となるタンパク質などの標的に作用する低分子医薬品では対応が難しかった複雑な疾患メカニズムに対応でき、特異性が高く副作用の少ない治療法を実現できる可能性があると期待されている</p> \n<p>※4 FAIR原則：研究データを「Findable（見つけられる）」「Accessible（アクセスできる）」「Interoperable（相互運用できる）」「Reusable（再利用できる）」にするための国際的な指針</p>"
  },
  {
    "title": "git rebase を日本一わかりやすく解説する - 利点編",
    "date": "2025-10-07T00:06:32.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/tomatommy/articles/471104acc92c27",
    "content": "\n この記事は何\ngit rebase について解説します。\nrebase のことをあまり知らない以上、git のことも細かいコマンドはあまり知らない方が多いと思います。git の知識はそこまで要りません。 git でチーム開発でも個人開発でも何かしら経験あれば十分 OK です。\ngit rebase について、日本語で一番わかりやすく解説します。\n\n rebase の噂\nrebase についてあまり知らない人が rebase に対して聞いたことある噂はこんなところじゃないでしょうか\n\n\ngit merge に似た何からしい\ngit の履歴が綺麗になるらしい\ngit の履歴を改竄するらし..."
  },
  {
    "title": "RAGの精度向上手法、がっつりまとめ【2025年】",
    "date": "2025-10-07T00:01:05.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/knowledgesense/articles/148dfe2ca1d146",
    "content": "\n この記事は何\nナレッジセンスでは、エンタープライズ向けにRAGサービスを提供しています。その中で「RAGは簡単に作れるけど、精度を上げるのは難しい」という課題に日々向き合っています。本記事は、2024~2025年に公開された研究や事例をもとに、RAGの回答精度を高める代表的なアプローチを ざっくりまとめたものです。\n\n ざっくりサマリー\nこの記事では、企業の社内データを利用したRAG、特に大企業で「エンタープライズRAG」での実装手法についてざっくり理解します。まず、エンタープライズRAGでのよくある課題をお伝えします。その上で、2025年現在の最新動向を踏まえ、評価手法のような基本..."
  },
  {
    "title": "OpenAI DevDay 2025の現地レポート【OPENING KEYNOTE編】",
    "date": "2025-10-06T23:37:32.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/galirage/articles/openai-dev-day-2025-keynote",
    "content": "はじめまして、ますみです！\n株式会社Galirage（ガリレージ）という「生成AIに特化して、システム開発・アドバイザリー支援・研修支援をしているIT企業」で、代表をしております^^\n\n\n\n 本記事のサマリー\n\nChatGPTに「Apps inside ChatGPT」が登場し、FigmaやSpotifyなど外部アプリを直接操作できるようなアプリケーション化するための機能が発表されました。\n開発者向け「Apps SDK（プレビュー版）」が公開され、データ連携・アクショントリガー・UI統合が可能になりました。\n「Agent Kit」により、ノーコードでAIエージェントを構築・配布・最適化で..."
  },
  {
    "title": "日本のヘルスケア・ライフサイエンス業界における戦略的ビジョン「Journey for 2030 データがつながる、価値を生む」を発表",
    "date": "2025-10-06T23:00:46.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/journey-for-2030/",
    "content": "<h2>データの分断を超えて、革新的な患者体験へ</h2> \n<p>ヘルスケア・ライフサイエンス業界はセキュリティが極めて重要な業界であるため、厳格な規制が設けられており、それらの規制へのコンプライアンス対応が欠かせません。一方で、世界経済フォーラムによると医療機関で生み出されるデータの97％は十分に活用されていないという現状があります。電子カルテや医用画像、検査結果などのデータが個々のシステムや組織に点在し、標準化も進んでいないため、患者理解に不可欠な情報が断片化され、最適な医療提供の障壁となっています。</p> \n<p>このたび AWS ジャパンは、日本のヘルスケア・ライフサイエンス業界に向けた戦略的ビジョン「<a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/06/IS-2025-Media-Briefing-公開用-.pdf\" target=\"_blank\" rel=\"noopener\">Journey for 2030 データがつながる、価値を生む</a>」を発表しました。このビジョンは、医療機関や製薬企業など患者を取り巻く多様なステークホルダーが、組織の壁を越えてデータを連携させ、革新的な患者体験を実現するうえでの AWS の貢献を示すものです。</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/03/Screenshot-2025-10-03-at-17.00.03.png\"><img loading=\"lazy\" class=\"alignnone size-full wp-image-166304\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/03/Screenshot-2025-10-03-at-17.00.03.png\" alt=\"\" width=\"2320\" height=\"1300\"></a></p> \n<h2>「縦」と「横」のつながりで新たな価値を創出</h2> \n<p>このビジョンの核心は、データを「つなぎ」、そこから「新しい価値を生み出す」という考え方です。</p> \n<p>「縦のつながり」とは、ゲノムや分子レベルのミクロデータから、診療記録や行動データといったマクロデータまでを統合することです。例えば、ゲノム解析と生活習慣データを結びつけることで、疾患リスクの早期予測や個別化医療が可能になります。</p> \n<p>「横のつながり」とは、医療機関・製薬企業・研究機関・行政など組織間の壁を越えたデータ共有です。現在バラバラに存在する患者データを横断的に結びつければ、疾患の進行や治療効果を長期的に追跡し、最適な医療介入が実現します。</p> \n<p>AWS ジャパンは、生成 AI とクラウドテクノロジーを活用してこの両方向のつながりを推進し、断片化されたデータから革新的な患者体験を創出します。</p> \n<h2>AWSが提供する4つの価値</h2> \n<h4>1. つないで広げる：組織を超えたデータ連携の実現</h4> \n<p>医療・製薬データは極めて多様で、それぞれの組織内に閉じている限り、真の価値創出は困難です。<a href=\"https://aws.amazon.com/jp/clean-rooms/\" target=\"_blank\" rel=\"noopener\">AWS Clean Rooms</a> は、原データを共有せずに安全にデータを統合・分析できる環境を提供します。 米国では Datavant 社がこのサービスを活用し、7万以上の医療機関と350以上のデータプロバイダーをつなぎ、数カ月の探索作業を数日に短縮しました。日本でも、リアルワールドデータを用いた治験補完や市販後調査の効率化など、医療費抑制と患者アウトカム改善に直結するユースケースが拡大しています。</p> \n<h4>2. かしこく支える：生成 AIによる意思決定と業務の高度化</h4> \n<p>整備されたデータ基盤があってこそ、生成AIやエージェントは真価を発揮します。<a href=\"https://aws.amazon.com/jp/bedrock/?trk=6ec54958-4750-4711-b5ab-ea91a9bf18b0&amp;sc_channel=ps&amp;ef_id=Cj0KCQjw0Y3HBhCxARIsAN7931Vk7YIcQKK7jGs3_vgnV7DjaFGRA_BKODYvCmAFZIEAgoRAY8iGItwaAlMuEALw_wcB:G:s&amp;s_kwcid=AL!4422!3!692062154789!e!!g!!amazon%20bedrock!21048268290!157173580937&amp;gad_campaignid=21048268290&amp;gclid=Cj0KCQjw0Y3HBhCxARIsAN7931Vk7YIcQKK7jGs3_vgnV7DjaFGRA_BKODYvCmAFZIEAgoRAY8iGItwaAlMuEALw_wcB\" target=\"_blank\" rel=\"noopener\">Amazon Bedrock</a> は複数の基盤モデルを統合的に利用でき、ユースケースごとに最適なモデルを選択できる環境を提供します。 スイスの製薬大手ロシュグループの Genentech 社では、創薬研究に AI エージェントを導入し、過去の特許・論文・ゲノムデータの統合探索を数日から10分に短縮。研究者は本質的な仮説構築や化合物設計に集中できるようになりました。</p> \n<h4>3. 安全にまもる：セキュアで信頼性の高いデータ活用基盤</h4> \n<p>AWS は世界最高水準のセキュリティを提供するとともに、日本国内の<a href=\"https://aws.amazon.com/jp/local/health/medical-information-guidelines-on-aws0/\" target=\"_blank\" rel=\"noopener\">3省2ガイドラインに準拠した利用リファレンス</a>をパートナーと共に公開しています。 ライフサイエンス領域では、GLP、GCP、GMP など（総称して GxP ）のコンプライアンス対応のための<a href=\"https://d1.awsstatic.com/whitepapers/compliance/JP_Whitepapers/GxP_Systems_on_AWS_J.pdf\" target=\"_blank\" rel=\"noopener\">ホワイトペーパー</a>や<a href=\"https://aws.amazon.com/jp/local/health/gxp-compliance/\" target=\"_blank\" rel=\"noopener\">パートナー提供のリファレンス</a>を通じ、治験データ保管や製造工程記録管理など厳格な要件が求められるユースケースでもお客様を支援します。</p> \n<h4>4. ともに進める：現場と育てるデジタル人材育成</h4> \n<p>持続的なデータ活用には人材育成が不可欠です。AWS はインプット（知識習得）、アウトプット（スキル獲得）、実践（内製化支援）の3段階で体系的な支援を提供します。 第一三共株式会社ではこの枠組みを活用し、創薬研究基盤の内製化を実現。外部依存を減らし、自社内で継続的にイノベーションを生み出せる組織文化を醸成しています。</p> \n<h2>新たな取り組み：HealthData x Agent [<a href=\"https://aws.amazon.com/jp/local/health/healthdata-x-agent/\" target=\"_blank\" rel=\"noopener\">ウェブサイト</a>][<a href=\"https://aws.amazon.com/jp/blogs/news/announcing-healthdata-agent-healthcare-lifescience-transformation/\" target=\"_blank\" rel=\"noopener\">ブログ</a>]</h2> \n<p>AWSは医療・製薬業界向けに「HealthData x Agent（ヘルスデータエージェント）」を新たに発表します。これは50個のユースケースに対応したデモ動画とツール群を無料で提供し、生成AIの具体的活用シナリオを示すものです。 医療機関向けには、診療記録から退院サマリーを自動生成するツールで医師や看護師の事務負担を軽減し、患者との時間を確保。製薬企業向けには、AI エージェントが化合物情報や試験データを統合解析し、創薬サイクルを大幅に短縮するツールを提供します。</p> \n<p>各ツールは現場の課題に直結するシナリオとともに提供され、AWS クラウドサービスを活用した実装サンプルとして、すぐに概念実証や本番検証を開始できます。詳細はこちらのブログをご参照ください。</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/03/Screenshot-2025-10-03-at-16.56.56.png\"><img loading=\"lazy\" class=\"alignnone size-full wp-image-166302\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/03/Screenshot-2025-10-03-at-16.56.56.png\" alt=\"\" width=\"2318\" height=\"1282\"></a></p> \n<h2>お客様事例：データから価値を創出する先進的取り組み</h2> \n<h4>第一三共株式会社： AWS 基盤による Discovery Research DX の加速　[<a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/06/20251007_AWSmediabriefing_Daiichi-Sankyo.pdf\" target=\"_blank\" rel=\"noopener\">ご登壇スライド</a>] [<a href=\"https://aws.amazon.com/jp/blogs/news/daiichi-sankyo-ai-agent-integrated-drug-discovery/\" target=\"_blank\" rel=\"noopener\">ブログ</a>]</h4> \n<p>第一三共は、AWS と連携してAI エージェント統合型創薬基盤の構築を開始したことを発表しました。AI エージェントシステムと実験自動化技術を統合することで、創薬研究に必要な時間とコストを大幅に削減し、研究効率の向上を図ります。また、研究者自身がクラウドサービスや AI 技術を主体的に活用できる環境を整備し、人材育成とアジャイルな組織文化の醸成を通じて持続的なイノベーションを推進しています。これらの取り組みにより、革新的な医薬品をより迅速に患者さんに届ける創薬研究プロセスの実現に貢献していきます。</p> \n<h4>国立大学法人 浜松医科大学： GenU を用いた医療情報利活用　[<a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/03/AWS医療製薬シンポジウム2025-配布用.pdf\" target=\"_blank\" rel=\"noopener\">ご登壇スライド</a>] [<a href=\"https://aws.amazon.com/jp/blogs/news/changing-incurable-future-for-medical-builders/\" target=\"_blank\" rel=\"noopener\">ブログ</a>]</h4> \n<p>浜松医科大学は、静岡県全体の医療空洞化という社会課題の解決に向け、デジタルトランスフォーメーション（DX）による医療の高度化等を確立するため、クラウドを活用したデータプラットフォーム構築に取り組んでいます。このプラットフォームを活用し、国が進める「医療 DX令和ビジョン2030」の柱の一つである「電子カルテ情報共有サービス」のモデル事業の来年度本番運用開始を予定しています。また、AWS とはスマートヘルスケア実現に向けた包括連携協定を締結しており、生成 AI アプリ実装ソリューションである GenU (Generative AI Use Cases JP)を活用し、医療従事者の働き方改革の実現を目指しています。</p> \n<h2>日本の医療・製薬の未来に向けて</h2> \n<p>AWS は、行政、アカデミア、医療機関、製薬企業、ヘルステック企業など多様なステークホルダーの戦略的パートナーとして、日本独自の課題解決に貢献することを強くコミットしています。グローバルの知見を活かしながらも日本市場のニーズに即した支援を提供し、2030年に向けて質の高い個別化医療の実現に貢献します。データがつながり、新たな価値が生まれるとき、日本のヘルスケア・ライフサイエンスは大きく進化します。その未来を、AWS はお客様とともに切り拓いてまいります。</p> \n<p>&nbsp;</p> \n<p>アマゾン ウェブ サービス ジャパン合同会社<br> 常務執行役員 エンタープライズ事業統括本部長 堤 浩幸<br> 常務執行役員 パブリックセクター統括本部長 宇佐見 潮</p>"
  },
  {
    "title": "20周年記念にGitを嫌いになろう",
    "date": "2025-10-06T22:59:31.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/mokume1shine/articles/434cd1ff53803e",
    "content": "!\nGitに対して（理不尽に）キレてみることがこの記事のコンセプトです。\nそのため、考察が甘い・過剰な言い切り表現になっている部分があります。ご了承ください。\nコメントありがとうございます。追加検討の材料にさせていただきます。\n\n\n 20周年記念にGitを嫌いになろう\n\nGitは最悪のバージョン管理システムである、ほかに使われたバージョン管理システムを除いては。\n\nというのはチャーチルの言ってない名言です。\nバージョン管理から逃れることはできません、逃げた先には約束された破滅が待っています。\nバージョン管理システムは、誰が何をどう変更したのかを記録し、誰かがやらかしたときに巻き戻し、誰か..."
  },
  {
    "title": "治せない未来を変えるために——日本の医療を支えるすべてのBuilderたちへ",
    "date": "2025-10-06T22:39:29.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/changing-incurable-future-for-medical-builders/",
    "content": "<p>「先生、この薬は本当に使えないのですか？」<br> 40代の母親がそう尋ねたとき、主治医は言葉を失いました。<br> 効果があると知っているのに—「日本ではまだ承認されていません」。<br> 生きられたかもしれない命が、静かにこぼれ落ちていく。そんな現実が、この国の医療で起きています。</p> \n<h2>数字が物語る、日本の医療の危機</h2> \n<p>2024年、国立大学病院長会議の発表によれば、全国42の国立大学病院のうち32病院が赤字見込み<sup>1）</sup>。医療機関の倒産は事業者（施設運用主体者）数ベースで64件、休廃業・解散は722件。過去最多を更新しました。<sup>2)</sup><br> これは単なる経営の問題ではなく、医療の質や安全性に直結します。</p> \n<h2>医療DXの遅れが、新薬開発の足かせに</h2> \n<p>電子カルテの普及率は、医療施設種別で差があり、一般病院では約65.6%・診療所では約55%（2023年医療施設調査）と報告されています。400床以上の病院では、90%が導入済みとされていますが、世界的には、医療機関が日々生成するデータのうち約97%が活用されていないとの指摘があり<sup>4)</sup> 日本も例外ではありません。医師の働き方はすでに逼迫しており、業務効率の観点でも問題ですが、加えて、臨床試験の効率低下、研究時間の不足、リアルワールドデータ（RWD）の質と量の不足といった深刻な問題を引き起こしています。</p> \n<p>特に、新薬開発に欠かせない臨床試験において、複雑化する適格基準に対応するためには、単なるデジタル化や従来型の検索では限界があり、医師が夜遅くまでカルテや検査データを照らし合わせても、見落としや誤選定のリスクが付きまといます。結果として、試験の達成率は下がり、エントリー期間は延び、治験開始後においても、労働集約的で高コストな環境に、製薬企業は日本での開発投資を躊躇う。日本の患者は「治せるはずの未来」から遠ざかってしまうのです。</p> \n<h2>ドラッグ・ラグとドラッグ・ロス——命の選択肢が奪われる現実</h2> \n<p>厚生労働省の調査によれば、欧米では承認されているが日本で未承認の医薬品は143品目で、そのうち86品目が国内で開発未着手、57品目が開発中（＝承認が遅延している）とされています（2023年時点の集計）。希少疾患やがんの患者にとって、これは「生きられたかもしれない命」が失われる現実です。</p> \n<p>保険が使えず、1カ月数百万円の治療費。副作用の強い旧来治療しか選べない。承認を待つ間に病状が進行する——。技術の遅れが、命の選択肢を奪っています。</p> \n<h2>現場発の挑戦——DXで”治せる未来”を取り戻す</h2> \n<p>こうした厳しい現実を前に、医療現場からはテクノロジーを駆使した挑戦が始まっています。2025年7月に実施された<a href=\"https://jami2025symp.org/\">第29回日本医療情報学会春季学術大会</a>では、藤井進先生（東北大学災害科学国際研究所/東北大学病院　メディカルITセンター・医療データ利活用センター）を座長に迎え、2つの希望ある事例が発表されました。</p> \n<h3>東北大学病院：危機を超えて未来へ</h3> \n<p>中村直毅先生（東北大学病院メディカルITセンター）は、コロナ禍におけるDX推進を振り返りながら、こう語ります。</p> \n<p>「医療従事者と医療技術者が協力して、宿泊施設が第二の病院として機能するように、情報連携の仕組みを整備しました。結果、宮城県の感染者数・死亡者数を全国でも最小に食い止め、DX大賞の受賞に繋がりました<sup>6）</sup>が、すべてお手製で、非常事態の中で限界を超えた挑戦でした。」</p> \n<p>コロナ禍を乗り越えた2025年、同院が取り組むのは臨床試験業務のAI活用による効率化です。</p> \n<p>「AIエージェントが、複雑な条件の下でも自律的に患者をスクリーニングし、エラー修正も含めてリスト作成まで完結してくれました。今回の実証で、AIエージェントが、ドラッグ・ラグやドラッグ・ロスの原因の1つである被検者検索に係る課題解決に貢献しうるという手応えを得ました。今後も、技術を活用して、現場に山積する課題を解決し、治療が届く未来を実現したいと思います。」</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/02/cif01-tohoku.png\"><img loading=\"lazy\" class=\"alignnone size-full wp-image-166171\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/02/cif01-tohoku.png\" alt=\"\" width=\"709\" height=\"381\"></a></p> \n<h3>浜松医科大学：看護変革の最前線</h3> \n<p>寺阪比呂子先生（浜松医科大学医学部附属病院）は、看護業務におけるAI活用の可能性を示しました。</p> \n<p>「褥瘡マット選定という、患者の状態・在庫状況・使用実績など複雑な判断を要する業務でも、AIエージェントが的確に支援してくれました。看護師は日々膨大な記録業務に追われているので、記録システムの再構築を行い、対患者ケアの時間を増やしたいと考えています。」</p> \n<p>一方で、市販のAIツールは現場の多様なニーズに必ずしも合致しておらず、職種・業務ごとに別のツールを導入するのはコスト面での最適化が困難であることを指摘しました。職種・診療科に応じて現場の意見を基にコントロールできる柔軟なAIシステムの必要性を課題提起されました。</p> \n<p>座長の東北大学藤井先生は、本セッションが、医療情報を作る側（東北大学病院）と使う側（浜松医科大学）からの発表だったことに触れ、医療現場に定着する仕組みを作るには、多職種・多様な観点からの実証が重要であることを示唆されました。ご興味を持たれた方は、ぜひ浜松医科大や東北大学病院に視察に来てくださいと、同じビジョンや課題意識を持つ聴講者の皆さんとの意見交換と連携を呼びかけ、セッションを締めくくられました。</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/02/cif02-hamamatsu.png\"><img loading=\"lazy\" class=\"alignnone size-full wp-image-166170\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/02/cif02-hamamatsu.png\" alt=\"\" width=\"709\" height=\"382\"></a></p> \n<h2>地域医療における課題解決を生成AIで加速</h2> \n<p>浜松医科大学の生成AI活用プロジェクトは、取組は、AWSの包括連携協定締結（2024年11月）<sup>７）</sup>をうけて本格始動したもので、人口減少や少子高齢化に直面する県内の医療課題解決を目指し、医療従事者の働き方改革にも対応する取り組みが進められています。</p> \n<p>こうした取り組みは、日本全体が直面する課題とも繋がっています。</p> \n<h2>病院から地域全体へ-社会インフラとして医療供給体制の変革を支えるクラウド-</h2> \n<p>人口1,000人当たり2.4人という少ない医師数で、世界最高水準の病床数13.0床<sup>8)</sup>を支えてきた日本の医療体制。2025年以降、団塊世代の後期高齢者入りにより医療需要はピークを迎える一方で、生産年齢人口の急激な減少により医療従事者不足は深刻化します<sup>9)</sup>。こうした未来に備えるには、医療供給体制の抜本的な再構築が避けられません。今後10年間で予想されるのは、病床の統廃合、病院の機能分化と統合、そして地域医療ネットワークの重要性の飛躍的な高まりです。</p> \n<p>急性期は高度医療に特化し、回復期・慢性期は地域に分散。診療所・薬局・介護施設・在宅医療がひとつのネットワークとして連携する。こうした再編を、セキュリティを担保しながら推進する、その要となるのが、クラウド基盤です。</p> \n<h2>クラウドで推進する医療Dx</h2> \n<p>6月13日のAWS Healthcare Webinar<sup>10）</sup>で、東京慈恵医科大学の高尾洋之先生は強調しました。<br> 「医療DX推進にはデータのデジタル化とAI活用が不可欠であり、その基盤としてクラウドは欠かせません。」</p> \n<p>クラウドは、医療データの柔軟な拡張、災害時の安全なバックアップ、遠隔診療でのリアルタイム共有、多職種連携、AI利用促進、セキュリティ対応、コスト効率化、最新環境維持など多くの利点を持ちます。政府の医療DX方針や実装手順も整備され、クラウドは医療の安全性と効率化を支える基盤として位置付けられています。</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/02/cif03-cloud.png\"><img loading=\"lazy\" class=\"alignnone size-full wp-image-166169\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/02/cif03-cloud.png\" alt=\"\" width=\"555\" height=\"438\"></a></p> \n<h2>世界初・日本初ブロックチェーンでドラッグ・ラグ、ドラッグ・ロスに挑むBuilderの取り組み</h2> \n<p>医療情報学会に先立って開催されたAWS Summit Tokyo 2025では、持続可能な医療の実現に向けて世界初・日本初の取り組みを推進するBuilderの事例として、SUSMED（サスメド）社の取り組みが紹介されました。（動画は<a href=\"https://www.youtube.com/watch?v=4VmVjkJmwko&amp;t=1652s\">こちら</a>から）ブロックチェーン技術を世界で初めて治験に導入した同社は、東京科学大学との実証でモニタリング業務の効率を3割改善し、さらに、サンドボックス制度を活用して医薬品承認申請への応用も実証しています。<sup>11)</sup>データの信頼性を担保しながら、治験を推進できるため、ドラッグ・ラグやドラッグ・ロスの解決に寄与することが期待されます。また、同社が24年に東北大学と発表したブロックチェーンを活用した静脈の疾患レジストリ<sup>12）</sup>は、日本初の取組で、製造販売後データベース調査のデータの信頼性を担保し、そのまま条件再評価や適用拡大に使えるため、現場の負担を軽減しながら、最新の治療方法を患者さんに届けることに貢献します。</p> \n<p>代表取締役　医師の上野太郎氏は次のように語っています：</p> \n<p>「医療の現場で、デジタル技術が貢献できる場面は急速に増えています。命と向き合う現場に技術者の貢献が不可欠なものとなっています」</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/02/cif04-susmed.png\"><img loading=\"lazy\" class=\"alignnone size-full wp-image-166168\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/02/cif04-susmed.png\" alt=\"\" width=\"872\" height=\"411\"></a></p> \n<p>医療現場の危機は、新型コロナが過ぎても終わったわけではありません。むしろ、人口減少と超高齢社会の到来、医師不足の加速により、課題はより複雑さを増しています。ドラッグ・ラグやドラッグ・ロスの解消、医療供給体制の再編、個別化医療の推進等一つ一つの課題が複雑で多層的であり、単一の技術やノウハウ、1医療機関、1企業だけの尽力では解決できません。だからこそ、私たちAWSは医療・ヘルスケア業界の皆様に、協業の加速を呼びかけます。AWSのクラウド技術、AI・機械学習、セキュリティ、そしてグローバルな知見と、パートナー企業の知見、医療従事者が持つ専門知識、現場での実践経験、病気と闘う患者さんや見守る家族への深い理解—これらを組み合わせることで、今まで解決できなかった課題に新たなアプローチを見出すことができるはずです。</p> \n<h2>医療界の「アポロ計画」-協業で切り拓く医療の未来</h2> \n<p>1961年、ケネディ大統領は「この10年で人類を月に送る」と宣言しました。当時、多くの専門家が「不可能」と断じたこの目標に対し、NASA、民間航空宇宙企業、大学の研究者、材料科学者、コンピュータ技術者等40万人もの異なる専門分野の人々が集結、1969年7月20日、人類は月面に第一歩を記しました。「不可能を可能にする協業の力」を証明した瞬間です。</p> \n<h2>あなたの技術が未来を変える</h2> \n<p>協業の力が歴史を変えたように、未来の医療もまた、多くの人の力で変えられます。<br> その中で、あなたの技術や洞察が果たす役割は決して小さくありません。</p> \n<p>患者と家族が嘆きます。「日本では、病気が治せない」<br> 治験担当医師がカルテの前で頭を抱えます。「ここにいるはずの患者さんを、探し出せない」<br> 夜勤明けの看護師はつぶやきます。「患者さんともっと話したい」</p> \n<p>—この声に応えるのは、あなたかもしれません。</p> \n<p>あなたの技術や洞察が、誰かの命を救う未来を切り拓く。</p> \n<p>AWSはその挑戦を、全力で支援します。</p> \n<h4>出展</h4> \n<p>1) 国立大学病院の赤字（32病院） — m3報道（国立大学病院長会議の記者会見報道）。<a href=\"https://www.m3.com/news/iryoishin/1236912\">m3.com</a></p> \n<p>2) 医療機関の倒産／休廃業件数（倒産64件・休廃業722件） — 帝国データバンクの調査レポート（2024年）。<a href=\"https://www.tdb.co.jp/report/industry/20250122-iryoukikan/\">TDB</a></p> \n<p>3) 電子カルテ導入率（病院65.6%、診療所55%：2023年医療施設調査） — 厚生労働省の医療施設調査／関連報道（JAHIS等まとめ）。<a href=\"https://nkgr.co.jp/useful/enterprise-strategy-116280/\">nkgr.co.jp</a></p> \n<p>4) 「医療データの97%が未活用」 — World Economic Forum（記事）。※グローバル数値。<a href=\"https://www.weforum.org/stories/2024/01/how-to-harness-health-data-to-improve-patient-outcomes-wef24/\">World Economic Forum</a></p> \n<p>5) ドラッグラグ／ドラッグロスの現状（143品目・86未着手・57開発中） — 厚生労働省「ドラッグ・ロスの実態」調査（令和6年度科研事業資料）。<a href=\"https://www.mhlw.go.jp/content/10808000/001462594.pdf\">厚生労働省</a></p> \n<p>6) 東北大学のDX取り組みと受賞（TOHOKU DX大賞ほか） — 東北大学公式リリース／学会資料。<a href=\"https://www.tohoku.ac.jp/japanese/2022/06/press20220627-01-dx.html\">tohoku.ac.jp</a></p> \n<p>7) 浜松医科大学・アマゾンウェブサービスジャパン合同会社「包括連携協定の締結について」（2024年11月19日）<br> <a href=\"https://www.hama-med.ac.jp/topics/20241119.html\">https://www.hama-med.ac.jp/topics/20241119.html</a></p> \n<p>8) OECD Health Statistics 2023「Physicians (per 1,000 population)」<br> OECD Health Statistics 2023「Hospital beds (per 1,000 population)」<br> <a href=\"https://stats.oecd.org/Index.aspx?DataSetCode=HEALTH_REAC\">https://stats.oecd.org/Index.aspx?DataSetCode=HEALTH_REAC</a></p> \n<p>9) 国立社会保障・人口問題研究所「日本の将来推計人口（令和5年推計）」（2023年推計）<br> <a href=\"https://www.ipss.go.jp/pp-zenkoku/j/zenkoku2023/pp2023_gaiyou.pdf\">https://www.ipss.go.jp/pp-zenkoku/j/zenkoku2023/pp2023_gaiyou.pdf</a></p> \n<p>10) AWS Healthcare Webinar「生成AIと医療の未来」（登壇：高尾洋之氏, 2025年6月13日）<br> <a href=\"https://aws.amazon.com/jp/events/healthcare-webinar-2025/\">https://aws.amazon.com/jp/events/healthcare-webinar-2025/</a></p> \n<p>11) フォームの始まりフォームの終わりSUSMEDの実証・効率化データ— SUSMED / AWS 発表資料（SUSMED SourceDataSync のスライド／PDF）<br> <a href=\"https://pages.awscloud.com/rs/112-TZM-766/images/20241121-HCLS-2_Susmed.pdf\">https://pages.awscloud.com/rs/112-TZM-766/images/20241121-HCLS-2_Susmed.pdf</a></p> \n<p>12) 医療機器の使用成績調査の利活用を促進する 統合型静脈疾患レジストリシステムを構築 ～医療現場の省力化・効率化と情報の信頼性を確保～<br> <a href=\"https://www.tohoku.ac.jp/japanese/2024/12/press20241211-05-system.html\">https://www.tohoku.ac.jp/japanese/2024/12/press20241211-05-system.html</a></p> \n<p>問い合わせ窓口：<a href=\"mailto:aws-healthcare-ps@amazon.com\">aws-healthcare-ps@amazon.com</a></p> \n<h3>著者について</h3> \n<footer> \n <div class=\"blog-author-box\"> \n  <div class=\"blog-author-image\">\n   <img loading=\"lazy\" class=\"alignleft\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/03/suzutan.jpg\" alt=\"Naoko Suzuta\" width=\"65\" height=\"97.5\">\n  </div> \n  <p><strong>鈴田 尚子 (Naoko Suzuta)</strong> ヘルスケア事業本部　アカウントエグゼクティブ<br> 医療機関の働き方改革をはじめとした課題解決や、医療・看護・介護に関わるHealthTech企業のサービス開発等を、クラウドサービスで実現する支援をしています。製薬や医療機器メーカーでの勤務経験もあり、現場で患者さんと向き合う医療従事者の方々の努力に深い敬意を抱いています。クラウドが少しでもその支えになれるよう、今後も真摯に取り組んでまいります。 </p>\n </div> \n</footer>"
  },
  {
    "title": "OpenAI DevDay 2025 発表まとめ",
    "date": "2025-10-06T18:01:44.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/schroneko/articles/openai-devday-2025",
    "content": "!\nこの記事は人力で書きました。\n\n\n tl;dr\n\nOpenAI DevDay 2025 がサンフランシスコで開催されたよ\nサンフランシスコ現地から情報をお送りするよ\nChatGPT 上で使える Apps SDK が公開されたよ（収益化の話も）\nAI Agent ワークフローを構築するための AgentKit が公開されたよ\n合わせてノーコードライクに操作できる Agent Builder も公開されたよ\nCodex が正式リリース、Slack から使えるようになったよ\n動画生成の Sora 2 の API が公開されたよ\n\n\n サムアルトマン CEO のキーノート\nhttps://w..."
  },
  {
    "title": "Claude Code入門 - AI駆動開発の基礎を1日で身につけよう",
    "date": "2025-10-06T15:41:50.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/tmasuyama1114/books/claude_code_basic",
    "content": "こんにちは、とまだです。\n\n「Claude Codeって何？」「AIで本当にコードが書けるの？」と思ったことはありませんか？\n\nこの本では Claued Code を使ったAI駆動開発の基本を 1日で身につけることができます。\n\n【こんな方におすすめ】\n・AI開発ツールに興味はあるけど、どこから始めていいかわからない\n・Claude Codeをインストールしたけど、使い方がよくわからない\n・開発作業を効率化して、もっと創造的な仕事に時間を使いたい\n・AIアシスタントと協働する次世代の開発スタイルを体験したい\n\n【本書で身につくスキル】\n■ Claude Codeの基礎理解\n- ターミナルで動く自律的なAIアシスタントの仕組み\n- 従来の開発ツールとの違い\n- Claude Codeが得意なこと・不得意なこと\n\n■ 確実なセットアップ\n- Node.jsのインストールから認証まで\n- つまずきやすいポイントを丁寧に解説\n- 最適な開発環境の構築方法\n\n■ 効率的な操作方法\n- 起動オプションの使い分け\n- インタラクティブモードでの快適な操作\n- 便利なスラッシュコマンドの活用法\n\n■ メモリシステムの活用\n- CLAUDE.mdによるプロジェクト知識の蓄積\n- 効率的なメモリ管理のコツ\n- settings.jsonでの詳細な設定\n- カスタムコマンドで開発を自動化\n\n【学習の流れ】\n本書は段階的なアプローチでClaude Codeを学ぶことができます。\n\nまず「Claude Codeとは何か」から始まり、確実にセットアップを完了させます。\n\nそして基本的な操作方法を身につけ、最後はメモリシステムやカスタムコマンドなど、実践的な活用法まで学習します。\n\n各チャプターは初心者がつまずきやすいポイントを丁寧に解説しているので、安心して進められます。\n\n【技術スタック】\n- Claude Code（ターミナルで動くAI開発アシスタント）\n- Node.js（実行環境）\n- VS Code（推奨エディタ）\n- CLAUDE.md（プロジェクトメモリシステム）\n\n【最後に】\nClaude Codeを学ぶことで、AIアシスタントと協働する新しい開発スタイルを体験できます。\n\nまた、効率的なメモリ管理やカスタムコマンドの活用は、開発効率を劇的に向上させてくれるはずです！\n\nそしてこの本で学んだあと、私の動画講座も試してみてはいかがでしょうか？\nClaude Code や Codex など、AI駆動開発分野のベストセラー講座で実践レベルにスキルアップしましょう！\nhttps://school.learning-next.app/coupons?topic=claude-code"
  },
  {
    "title": "全プロセスが一秒止まる不具合続編: カーネル内部で何が起きたか？",
    "date": "2025-10-06T08:00:01.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/turing_motors/articles/fdfb70b7a9d90b",
    "content": "\n はじめに\n完全自動運転の実現を目指すスタートアップ「チューリング」でエンジニアをしています、鈴木勝博です。私が所属しているDrivingSystemチームでは、自動運転向けのシステム開発を担当しています。\nLinuxを用いたシステム開発を行っていると、カーネルの挙動、周辺デバイスとの組み合わせ等によって、思いがけない問題に遭遇することが少なくありません。この記事では、実際にシステム開発中に遭遇した「再現が難しく、原因の切り分けに時間を要した問題」について深堀りしてご紹介します。\n概要編はこちらのテックブログにてご紹介しています。\nhttps://zenn.dev/turing_mot..."
  },
  {
    "title": "【TypeScript】カスタムエラーのすすめ",
    "date": "2025-10-06T04:40:36.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/praha/articles/a8b72ba36294fe",
    "content": "TypeScriptで開発をしていると、APIエラーやバリデーションエラーなど、さまざまなエラーを扱う場面があります。\nそんなときに、標準のErrorクラスだけで対応していませんか。\nこの記事では、カスタムエラーを導入するメリットと、ボイラープレートを減らしてカスタムエラーを楽に定義出来るライブラリを紹介します。\n\n カスタムエラーを作る理由\n標準のErrorクラスを使用することで楽にエラーを作成できますが、次のような問題があります。\n\nエラーの種類を区別しづらい\n追加の情報（HTTPステータスやエラーコードなど）を持たせづらい\nメッセージが一貫しない\n\nたとえば次のような例を考えてみま..."
  },
  {
    "title": "Rustのパターンマッチってアートだヨネ",
    "date": "2025-10-06T02:08:20.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/namn1125/articles/1a40205d9f8f9a",
    "content": "こんにちワ！　Rust大好きなサーバーサイドエンジニアのnamniumと申します。\nRustのソースコードはしばしばアートのように振る舞います。その中でもRustのパターンマッチは言語を代表する機能だけあって、綺麗に書けた時の美しさといえば筆舌に尽くしがたいです！　今回はそんなRustパターンマッチの世界を皆様に紹介したく無理やり筆を執りました！\n次の\"アート\"に違和感を持った方はぜひ本記事を読んでみてほしいです[1]！\n\nlet Point { x, y } = p;\nlet c @ 'A'..='Z' = v else { return; };\nlet () = {};\nlet ((..."
  },
  {
    "title": "“macOS→Omarchy”の移行ガイド",
    "date": "2025-10-06T00:41:32.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/agata/articles/72f70d607dd8f3",
    "content": "!\n\n\n2025-10-08: 音声文字入力ソフト、ナチュラルスクロール、タブ化のショートカットの Omarchy 本体でのサポート予定について追記\n\n2025-10-07: システム全体の日本語化の補足、Public Keyの記事の追加、音声の再生が途切れる件の解消法の追記、ダッシュボードのサンプルが一部動作しなかったため cal → btopに変更、ウインドウのタブ化のバイディング設定の一部が間違っていたので修正、音声編集ソフトについて追記\n\n2025-10-06: 初版\n\n\n\n はじめに\n私は Mac がまだ “Macintosh” と呼ばれていたころからずっと Mac を使ってき..."
  },
  {
    "title": "【なぜAIに設計を任せると成長が止まるのか】Kiroを使っても学べない設計スキルの真実",
    "date": "2025-10-05T23:06:54.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/sunagaku/articles/0105c57e0a1283",
    "content": "\n はじめに\n僕自身、実務や個人開発でAIを活用して開発しています。Kiroやcc-sddを使った仕様駆動開発を行い、AI を使って生産性は向上している。また余った時間をコードレビューにも使い、コードの質もある程度は担保出来るようになりました。\nしかし、ある時ふと感じました。「僕自身の設計スキルは向上してないのでは？」と。\nAIに機能要件を伝えれば設計書を作ってくれるし、その段階でレビューすれば設計の質も担保できる。しかし「自分自身は何も成長していない」とも同時に感じていました。\nそこで「AIを使いつつ、設計スキルを最大限高めるにはどうしたらいいか？」を自分なりに整理してみました。まずは..."
  },
  {
    "title": "go testのキャッシュの仕組みを理解して、テストコードを変えずにCIを高速化する",
    "date": "2025-10-05T22:30:01.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/drsprime/articles/go-test-cache-ci-optimization",
    "content": "\n サマリ\n\ngo testは、パッケージごとにテスト結果をキャッシュしている\nソースコードに加え、テストコマンドの引数やテスト内で参照したファイルや環境変数がすべて同じなら、キャッシュが利用される\nそのため、基本的にはCI上でもGoのキャッシュ機構を使用しても問題ない\nGoが検知できない変更（設定ファイルやデプロイ設定の変更など）がある場合は、キャッシュをクリアすることで偽陰性を回避する必要がある\n\n\n はじめに\n普段の開発でGoを使用しているのですが、CIでのテスト実行時間に課題感を感じていました。\nテストを高速化したいと思ったのですが、テストコード自体を改善するには結構大きな変更が..."
  },
  {
    "title": "vitejs/vite – v7.1.9",
    "date": "2025-10-03T00:41:51.000Z",
    "source": "GitHub",
    "url": "https://github.com/vitejs/vite/releases/tag/v7.1.9",
    "content": "Please refer to [CHANGELOG.md](https://github.com/vitejs/vite/blob/v7.1.9/packages/vite/CHANGELOG.md) for details."
  },
  {
    "title": "vitejs/vite – v7.1.8",
    "date": "2025-10-02T06:15:47.000Z",
    "source": "GitHub",
    "url": "https://github.com/vitejs/vite/releases/tag/v7.1.8",
    "content": "Please refer to [CHANGELOG.md](https://github.com/vitejs/vite/blob/v7.1.8/packages/vite/CHANGELOG.md) for details."
  },
  {
    "title": "vitejs/vite – create-vite@8.0.2",
    "date": "2025-10-02T05:51:22.000Z",
    "source": "GitHub",
    "url": "https://github.com/vitejs/vite/releases/tag/create-vite%408.0.2",
    "content": "Please refer to [CHANGELOG.md](https://github.com/vitejs/vite/blob/create-vite@8.0.2/packages/create-vite/CHANGELOG.md) for details."
  },
  {
    "title": "facebook/react – 19.2.0 (Oct 1, 2025)",
    "date": "2025-10-01T21:50:48.000Z",
    "source": "GitHub",
    "url": "https://github.com/facebook/react/releases/tag/v19.2.0",
    "content": "Below is a list of all new features, APIs, and bug fixes.\r\n\r\nRead the [React 19.2 release post](https://react.dev/blog/2025/10/01/react-19-2) for more information.\r\n\r\n## New React Features\r\n\r\n- [`<Activity>`](https://react.dev/reference/react/Activity): A new API to hide and restore the UI and internal state of its children.\r\n- [`useEffectEvent`](https://react.dev/reference/react/useEffectEvent) is a React Hook that lets you extract non-reactive logic into an [Effect Event](https://react.dev/learn/separating-events-from-effects#declaring-an-effect-event).\r\n- [`cacheSignal`](https://react.dev/reference/react/cacheSignal) (for RSCs) lets your know when the `cache()` lifetime is over.\r\n- [React Performance tracks](https://react.dev/reference/developer-tooling/react-performance-tracks) appear on the Performance panel’s timeline in your browser developer tools\r\n\r\n## New React DOM Features\r\n\r\n- Added resume APIs for partial pre-rendering with Web Streams:\r\n  - [`resume`](https://react.dev/reference/react-dom/server/resume): to resume a prerender to a stream.\r\n  - [`resumeAndPrerender`](https://react.dev/reference/react-dom/static/resumeAndPrerender): to resume a prerender to HTML.\r\n- Added resume APIs for partial pre-rendering with Node Streams:\r\n  - [`resumeToPipeableStream`](https://react.dev/reference/react-dom/server/resumeToPipeableStream): to resume a prerender to a stream.\r\n  - [`resumeAndPrerenderToNodeStream`](https://react.dev/reference/react-dom/static/resumeAndPrerenderToNodeStream): to resume a prerender to HTML.\r\n- Updated [`prerender`](https://react.dev/reference/react-dom/static/prerender) APIs to return a `postponed` state that can be passed to the `resume` APIs.\r\n\r\n## Notable changes\r\n\r\n- React DOM now batches suspense boundary reveals, matching the behavior of client side rendering. This change is especially noticeable when animating the reveal of Suspense boundaries e.g. with the upcoming `<ViewTransition>` Component. React will batch as much reveals as possible before the first paint while trying to hit popular first-contentful paint metrics.\r\n- Add Node Web Streams (`prerender`, `renderToReadableStream`) to server-side-rendering APIs for Node.js\r\n- Use underscore instead of `:` IDs generated by useId\r\n\r\n## All Changes\r\n\r\n### React\r\n\r\n- `<Activity />` was developed over many years, starting before `ClassComponent.setState` (@acdlite @sebmarkbage and many others)\r\n- Stringify context as \"SomeContext\" instead of \"SomeContext.Provider\" (@kassens [#33507](https://github.com/facebook/react/pull/33507))\r\n- Include stack of cause of React instrumentation errors with `%o` placeholder (@eps1lon [#34198](https://github.com/facebook/react/pull/34198))\r\n- Fix infinite `useDeferredValue` loop in popstate event (@acdlite [#32821](https://github.com/facebook/react/pull/32821))\r\n- Fix a bug when an initial value was passed to `useDeferredValue` (@acdlite [#34376](https://github.com/facebook/react/pull/34376))\r\n- Fix a crash when submitting forms with Client Actions (@sebmarkbage [#33055](https://github.com/facebook/react/pull/33055))\r\n- Hide/unhide the content of dehydrated suspense boundaries if they resuspend (@sebmarkbage [#32900](https://github.com/facebook/react/pull/32900))\r\n- Avoid stack overflow on wide trees during Hot Reload (@sophiebits [#34145](https://github.com/facebook/react/pull/34145))\r\n- Improve Owner and Component stacks in various places (@sebmarkbage, @eps1lon: [#33629](https://github.com/facebook/react/pull/33629), [#33724](https://github.com/facebook/react/pull/33724), [#32735](https://github.com/facebook/react/pull/32735), [#33723](https://github.com/facebook/react/pull/33723))\r\n- Add `cacheSignal` (@sebmarkbage [#33557](https://github.com/facebook/react/pull/33557))\r\n\r\n### React DOM\r\n\r\n- Block on Suspensey Fonts during reveal of server-side-rendered content (@sebmarkbage [#33342](https://github.com/facebook/react/pull/33342))\r\n- Use underscore instead of `:` for IDs generated by `useId` (@sebmarkbage, @eps1lon: [#32001](https://github.com/facebook/react/pull/32001), [https://github.com/facebook/react/pull/33342](https://github.com/facebook/react/pull/33342)[#33099](https://github.com/facebook/react/pull/33099), [#33422](https://github.com/facebook/react/pull/33422))\r\n- Stop warning when ARIA 1.3 attributes are used (@Abdul-Omira [#34264](https://github.com/facebook/react/pull/34264))\r\n- Allow `nonce` to be used on hoistable styles (@Andarist [#32461](https://github.com/facebook/react/pull/32461))\r\n- Warn for using a React owned node as a Container if it also has text content (@sebmarkbage [#32774](https://github.com/facebook/react/pull/32774))\r\n- s/HTML/text for for error messages if text hydration mismatches (@rickhanlonii [#32763](https://github.com/facebook/react/pull/32763))\r\n- Fix a bug with `React.use` inside `React.lazy`\\-ed Component (@hi-ogawa [#33941](https://github.com/facebook/react/pull/33941))\r\n- Enable the `progressiveChunkSize` option for server-side-rendering APIs (@sebmarkbage [#33027](https://github.com/facebook/react/pull/33027))\r\n- Fix a bug with deeply nested Suspense inside Suspense fallback when server-side-rendering (@gnoff [#33467](https://github.com/facebook/react/pull/33467))\r\n- Avoid hanging when suspending after aborting while rendering (@gnoff [#34192](https://github.com/facebook/react/pull/34192))\r\n- Add Node Web Streams to server-side-rendering APIs for Node.js (@sebmarkbage [#33475](https://github.com/facebook/react/pull/33475))\r\n\r\n### React Server Components\r\n\r\n- Preload `<img>` and `<link>` using hints before they're rendered (@sebmarkbage [#34604](https://github.com/facebook/react/pull/34604))\r\n- Log error if production elements are rendered during development (@eps1lon [#34189](https://github.com/facebook/react/pull/34189))\r\n- Fix a bug when returning a Temporary reference (e.g. a Client Reference) from Server Functions (@sebmarkbage [#34084](https://github.com/facebook/react/pull/34084), @denk0403 [#33761](https://github.com/facebook/react/pull/33761))\r\n- Pass line/column to `filterStackFrame` (@eps1lon [#33707](https://github.com/facebook/react/pull/33707))\r\n- Support Async Modules in Turbopack Server References (@lubieowoce [#34531](https://github.com/facebook/react/pull/34531))\r\n- Add support for .mjs file extension in Webpack (@jennyscript [#33028](https://github.com/facebook/react/pull/33028))\r\n- Fix a wrong missing key warning (@unstubbable [#34350](https://github.com/facebook/react/pull/34350))\r\n- Make console log resolve in predictable order (@sebmarkbage [#33665](https://github.com/facebook/react/pull/33665))\r\n\r\n### React Reconciler\r\n\r\n- [createContainer](https://github.com/facebook/react/blob/v19.2.0/packages/react-reconciler/src/ReactFiberReconciler.js#L255-L261) and [createHydrationContainer](https://github.com/facebook/react/blob/v19.2.0/packages/react-reconciler/src/ReactFiberReconciler.js#L305-L312) had their parameter order adjusted after `on*` handlers to account for upcoming experimental APIs\r\n\r\n## eslint-plugin-react-hooks@6.1.0\r\n\r\n**Note:** Version 6.0.0 was mistakenly released and immediately deprecated and untagged on npm. This is the first official 6.x major release and includes breaking changes. \r\n\r\n- **Breaking:** Require Node.js 18 or newer. ([@michaelfaith](https://github.com/michaelfaith) in [#32458](https://github.com/facebook/react/pull/32458))\r\n- **Breaking:** Flat config is now the default `recommended` preset. Legacy config moved to `recommended-legacy`. ([@michaelfaith](https://github.com/michaelfaith) in [#32457](https://github.com/facebook/react/pull/32457))\r\n- **New Violations:** Disallow calling `use` within try/catch blocks. ([@poteto](https://github.com/poteto) in [#34040](https://github.com/facebook/react/pull/34040))\r\n- **New Violations:** Disallow calling `useEffectEvent` functions in arbitrary closures. ([@jbrown215](https://github.com/jbrown215) in [#33544](https://github.com/facebook/react/pull/33544))\r\n- Handle `React.useEffect` in addition to `useEffect` in rules-of-hooks. ([@Ayc0](https://github.com/Ayc0) in [#34076](https://github.com/facebook/react/pull/34076))\r\n- Added `react-hooks` settings config option that to accept `additionalEffectHooks` that are used across exhaustive-deps and rules-of-hooks rules. ([@jbrown215](https://github.com/jbrown215)) in [#34497](https://github.com/facebook/react/pull/34497)"
  },
  {
    "title": "microsoft/TypeScript – TypeScript 5.9",
    "date": "2025-10-01T20:37:10.000Z",
    "source": "GitHub",
    "url": "https://github.com/microsoft/TypeScript/releases/tag/v5.9.2",
    "content": "Note: this tag was recreated to point at the correct commit. The npm package contained the correct content.\r\n\r\nFor release notes, check out the [release announcement](https://devblogs.microsoft.com/typescript/announcing-typescript-5-9/)\r\n\r\n* [fixed issues query for Typescript 5.9.0 (Beta)](https://github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93&q=milestone%3A%22TypeScript+5.9.0%22+is%3Aclosed+).\r\n* [fixed issues query for Typescript 5.9.1 (RC)](https://github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93&q=milestone%3A%22TypeScript+5.9.1%22+is%3Aclosed+).\r\n* *No specific changes for TypeScript 5.9.2 (Stable)*\r\n\r\n\r\nDownloads are available on:\r\n* [npm](https://www.npmjs.com/package/typescript)"
  }
]
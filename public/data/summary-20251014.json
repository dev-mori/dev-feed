[
  {
    "title": "vitejs/vite – v6.3.7",
    "date": "2025-10-14T13:43:29.000Z",
    "source": "GitHub",
    "url": "https://github.com/vitejs/vite/releases/tag/v6.3.7",
    "content": "Please refer to [CHANGELOG.md](https://github.com/vitejs/vite/blob/v6.3.7/packages/vite/CHANGELOG.md) for details."
  },
  {
    "title": "vitejs/vite – v7.1.10",
    "date": "2025-10-14T13:16:35.000Z",
    "source": "GitHub",
    "url": "https://github.com/vitejs/vite/releases/tag/v7.1.10",
    "content": "Please refer to [CHANGELOG.md](https://github.com/vitejs/vite/blob/v7.1.10/packages/vite/CHANGELOG.md) for details."
  },
  {
    "title": "週刊生成AI with AWS – 2025/10/6週",
    "date": "2025-10-14T09:56:05.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/weekly-genai-20251006/",
    "content": "<p>みなさん、こんにちは。AWS ソリューションアーキテクトの三厨です。</p> \n<p>来る 10/24 に AWS Japan AI Agent Day 2025 が開催されます。本日ご紹介するAmazon Quick Suite をはじめとして、 AWS でAgentを活用するための知見を学ぶことができます。ぜひ、<a href=\"https://pages.awscloud.com/aws-japan-ai-agent-day-reg.html\">こちらの申し込みページ</a>からご登録をお願いいたします。</p> \n<p>先日 2つの新しいプランを追加した「<a href=\"https://pages.awscloud.com/jp-genai-accelerator-program-reg.html\">AWS ジャパン生成 AI 実用化推進プログラム</a>」も非常に多くの申し込みをいただいています。引き続き募集中ですのでよろしくお願いします。</p> \n<p>それでは、10 月 6 日週の生成 AI with AWS界隈のニュースを見ていきましょう。</p> \n<p><span id=\"more-166787\"></span></p> \n<p><strong>さまざまなニュース</strong></p> \n<ul> \n <li style=\"list-style-type: none\"> \n  <ul> \n   <li>AWS生成AI国内事例ブログ: <a href=\"https://aws.amazon.com/jp/blogs/news/genai-case-study-ist/\">株式会社情報戦略テクノロジー様、AIエージェント秘書「パイオにゃん」で情報探索業務を83%改善</a><br> 株式会社情報戦略テクノロジー様は、IT コンサルティングやシステム開発を行う企業です。社員の情報探索業務の効率化とスキルアップという課題に対して、Amazon Bedrock を活用したAIエージェント秘書「パイオにゃん」を開発しました。その結果、情報探索業務を83%改善し、社員一人ひとりに寄り添いともに成長する仕組みを実現しています。さらに社員の成長の可視化にも成功し、組織全体の生産性向上に貢献しています。</li> \n   <li>AWS生成AI国内事例ブログ: <a href=\"https://aws.amazon.com/jp/blogs/news/daiichi-sankyo-ai-agent-integrated-drug-discovery/\">第一三共株式会社様、AIエージェント統合型創薬基盤の構築を開始</a><br> 第一三共株式会社様は、製薬企業として次世代の創薬研究プロセスの実現に取り組んでいます。AWS と連携し、AIエージェントシステムを統合した創薬研究基盤の構築を開始しました。AI・クラウド・実験自動化技術を融合させることで、創薬研究プロセスの革新を目指しています。この取り組みにより、創薬の効率化と新薬開発の加速が期待されています。</li> \n   <li>ブログ記事「<a href=\"https://aws.amazon.com/jp/blogs/news/reimagine-business-intelligence-amazon-quicksight-evolves-to-amazon-quick-suite/\">ビジネスインテリジェンスの再解釈: Amazon QuickSight から Amazon Quick Suite への進化</a>」を公開<br> Amazon QuickSight が Amazon Quick Suite へと進化しました。この記事では、エージェンティックAIを搭載した新しいワークスペース機能について詳しく解説しています。ビジネスインテリジェンスの概念を再定義し、データ分析の新しい形を体験できる内容となっています。</li> \n   <li>ブログ記事「<a href=\"https://aws.amazon.com/jp/blogs/news/jaldx-solutions-awssupport-bedrock/\">Amazon Bedrockを活用したAWS サポート問い合わせ内容の自動集約ソリューションの実装</a>」を公開<br> AWS Support と Amazon Bedrock を組み合わせた、サポート問い合わせ内容の自動集約ソリューションの実装方法を紹介しています。生成AIを活用することで、サポート対応の効率を向上させる実践的な事例です。</li> \n   <li>ブログ記事「<a href=\"https://aws.amazon.com/jp/blogs/news/supercharge-your-organizations-productivity-with-the-amazon-q-business-browser-extension/\">Amazon Q Business ブラウザ拡張機能による組織の生産性向上</a>」を公開<br> Amazon Q Business のブラウザ拡張機能について詳しく解説しています。ブラウザから直接企業ナレッジにアクセスし、生成AIの支援を受けられる機能により、組織全体の生産性向上が期待できます。実際の使用方法と活用シーンを紹介しています。</li> \n   <li>ブログ記事「<a href=\"https://aws.amazon.com/jp/blogs/news/how-to-manage-ai-bots-with-aws-waf-and-enhance-security/\">AWS WAF で AI ボットを管理し、セキュリティを強化する方法</a>」を公開<br> 生成AIボットの普及に伴い、ウェブサイトへのボットアクセス管理が重要になっています。この記事では、AWS WAF を使用して AI ボットを適切に管理し、セキュリティを強化する方法を解説しています。正規のAIボットと悪意のあるボットを区別する実践的な手法を紹介しています。</li> \n   <li>ブログ記事「<a href=\"https://aws.amazon.com/jp/blogs/news/your-essential-guide-to-cloud-governance-at-aws-reinvent-2025/\">AWS re:Invent 2025 におけるクラウドガバナンスの必須ガイド</a>」を公開<br> AWS re:Invent 2025 で注目すべきクラウドガバナンス関連のセッションとトピックを紹介しています。生成AI時代におけるガバナンスのベストプラクティスについても触れられています。</li> \n   <li>ブログ記事「<a href=\"https://aws.amazon.com/jp/blogs/news/aws-summit-japan-2025-genai-lg/\">[AWS Summit Japan 2025] 生成 AI を用いた自治体向けソリューションデモのご紹介</a>」を公開<br> AWS Summit Japan 2025 で展示された、生成AIを用いた自治体向けソリューションデモを紹介しています。公共セクターにおける生成AI活用の具体例を学べる貴重な機会です。</li> \n   <li>ブログ記事「<a href=\"https://aws.amazon.com/jp/blogs/news/announcing-healthdata-agent-healthcare-lifescience-transformation/\">日本のヘルスケア・ライフサイエンス業界における戦略的ビジョン「Journey for 2030 データがつながる、価値を生む」を発表</a>」を公開<br> 日本のヘルスケア・ライフサイエンス業界における AWS の戦略的ビジョン「Journey for 2030」を発表しました。データ連携による価値創出を目指す、業界の未来像を描いています。</li> \n   <li>ブログ記事「<a href=\"https://aws.amazon.com/jp/blogs/news/journey-for-2030/\">ヘルスケア・ライフサイエンスの意思決定と業務の高度化を実現する HealthData x Agent を発表</a>」を公開<br> ヘルスケアとライフサイエンス分野向けの新しいソリューション「HealthData x Agent」を発表しました。AIエージェントを活用して医療データの分析と意思決定を支援し、業界の変革を加速させるソリューションです。この記事では、HealthData x Agent の機能と活用方法を詳しく解説しています。</li> \n   <li>ブログ記事「<a href=\"https://aws.amazon.com/jp/blogs/news/transforming-sap-technical-documentation-with-genai-accelerating-knowledge-generation-for-sap-notes-with-amazon-bedrock/\">生成AIで起こるSAP技術文書変革：Amazon BedrockでSAP Notesのナレッジ生成を加速</a>」を公開<br> SAP システムの技術ドキュメント作成に生成AIを活用する方法を紹介しています。Amazon Bedrock を使用して SAP Notes のナレッジ生成を自動化・高速化することで、ドキュメント作成の効率を大幅に向上させる事例を解説しています。</li> \n   <li>ブログ記事「<a href=\"https://aws.amazon.com/jp/blogs/news/introducing-claude-sonnet-4-5-in-amazon-bedrock-anthropics-most-intelligent-model-best-for-coding-and-complex-agents/\">Amazon Bedrock での Claude Sonnet 4.5 のご紹介: Anthropic の最もインテリジェントなモデルで、コーディングや複雑なエージェントに最適</a>」を公開<br> Anthropic の最新モデル Claude Sonnet 4.5 が Amazon Bedrock で利用可能になりました。特にコーディングタスクと複雑なエージェント構築において優れた性能を発揮します。この記事では、Claude Sonnet 4.5 の特徴と活用方法、実際のユースケースを詳しく紹介しています。</li> \n  </ul> </li> \n <li style=\"list-style-type: none\"></li> \n</ul> \n<p><strong>サービスアップデート</strong></p> \n<ul> \n <li style=\"list-style-type: none\"> \n  <ul> \n   <li><a href=\"https://aws.amazon.com/jp/about-aws/whats-new/2025/10/amazon-q-developer-understand-service-prices-estimate-workload-costs/\">Amazon Q Developer がサービス価格の理解とワークロードコスト見積もりに対応</a><br> Amazon Q Developer に新機能が追加され、AWS サービスの価格を理解し、ワークロードのコスト見積もりを支援できるようになりました。開発者は自然言語で質問するだけで、使用予定のサービスのコスト情報を取得し、アーキテクチャ設計時のコスト最適化が容易になります。コスト意識の高い開発を支援する重要なアップデートです。</li> \n   <li><a href=\"https://aws.amazon.com/jp/about-aws/whats-new/2025/10/amazon-quick-suite-agentic-ai-powered-workspace/\">Amazon Quick Suite: エージェンティックAI搭載ワークスペースを発表</a><br> Amazon QuickSight が Amazon Quick Suite へと進化し、エージェンティックAIを搭載したワークスペース機能が追加されました。AIエージェントがデータ分析を支援し、ビジネスインサイトの発見を加速します。自然言語でのデータ探索、自動的なインサイト生成、インタラクティブなダッシュボード作成など、データ分析の新しい体験を提供します。</li> \n   <li><a href=\"https://aws.amazon.com/jp/about-aws/whats-new/2025/10/automatic-quota-management-service-quotas/\">AWS Service Quotas で自動クォータ管理機能が一般提供開始</a><br> AWS Service Quotas に自動クォータ管理機能が一般提供開始されました。この機能により、サービスの使用状況を監視し、クォータ上限に近づいた際に自動的に引き上げリクエストを送信できるようになります。生成AIワークロードなど、急速にスケールするアプリケーションの運用において、クォータ制限によるサービス中断を防ぐことができます。</li> \n  </ul> </li> \n</ul> \n<p>今週は以上です。それでは、また来週お会いしましょう！</p> \n<h1>著者について</h1> \n<footer> \n <div class=\"blog-author-box\"> \n  <div class=\"blog-author-image\">\n   <img src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/04/14/wmikuriy.jpeg\" alt=\"Wataru Mikuriya\" width=\"150\">\n  </div> \n  <h4 class=\"lb-h4\"><a href=\"https://x.com/mickn_space\" target=\"_blank\" rel=\"noopener\">三厨 航&nbsp; (Wataru MIKURIYA)</a></h4> \n  <p>AWS Japan のソリューションアーキテクト (SA) として、ヘルスケア・ハイテク製造業のお客様のクラウド活用を技術的な側面・ビジネス的な側面の双方から支援しています。クラウドガバナンスや IaC 分野に興味があり、最近はそれらの分野の生成 AI 応用にも興味があります。最近感動したものは帯広の豚丼です。</p> \n </div> \n</footer>"
  },
  {
    "title": "【開催報告】Amazon SageMaker Roadshow -Japan",
    "date": "2025-10-14T07:58:08.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/amazon-sagemaker-roadshow-japan-report/",
    "content": "<p>シニア GTM アナリティクススペシャリストソリューションアーキテクトの大薗です。</p> \n<p>2025 年 7 月 15 日に「<a href=\"https://aws-experience.com/apj/smb/event/638f8520-2a2e-4ac9-9f15-6f664304bb80\">Amazon SageMaker Roadshow –Japan</a>」を開催しました。本イベントでは、<a href=\"https://aws.amazon.com/jp/sagemaker/\">Amazon SageMaker</a> 開発チームが来日し、次世代の Amazon SageMaker を開発した理由やその機能紹介を行い、AWS Japan チームからデモやプレゼンテーションを通じて Amazon SageMaker の世界観を深堀りしました。さらに NX 情報システム株式会社様、キヤノンＩＴソリューションズ株式会社様、ソニーグループ株式会社様、株式会社 NTT データ様より SageMaker を含めたデータと AI の具体的な活用事例についてお話がありました。本ブログでは当日の各発表内容について紹介します。</p> \n<h3>次世代の Amazon SageMaker とは？</h3> \n<p>次世代の Amazon SageMaker は、2024 年末に開催された re:Invent 2024 で発表された、すべてのデータに対する統合アクセスとともに、分析と AI のための統合エクスペリエンスを提供するサービスです。モデル開発、生成 AI、データ処理、SQL 分析のために使い慣れた AWS ツールを使用して、統合スタジオ環境からの迅速なコラボレーションと構築を実現します。</p> \n<h3>アジェンダ</h3> \n<ol> \n <li>Welcome and Keynote</li> \n <li>Navigating Modern Data Landscapes with Amazon SageMaker</li> \n <li>Amazon SageMaker エンドツーエンドデモ</li> \n <li>Amazon SageMaker によるデータ &amp; AI ガバナンスの民主化</li> \n <li>NX Data Station ～ Nippon Express ｘ キヤノン MJ グループによるデータ分析基盤構築（NX 情報システム株式会社様、キヤノンＩＴソリューションズ株式会社様）</li> \n <li>Amazon SageMaker による生成 AI アプリケーション開発</li> \n <li>ソニーグループにおける生成 AI の社内活用と今後の展望（ソニーグループ株式会社様）</li> \n <li>データから AI をつなぐオールインワンプラットフォーム「データレイクハウス」と Amazon SageMaker（株式会社 NTT データ様）</li> \n</ol> \n<h3></h3> \n<h3>1. Welcome and Keynote</h3> \n<p>イベントキーノートとして、Amazon SageMaker のプロダクトマネジメントの Director である William が登壇しました。William はまず、データ、AI、アナリティクスの融合が進む現代において、AWS のデータ基盤がどのように進化してきたかを語りました。</p> \n<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-166757\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/13/william‐.jpg\" alt=\"\" width=\"2560\" height=\"1920\"></p> \n<p>マネージドデータベースの導入から始まり、サーバーレス化、マルチリージョン展開、そして <a href=\"https://aws.amazon.com/jp/rds/aurora/\">Amazon Aurora</a> による高速トランザクション処理の実現まで、データベース技術の革新的な進化を時系列で解説しました。さらに、Amazon 社内での大規模 AI モデル開発経験が、現在の <a href=\"https://aws.amazon.com/jp/sagemaker/ai/\">Amazon SageMaker AI</a> という形で結実し、一般提供されているという歴史的な流れも紹介しました。そして生成 AI のテクノロジーとして <a href=\"https://aws.amazon.com/jp/bedrock/\">Amazon Bedrock</a> や <a href=\"https://aws.amazon.com/jp/ai/generative-ai/nova/\">Amazon Nova</a> シリーズ、また、<a href=\"https://aws.amazon.com/jp/q/developer/\">Amazon Q Developer</a> や <a href=\"https://aws.amazon.com/jp/q/business/\">Amazon Q Business</a>、<a href=\"https://aws.amazon.com/jp/quicksight/\">Amazon QuickSight</a> など、開発者やビジネスアナリストが AI を活用するための具体的なサービスも紹介されました。</p> \n<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-166758\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/13/william-3.png\" alt=\"\" width=\"3472\" height=\"1946\"></p> \n<p>かつては個別に発展していたビッグデータ、SQL アナリティクス、機械学習、生成 AI の領域が、Amazon SageMaker という単一のプラットフォームで統合されつつある未来像を示し、次のスピーカーである Stephanie による Amazon SageMaker の詳細説明への期待を高めて締めくくられました。</p> \n<h3>2. Navigating Modern Data Landscapes with Amazon SageMaker</h3> \n<p>次のセッションでは、AWS のアナリティクス関連の Go-to-Market チームリーダーを務める Stephanie が登壇し、次世代 Amazon SageMaker の全容を紹介しました。</p> \n<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-166759\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/13/steph-1.jpg\" alt=\"\" width=\"2560\" height=\"1928\"></p> \n<p>冒頭、Stephanie は現在の企業が直面している課題について触れました。第三社機関の調査を引用しながら、多くの企業が生成 AI の実験に取り組んでいるものの、その 70% が本番環境への展開に至っていないという現状を指摘。その根本的な原因の一つともなる、強固なデータ基盤の重要性を力強く訴えかけました。そして、これらの課題を解決するために開発された次世代 Amazon SageMaker の紹介へと話を展開。その中でも「<a href=\"https://aws.amazon.com/jp/sagemaker/unified-studio/\">Amazon SageMaker Unified Studio</a>」という新しい統合環境の紹介に時間を割き、データエンジニア、ビジネスアナリスト、データサイエンティストが一つのプラットフォーム上で協働できる環境の中で、従来別々に存在していたツールやワークフローをシームレスに統合できることのメリットを説明しました。</p> \n<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-166760\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/13/steph-2.png\" alt=\"\" width=\"3474\" height=\"1954\"></p> \n<p>データガバナンスの面では、<a href=\"https://aws.amazon.com/jp/sagemaker/catalog/\">Amazon SageMaker Catalog</a> という新機能を紹介。生成 AI を活用してメタデータを自動生成する機能や、データの品質管理、データリネージ管理の機能が組み込まれており、全社規模でのデータ活用を加速できる点を強調しました。さらに、<a href=\"https://aws.amazon.com/jp/sagemaker/lakehouse/\">Amazon SageMaker のレイクハウスアーキテクチャ</a>についても詳しく解説。オープンな設計思想に基づき、様々なデータソースを統合できる柔軟性と、<a href=\"https://aws.amazon.com/jp/what-is/zero-etl/\">ゼロ ETL</a> による効率的なデータ処理の実現について解説しました。</p> \n<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-166761\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/13/steph-3-compressed.png\" alt=\"\" width=\"3474\" height=\"1952\"></p> \n<p>最後に、<a href=\"https://aws.amazon.com/jp/sagemaker/pricing/\">Amazon SageMaker の料金</a>の考え方について、紹介した様々な機能が従量課金制で提供される点を解説しました。これによりコスト面での懸念を払拭しながら、企業のデータ活用と AI 導入への取り組みを進めやすいモデルとなっていることを強調しました。</p> \n<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-166762\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/13/steph-4.png\" alt=\"\" width=\"3474\" height=\"1954\"></p> \n<p>まとめとして、次世代 Amazon SageMaker が企業のデータ活用と AI 導入を本質的に変革するプラットフォームとして位置づけられていることを強調してセッションを締めくくりました。</p> \n<h3>3. Amazon SageMaker エンドツーエンドデモ</h3> \n<p>続くセッションでは、AWS Japan BigData Architect 関山より、次世代の Amazon SageMaker のユーザー体験をエンドツーエンドで知っていただくために、架空の企業エニーカンパニービバレッジにおけるデータと ML/AI の課題解決のストーリーを Amazon SageMaker Unified Studio 上でデモしました。</p> \n<p>Amazon SageMaker Unified Studio の各機能はネイティブで <a href=\"https://aws.amazon.com/jp/q/\">Amazon Q</a> と統合されており、データディスカバリー、ETL ヴィジュアルパイプラインの自動作成、SQL の自動生成などが可能になっています。下のスクリーンショットは、画面右側の Amazon Q チャットウィンドウで自動生成したクエリをクエリブックから実行するデモです。</p> \n<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-166763\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/13/sekiyama-1.png\" alt=\"\" width=\"2560\" height=\"1440\"></p> \n<p>Amazon SageMaker Unified Studio におけるデータガバナンスの中核をなすのが Amazon SageMaker Catalog です。SageMaker Catalog を使用することで、データを簡単に発見・共有する仕組みを導入できます。また、生成 AI を活用することで新しく作ったテーブルにビジネスメタデータを自動生成することもできます。</p> \n<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-166764\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/13/sekiyama-2.png\" alt=\"\" width=\"2560\" height=\"1440\"></p> \n<p>SageMaker Catalog で共有されたデータを機械学習チームが利用して、今後の製品の売り上げを予測しグラフにプロットしています。このデモでは機械学習に加えて、生成 AI を活用したマーケティングコンテンツ (テキスト・画像) の自動生成も紹介しました。</p> \n<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-166765\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/13/sekiyama-3.png\" alt=\"\" width=\"2560\" height=\"1440\"></p> \n<p>このように、複数人で協働する具体的なユースケースを想定したデモを通じて、Amazon SageMaker Unified Studio を活用したデータと AI に関する一連の作業のイメージを披露しました。データと AI の活用に課題をお持ちの方には、ぜひ、次世代の Amazon SageMaker ならびに Amazon SageMaker Unified Studio をお試しいただき、データとAIをビジネス推進のために活用いただけましたら幸いです。</p> \n<h3>4. Amazon SageMaker によるデータ &amp; AI ガバナンスの民主化</h3> \n<p>デモセッションに続いて、AWS Japan アナリティクススペシャリストソリューションアーキテクトの大薗よりデータ &amp; AI ガバナンスの民主化をテーマにセッションを行いました。</p> \n<p>セッションでは、まず AI 時代におけるテクノロジーの変化について説明し、生成 AI の進化について触れました。単純なチャットボットから、複雑なタスクを自動化する生成エージェント、さらには完全自立型のエージェンティックAIへと発展していく流れを解説し、今後ますます質が高く統制されたデータを最大限活用いる環境準備が不可欠である時代がきていることを提起しました。</p> \n<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-166766\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/13/ojunpei-1-compressed.png\" alt=\"\" width=\"3476\" height=\"1952\"></p> \n<p>データガバナンスに対する新しい考え方として、従来の「統制重視」から「データ活用促進のためのガードレール」という位置づけへの転換について説明し、企業全体でのデータガバナンスの民主化の必要性を述べました。組織面での取り組みでは、「データスチュワードシップ」の概念を中心に、クロスファンクショナルなチーム編成の必要性や、データドメイン駆動のガバナンスについて説明。これらを実現するための具体的な組織構造についても例を交えて解説しました。</p> \n<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-166767\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/13/ojunpei-2-compressed.png\" alt=\"\" width=\"3474\" height=\"1950\"></p> \n<p>技術面では、SageMaker Catalog の機能の詳解を行いました。このツールが「発見」「ガバナンス」「コラボレーション」という 3 つの主要機能を持つことを説明し、特に「発見」の機能については、メタデータの自動生成やデータ品質の可視化などの特徴と仕組みを紹介しました。最後に、プロジェクトベースの権限管理モデルや、様々なツールとの統合について説明を行い、データガバナンスのプラットフォームとしての SageMaker Catalog の位置づけを示してセッションを終えました。</p> \n<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-166768\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/13/ojunpei-3-compressed.png\" alt=\"\" width=\"3472\" height=\"1950\"></p> \n<h3>5. NX Data Station ～ Nippon Express ｘ キヤノンMJグループによるデータ分析基盤構築（NX情報システム株式会社様、キヤノンＩＴソリューションズ株式会社様）</h3> \n<p>本セッションでは日本通運株式会社 (NX) が AWS 上で利用しているデータ分析基盤である「NX Data Station」について、NX 情報システム株式会社 (NIS) からそのビジネスの狙いを、そして技術観点で伴走支援を提供しているキヤノンＩＴソリューションズ株式会社からは、どのような構成でどう進化させているかの説明がありました。<br> 最初に登壇した NIS 第 5 アプリケーションマネジメント部 次長 髙 為彦氏からは、日本通運が置かれているビジネス的な課題とNX Data Station を活用することでどのように課題解決に取り組んでいるかについて説明がありました。</p> \n<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-166769\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/13/nx-1.png\" alt=\"\" width=\"1314\" height=\"726\"></p> \n<p>最初に、NX Data Station のアーティテクチャーの概要が説明されました。NX グループでは 2013 年からオンプレミスやプライベートクラウドから AWS へ移行を開始しており、それらとの親和性を鑑み、<a href=\"https://aws.amazon.com/jp/redshift/\">Amazon Redshift</a> や Amazon QuickSight などのサービスを利用し、データレイク、データウェアハウスを構築されてきました。<br> 髙氏は、AWS は機械学習や AI などのサービス基盤がアドオンで追加可能で、基本的に従量課金であり、スモールスタートが可能であること、コストパフォーマンスの良さ、およびデータ利活用文化を醸成する上で必要となる PoC やトライ&amp; エラーに適しているという運用面から、AWS を選定したと説明されました。</p> \n<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-166770\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/13/nx-2.png\" alt=\"\" width=\"1287\" height=\"715\"></p> \n<p>課題の例として、物流業界における労働力不足という社会課題について、日本通運がどう対応し、NX Data Station をどう活用しているかの説明がありました。自動倉庫といった機械による効率化もあるものの、まだ人手に頼ることも多くあり、24 時間稼働の大型倉庫などでは、一日の労働者数が延べ数百人規模になることもある業務です。髙氏は、労働力不足への対応で重要なのは適切な人員配置であると説明したうえで、繁忙期、閑散期、キャンペーンなどに適切な配置を実施するため、NX Data Station のデータレイクに蓄積したデータを BI の分析や機械学習により予測し、最適な配置を計算していると説明しました。商品カテゴリー、作業スペース必要の有無などを考慮したメッシュの細かい予測をし、その予測に対してフォークリフトに乗れる、特殊梱包ができる、など従業員の属性などを掛け合わせ、最適な人員配置を計算します。また、求人情報をダッシュボード化して分析し、それらの人員確保の戦略を練ることも合わせて行っています。</p> \n<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-166771\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/13/nx-3.png\" alt=\"\" width=\"1304\" height=\"733\"></p> \n<p>続いて、キヤノンＩＴソリューションズ株式会社 渡邊 哲也 氏より、NX Data Station のアーキテクチャについて、技術的な説明があった後に、それをどのように継続して改善しているかについて説明がありました。構成として、ETL は <a href=\"https://aws.amazon.com/jp/glue/\">AWS Glue</a> 、補足手法として <a href=\"https://aws.amazon.com/jp/appflow/\">Amazon AppFlow</a> と <a href=\"https://aws.amazon.com/jp/dms/\">AWS Database Migration Service</a> (DMS)、データレイクとしての <a href=\"https://aws.amazon.com/jp/s3/\">Amazon S3</a>、DWH として Amazon Redshift を活用する構成です。<br> また、 渡邊氏は、NX Data Station が活用され続けている理由として、キヤノンＩＴソリューションズが 1/サービスを常にアップデートすること、2/データ登録の障壁をなくすこと、そして 3/前向きなユーザーを待たせないこと、といった工夫を続けていることを説明されました。<br> これにより、SIer がなんでもやるのではなく、ユーザーによるデータ活用の 「自走」 が行われる環境を実現しているとし、最後に、利用している AWS サービスが含まれる、Amazon SageMaker への移行・活用を検討している事を説明されました。</p> \n<h3>6. Amazon SageMaker による生成 AI アプリケーション開発</h3> \n<p>AWS Japan の AI/ML スペシャリストソリューションアーキテクトである武田からは、Amazon SageMaker の AI 機能に深く踏み込んだ内容に関するセッションをお届けしました。</p> \n<p>セッションは、現代の AI 活用の課題提起から始まりました。生成 AI の急速な発展により、顧客体験の改革や従業員の生産性向上など、様々な可能性が広がっている一方で、企業が直面している現実的な課題について説明。特に、単に基盤モデルの API を利用するだけでは、企業の複雑な課題解決や競合との差別化は難しいという点を強調しました。</p> \n<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-166772\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/13/tketomo-1.png\" alt=\"\" width=\"3474\" height=\"1944\"></p> \n<p>さらに、現在の生成 AI の技術的背景について、歴史的な流れを交えながら説明が続きました。ニューラルネットワークから始まり、ディープラーニング、そして現在のトランスフォーマーモデルに至るまでの技術の変遷について説明を行ったうえで、なぜ Amazon SageMaker が必要になるのかといった点について解説しました。</p> \n<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-166773\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/13/tketomo-3.png\" alt=\"\" width=\"3470\" height=\"1948\"></p> \n<p>セッションの後半では、実際のデモを用いて SageMaker Unified Studio における AI/ML 関連の機能を深堀りして紹介しました。チャットボット開発の手順からファインチューニングの方法まで、具体的な操作フローを示し、システムプロンプトの設定、ナレッジベースの統合、ガードレールの設定など、実務で必要となる機能が単一の画面で操作できる点、さらに、プロジェクトの共有機能など、チーム開発を意識した機能についても触れ、従来別々に管理されていた機能が一つの環境で扱えるようになった点について説明しました。</p> \n<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-166774\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/13/tketomo-4.png\" alt=\"\" width=\"3588\" height=\"1960\"></p> \n<p>セッションを通じて、生成 AI の活用には技術的な理解と実務的なノウハウの両方が必要であり、Amazon SageMaker がそれらを統合的にサポートするプラットフォームとして機能していることを伝えました。</p> \n<h3>7. ソニーグループにおける生成AIの社内活用と今後の展望（ソニーグループ株式会社様）</h3> \n<p>本セッションでは、ソニーグループ株式会社からソニーグループにおける生成 AI の活用を推進するための取り組みの概要と、技術的な観点から RAG (Retrieval-Augmented Generation) の精度向上のための施策や Amazon SageMaker の活用についてご紹介いただきました。</p> \n<p>ソニーグループでは、様々な事業領域にわたる AI の民主化を積極的に推進しています。ソニーグループの全社員が AI とデータの良き使い手となり、AI のビジネスへの適用を加速させることで、クリエイティビティと生産性向上の両立を狙っています。</p> \n<p>AI の民主化を実現するため、ソニーグループでは主に Enterprise LLM と Playground という 2 つのソリューションを提供しています。Enterprise LLM はビジネスにおける安全な生成 AI 活用を可能にするプラットフォームであり、Playground はより実践的なビジネス適用を支援する環境です。これらのソリューションを通じて、ソニーグループは従業員が生成 AI を日常的なビジネス活動に取り入れやすい環境を整備しています。</p> \n<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-166775\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/13/sony-1.png\" alt=\"\" width=\"1392\" height=\"782\"></p> \n<p>Enterprise LLM のアーキテクチャは 130 以上のモデルへのアクセス、ローコード・ノーコードでエージェントを作成可能なワークスペース、カスタムデータパイプライン、外部検索 API などから成り、ソニーグループでの AI 活用を支えています。ソニーグループでの AI 活用において、ソニーグループ内の専門用語の理解は重要です。RAG の検索精度向上のために埋め込みモデルの Fine-tuning を検証しており、<a href=\"https://docs.aws.amazon.com/ja_jp/sagemaker/latest/dg/nbi.html\">Amazon SageMaker notebook instance</a> を活用することでマネージドな Fine-tuning ジョブの実行が可能で、検証プロセス全体が数時間程度で完了できことが紹介されました。また、推論エンドポイントには <a href=\"https://docs.aws.amazon.com/ja_jp/sagemaker/latest/dg/serverless-endpoints.html\">Amazon SageMaker Serverless Inference</a> を採用し、プロビジョニングされた同時実行を活用することでコールドスタートを最小限に抑えながらコストも削減することに成功しています。</p> \n<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-166776\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/13/sony-2.png\" alt=\"\" width=\"2390\" height=\"1342\"></p> \n<p>また、Amazon SageMaker により、幅広いユースケースに対応可能な多様なモデルの提供や、Amazon SageMaker Unified Studio によるローコード・ノーコードでの生成 AI アプリケーション構築が可能です。将来的には SLM (Small Language Model) の進化により生成 AI のエッジ展開が予想されますが、その際にも Amazon SageMaker でのカスタムモデル構築が重要な役割を果たすことが期待されています。</p> \n<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-166777\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/13/sony-3.png\" alt=\"\" width=\"1394\" height=\"782\"></p> \n<h3>8. データからAIをつなぐオールインワンプラットフォーム「データレイクハウス」とAmazon SageMaker（株式会社 NTTデータ様）</h3> \n<p>最後のセッションとして、株式会社 NTT データより、”データからAIをつなぐオールインワンプラットフォーム「データレイクハウス」と Amazon SageMaker” と題した発表がありました。</p> \n<p>まずはじめに、オールインワンプラットフォームが必要とされるようになった背景について説明がありました。従来型のビルディングブロックによるデータ分析基盤では、利用するサービスの数が増え複雑化し、学習コストや運用負荷、データの分散管理といった課題が顕在化しています。そのため、あらゆるデータを一か所で管理できるデータレイクハウスアーキテクチャを持ち、複数のユースケースに対応した機能がオールインワンで提供されるデータプラットフォームが必要になってきています。これが次世代の Amazon SageMaker です。これまで各サービス個別で提供していた UI や資材管理を一元化する Unified Studio、複数サービス横断でデータの探索をしたり、一元的なガバナンス・セキュリティを提供する Catalog、データを Open Table Format で一元管理するレイクハウスアーキテクチャで構成されています。</p> \n<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-166778\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/13/nttdata-1.png\" alt=\"\" width=\"3480\" height=\"1956\"></p> \n<p>上記を踏まえる形で、次世代の Amazon SageMaker について NTT データからの視点で解説がありました。次世代の Amazon SageMaker は多様なユースケースに対応するデータ・アナリティクス・AI サービスを統合し、オールインワンプラットフォーム化することで、よりデータ・AI を管理・活用しやすくする仕組みです。本プラットフォームは、データレイクハウスアーキテクチャを採用し、Amazon S3 上のデータを管理するだけでなく、Amazon Redshift のマネージドストレージを Apache Iceberg 互換の API で統合することができます。また、<a href=\"https://aws.amazon.com/jp/datazone/\">Amazon DataZone</a> を内包する Amazon SageMaker Catalog にて横断的なデータだけではなく AI モデルを管理し、ガバナンス・セキュリティをかけることができます。そして、最後に、AWS が持つアナリティクス・機械学習・生成 AI の多様なサービスを、Amazon SageMaker Unified Studio という、一元的なエントリーポイントで生産性高くデータと AI、アプリの開発を行うことができます。</p> \n<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-166779\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/13/nttdata-2.png\" alt=\"\" width=\"3482\" height=\"1956\"></p> \n<p>最後に生成 AI 時代のデータ活用組織のあり方について説明されました。AI エージェントシステムの開発には、データ・AI・生成AI・アプリの要素が必要であり、これまで説明してきたオールインワンプラットフォームはすべての要素が含まれており、最適です。ただ、ツールがオールインワンプラットフォームである以上、組織側もオールインワンになる必要があります。すなわち、データエンジニア・データサイエンティスト・生成 AI エンジニア、アプリエンジニアがいかにサイロ化を防ぎ協力し合えるかが重要です。NTT データも例外ではなく、組織の壁を超える取り組みを行っているものの、その難しさに直面しています。そのためには、より広い視点から AI システムを俯瞰するアーキテクトのような職種も必要になってくるのではないでしょうか。NTT データでは、オールインワンプラットフォームの考え方や AI システムの全体像を理解している、このスーパーマンを育成し、お客様をご支援できるように尽力していると述べ、発表を締めくくりました。</p> \n<h3>まとめ</h3> \n<p>「Amazon SageMaker Roadshow –Japan」と題した本セミナーでは、近年注目されているデータと AI の統合というテーマに関連する、多様な観点を含むセッションが盛り沢山となりました。本セミナーにて紹介された AWS サービスにご興味ある場合は無料で個別相談会を開催しております。皆様からのお申込みをお待ちしております。<a href=\"https://aws.amazon.com/jp/contact-us/\">お申込みリンク</a></p> \n<p>本ブログは、ソリューションアーキテクトの大薗が作成しました。</p>"
  },
  {
    "title": "Nani翻訳の技術的な話",
    "date": "2025-10-14T05:31:58.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/catnose99/articles/nani-translate",
    "content": "先日 Nani というAI翻訳アプリをリリースしました。macOS / Windowsアプリを使うとショートカットで解説つきの翻訳を簡単に呼び出すことができます。\nhttps://x.com/catnose99/status/1973218927158424056\nこの記事ではNaniの技術的な話をまとめておきます。「レスポンスが速い」という声も多くいただいているので、そのあたりの工夫についても触れたいと思います。\n\n ざっくりとした構成\n主な使用技術やサービスは以下のようになっています。\n\n\nTurso: SQLiteでユーザーの設定などを保存\n\nUpstash (Redis): キャ..."
  },
  {
    "title": "コーエーテクモゲームス：AWSと歩むゲームサーバー開発研修の設計と実装",
    "date": "2025-10-14T05:04:54.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/koei-tecmo-aws-game-development-training/",
    "content": "<p>ゲーム業界は今、かつてない変革期を迎えています。モバイルゲームの普及、クロスプラットフォーム化、そしてメタバースの概念拡大など、従来のゲーム開発に求められる技術スタックでは対応しきれない課題や知識需要が次々と生まれています。特に、大規模なマルチプレイヤーオンラインゲームの開発においては、スケーラブルなサーバーサイド技術への需要が急速に高まっています。</p> \n<p>しかし、こうした技術需要に対して、ゲーム開発に特化したサーバーサイド技術を持つプログラマーの育成には課題が山積しているのが現状です。多くのゲームプログラマーはクライアントサイドの開発に特化しており、サーバーサイド技術への理解が十分とは言えません。従来の Web アプリケーション開発とは異なる、リアルタイム性やスケーラビリティ、グローバル展開といったゲーム特有の要件、さらには可用性・レジリエンシーを確保した堅牢なシステム設計に対応できるプログラマーの育成が、業界の課題となっています。</p> \n<p>ゲーム開発におけるクライアントサイド技術に加えて、サーバーサイド技術も身につけることで、ゲームプログラマーとしてのキャリアの可能性は大きく広がります。オンラインゲームの企画段階からアーキテクチャ設計に関わることができ、技術的制約を考慮した企画提案や、運用を見据えた実装が可能になります。</p> \n<p>このような背景から、<a href=\"https://www.gamecity.ne.jp/\" target=\"_blank\" rel=\"noopener\">株式会社コーエーテクモゲームス (以下、コーエーテクモゲームス) </a>と、Amazon Web Services Japan は共同で、2025 年度新卒ゲームプログラマー向けに、次世代のゲームプログラマーを育成する「ゲームサーバー開発研修プログラム」を実施しました。その取り組みをご紹介します。</p> \n<p><span id=\"more-164962\"></span></p> \n<h3>ゲームサーバー開発研修プログラムの設計</h3> \n<p>オンラインゲーム開発・運営では、ゲーム開発スキルに加えて、以下のネットワーク関連スキルの習得が不可欠です：</p> \n<ul> \n <li>サーバーサイド基盤技術：Linux、TCP/IP、HTTP/HTTPS プロトコル</li> \n <li>データベース設計：RDB、NoSQL、分散データベース</li> \n <li>リアルタイム通信：UDP、TCP ソケットを活用したゲーム通信プロトコル</li> \n <li>分散システム設計：負荷分散、可用性・レジリエンシー対応</li> \n <li>クラウドアーキテクチャ：AWS サービス群の適切な活用と組み合わせ</li> \n</ul> \n<p>新卒ゲームプログラマーがこれらのスキルを効率よく身につけられるよう、コーエーテクモゲームスと協力して、ゲームサーバー開発の研修プログラムを作り上げました。</p> \n<p>また、この研修では、<strong>「オンラインゲームがどのような仕組みで動いているのかを理解し、それを他の人とわかりやすく話し合えるようになること」</strong>を目標に掲げています。プログラミングスキルやネットワーク関連スキルを習得することはもちろん大切ですが、それだけではありません。習得した知識を使って、オンラインゲームの仕組み全体を理解し、チームメンバーや企画部門、運営チームなど、さまざまな立場のスタッフと技術的な意見交換ができるようになることに期待しています。その結果、企画段階から「この機能のトレードオフは性能面でどうか」といった技術的な観点での提案ができたり、「将来の運用負荷を考慮したシステム設計」ができる。そんな幅広い視点を持つゲームプログラマーを育成することでオンラインゲーム開発力を高めたいと考えています。</p> \n<p>この目標を達成するための、新卒ゲームプログラマー向けの研修は以下の方針で行いました。</p> \n<ul> \n <li>1. <strong>段階的スキル構築</strong>：基礎から応用まで無理のない学習曲線を設定</li> \n <li>2. <strong>ゲーム開発に即した学習</strong>：汎用的なWebアプリではなく、ゲーム開発の文脈で技術を習得</li> \n <li>3. <strong>実践重視</strong>：座学・ハンズオン・グループワーク・確認テストを効果的に組み合わせ</li> \n <li>4. <strong>チーム開発体験</strong>：個人学習に加え、グループ内のディスカッションや他グループのプレゼンテーションを通じた学びを得る</li> \n</ul> \n<h3>ゲームサーバー開発研修プログラムの実装</h3> \n<p>研修プログラムは5日間の集中プログラムとして行われ、具体的には以下の技術要素を実践的に学習しました。本研修ではオンラインゲームの主要機能 (ギルド作成・ギルド参加・ギルド内でのプレイヤー間メッセージ送信)を題材に、データベース設計から Linux サーバーの操作、 Web API とリアルタイムサーバーのソフトウェアを一通り開発することができ、オンラインゲームにおけるサーバーサイド開発を体験することができるカリキュラムとして実装しています。</p> \n<h4>1日目: データベース</h4> \n<ul> \n <li>リレーショナルデータベースを活用したゲームデータ設計の基本概念</li> \n <li>ゲームデータに対する SQL 操作</li> \n <li>テーブル設計グループワーク</li> \n</ul> \n<h4>2日目: Linuxサーバー・TCP/IP</h4> \n<ul> \n <li>Amazon EC2 インスタンスでの Linux OS 基本操作</li> \n <li>パフォーマンス監視、プロセス管理、ログ分析</li> \n <li>TCP/IP プロトコルスタック、パケット解析</li> \n</ul> \n<h4>3日目: ネットワークプログラミング①</h4> \n<ul> \n <li>HTTP プロトコルの理解</li> \n <li>PHP を用いた Web API の実装</li> \n <li>Web API の設計グループワーク</li> \n</ul> \n<h4>4日目: ネットワークプログラミング②</h4> \n<ul> \n <li>ゲーム開発におけるネットワーク通信手段の理解</li> \n <li>Node.js を用いたリアルタイムサーバーの実装</li> \n <li>リアルタイムサーバーにおけるスケーラビリティの考慮</li> \n</ul> \n<h4>5日目: クラウドとアーキテクチャ設計</h4> \n<ul> \n <li>クラウドコンピューティングの基礎</li> \n <li>要件定義からアーキテクチャ設計に至るプロセス</li> \n <li>ゲームサーバーのアーキテクチャ設計グループワーク</li> \n</ul> \n<p style=\"text-align: center\"><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/09/18/koei-tecmo-aws-game-development-training-image-database-session.jpg\"><img loading=\"lazy\" class=\"alignnone size-large wp-image-165282\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/09/18/koei-tecmo-aws-game-development-training-image-database-session-1024x768.jpg\" alt=\"\" width=\"1024\" height=\"768\"></a><br> データベース研修の様子</p> \n<h4>グループワークの実施</h4> \n<p>研修の一部では、3〜4名のチームに分かれて、オンラインゲームを題材に以下の3つの設計課題に取り組みました：</p> \n<ul> \n <li>データベース設計：プレイヤーデータ、ギルド、メッセージ情報の設計</li> \n <li>Web API 設計：ゲームクライアント・サーバー間通信、ギルド参加、メッセージ送受信の実装</li> \n <li>クラウドアーキテクチャ設計：AWS サービスを活用したシステム設計</li> \n</ul> \n<p style=\"text-align: center\"><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/09/18/koei-tecmo-aws-game-development-training-group-work-1.jpg\"><img loading=\"lazy\" class=\"alignnone size-large wp-image-165290 aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/09/18/koei-tecmo-aws-game-development-training-group-work-1-1024x768.jpg\" alt=\"\" width=\"1024\" height=\"768\"></a><br> グループワークで作成した API 設計の一例</p> \n<p style=\"text-align: center\"><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/09/18/koei-tecmo-aws-game-development-training-group-work-2.jpg\"><img loading=\"lazy\" class=\"alignnone size-large wp-image-165291 aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/09/18/koei-tecmo-aws-game-development-training-group-work-2-1024x809.jpg\" alt=\"\" width=\"1024\" height=\"809\"></a><br> グループワークの成果物のプレゼンテーションが行われている様子</p> \n<p>グループワークの実施により、個人学習では得られない以下の効果が確認されました：</p> \n<p><strong>技術的議論を通じた理解の深化</strong>：チームメンバー間での技術的議論により、個人学習では気づかない設計上の考慮点や最適化手法を発見する場面が見られました。特に、データベース設計においては「なぜこの設計にするのか」という根拠を説明し合い、他チームからのフィードバックを得ることで、理解が大幅に深まりました。</p> \n<p><strong>多角的な視点の獲得</strong>： 同一の技術課題に対して複数のアプローチを検討する機会が生まれました。これにより、単一の解決策に固執せず、トレードオフを考慮した柔軟な思考力が身につきました。</p> \n<h3>研修の成果と評価</h3> \n<h4>参加者フィードバック</h4> \n<p>研修終了後のアンケートでは、「オンラインゲームのアーキテクチャを大まかに理解できたこと」「サーバーサイド技術への苦手意識の改善」など参加者から多くの前向きな評価をいただきました。実施後の参加者向けのアンケートでも想像以上の高い満足度が確認できており、新卒ゲームプログラマーの成長に合わせた学習カリキュラムの提供を今後もコーエーテクモゲームスと共同で計画しています。</p> \n<p>以下に、フリーコメントの一部を抜粋して紹介します：</p> \n<blockquote>\n <p>サーバーサイドの分野について漠然としていた理解が、より具体的でクリアなものになりました。特にデータベース設計やアーキテクチャ設計については、パズルのような面白さがあり、アイデアや深い思考が求められる点に強く関心を持つことができました。</p>\n</blockquote> \n<blockquote>\n <p>以前はプログラミングでネットワーク関連に触れる機会がなく、今回の研修でサーバーの構築や運用の概要を知ることができ、大変勉強になりました。「ネットワークが難しそう」という印象から、「ネットワークをもっと知りたい」という意欲的な姿勢に変化することができました。</p>\n</blockquote> \n<blockquote>\n <p>オンラインゲームに必要な技術や考え方、さらにインターネットを介することで重要性が増すセキュリティについて、実感を伴う形で理解を深めることができました。</p>\n</blockquote> \n<h4>技術理解度の測定</h4> \n<p>技術理解度の測定には、<a href=\"https://aws.amazon.com/jp/training/digital/trivia/\" target=\"_blank\" rel=\"noopener\">AWS Skill Builder Trivia</a>を活用し、ゲーム感覚で学習効果を測定できる仕組みを導入しました。AWS Skill Builder Triviaは、リアルタイムでマルチプレイヤー競争が可能なクイズプラットフォームです。本研修では、5日間の学習内容の復習を目的として、研修で扱った技術要素に関するカスタムクイズを作成し活用しました。</p> \n<p>特に効果的だった点：</p> \n<ul> \n <li>即座のフィードバック：クイズ結果により、理解不足の領域を即座に特定できる</li> \n <li>競争要素：リアルタイムリーダーボードによる学習意欲の向上</li> \n <li>インタラクティブな体験：QRコードでの簡単参加により、全員がスマートフォンから気軽に参加できる</li> \n</ul> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/09/29/koei-tecmo-aws-game-development-training-trivia-2-1.jpg\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/09/29/koei-tecmo-aws-game-development-training-trivia-2-1-1024x801.jpg\" alt=\"\" width=\"1024\" height=\"801\" class=\"aligncenter size-large wp-image-166011\"></a><br> <a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/09/29/koei-tecmo-aws-game-development-training-trivia-2-2.jpg\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/09/29/koei-tecmo-aws-game-development-training-trivia-2-2.jpg\" alt=\"\" width=\"2180\" height=\"1640\" class=\"aligncenter size-full wp-image-166010\"></a></p> \n<p style=\"text-align: center\">AWS Skill Builder Triviaを活用した復習セッションの様子</p> \n<h3>今後の展望</h3> \n<p>今後の展望について、執行役員 エンタテインメント事業部 シブサワ・コウブランド長 澤田 圭輔 氏と、エンタテインメント事業部シブサワ・コウブランド シニアリーダー 冨士田 智仁 氏に、今後の展望について話を伺いました。</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/09/24/koei-tecmo-aws-game-development-training-sawada-1.jpeg\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/09/24/koei-tecmo-aws-game-development-training-sawada-1.jpeg\" alt=\"\" width=\"131\" height=\"179\" class=\"alignright size-full wp-image-165640\"></a></p> \n<p>「5 日間の集中研修で基礎技術を習得した後、チームでミニゲームを作成し、ネットワーク機能を実装することにしました。クライアント・サーバー間の連携や、実際のコーディング経験の重要性を、実践的なゲーム開発を通じて体験してもらうことで、より実用的なスキルが身につくと考えています。新卒社員にとって、サーバーサイド技術との連携を実感できる貴重な機会になると期待しています。そして、今回の研修で得た技術・経験を活かして開発現場で活躍いただけることに期待しています！」</p> \n<p style=\"text-align: center\">澤田 圭輔 氏</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/09/24/koei-tecmo-aws-game-development-training-fujita.jpeg\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/09/24/koei-tecmo-aws-game-development-training-fujita.jpeg\" alt=\"\" width=\"135\" height=\"202\" class=\"alignright size-full wp-image-165643\"></a></p> \n<p>「研修の成功を受け、より高度な技術領域への展開を計画しています。<a href=\"https://aws.amazon.com/jp/training/classroom/\" target=\"_blank\" rel=\"noopener\">AWS のクラスルームトレーニング</a>を活用し、専門コースの受講を検討中です。また、研修参加者のスキルの可視化と継続的な学習モチベーションの維持のため、<a href=\"https://aws.amazon.com/jp/certification/\" target=\"_blank\" rel=\"noopener\">AWS 認定資格</a>の取得を推奨しています。既に一部の社員が積極的に資格取得に取り組んでおり、社内の AWS 技術レベルの向上に大きく貢献しています。」</p> \n<p style=\"text-align: center\">冨士田 智仁 氏</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/09/26/aws-cloud-training-learning-pass.jpg\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/09/26/aws-cloud-training-learning-pass.jpg\" alt=\"\" width=\"960\" height=\"540\" class=\"aligncenter size-full wp-image-165816\"></a></p> \n<p style=\"text-align: center\">初級クラウド人材育成おすすめラーニングパス</p> \n<h3>おわりに</h3> \n<p>コーエーテクモゲームスと Amazon Web Services Japan の共同研修である「ゲームサーバー開発研修プログラム」は、ゲーム業界特有の技術要件に対応できる人材育成において、貴重な一歩を踏み出すことができました。</p> \n<p>リアルタイム性、スケーラビリティ、グローバル対応、継続的サービス運用といったゲーム特有の要件を満たすために、クラウドの理解と実践的活用スキルを磨き続けることがゲーム開発者のキャリアの幅を大きく広げると期待しています。</p> \n<p>また、今回の取り組みが、ゲーム業界全体での技術人材育成のモデルケースとなり、より多くの企業で同様のプログラムが展開されることを期待しています。AWS は今後も、ゲーム業界のイノベーションを支える人材育成に積極的に貢献していきます。</p> \n<p>この記事は、アマゾン ウェブ サービス ジャパン合同会社 シニアソリューションアーキテクト 大西 啓太郎が執筆しました。</p>"
  },
  {
    "title": "AWS IoT Greengrass nucleus lite – リソース制約のあるデバイスでエッジコンピューティングに革命を起こす",
    "date": "2025-10-14T04:34:58.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/aws-iot-greengrass-nucleus-lite-revolutionizing-edge-computing-on-resource-constrained-devices/",
    "content": "<section class=\"blog-post-content lb-rtxt\">\n この記事は&nbsp;Camilla Panni, Greg Breen によって書かれた \n <a href=\"https://aws.amazon.com/jp/blogs/iot/aws-iot-greengrass-nucleus-lite-revolutionizing-edge-computing-on-resource-constrained-devices/\">AWS IoT Greengrass nucleus lite – Revolutionizing edge computing on resource-constrained devices</a> の日本語訳です。この記事は ソリューションアーキテクトの川崎が翻訳しました。\n</section> \n<section></section> \n<section></section> \n<section class=\"blog-post-content lb-rtxt\">\n <a href=\"https://docs.aws.amazon.com/greengrass/v2/developerguide/what-is-iot-greengrass.html\">AWS IoT Greengrass</a> は、オープンソースのエッジランタイムです。このクラウドサービスは、マルチプロセスアプリケーションを大規模に構築 / デプロイ / 管理することができ、IoT フリート全体の運用を支援します。\n <br> AWS IoT Greengrass は2020 年 12 月に V2 をリリースし、 \n <a href=\"https://docs.aws.amazon.com/greengrass/v2/developerguide/greengrass-nucleus-component.html\">nucleus</a>として知られる Java エッジランタイムを導入しました。 2024 年 12 月の \n <a href=\"https://docs.aws.amazon.com/greengrass/v2/developerguide/greengrass-release-2024-12-16.html\">release 2.14.0</a>&nbsp;では、 C 言語で書かれた追加のエッジランタイムオプションである nucleus lite を追加しました。 AWS IoT Greengrass nucleus lite は、リソース制約のあるデバイスを対象とした軽量な \n <a href=\"https://github.com/aws-greengrass/aws-greengrass-lite\">オープンソース</a> のエッジランタイムです。スマートホームハブ、スマートエネルギーメーター、スマートビークル、エッジ AI、ロボティクスなどの大量生産アプリケーション向けに、低コストのシングルボードコンピュータで AWS IoT Greengrass の機能を拡張できます。このブログでは、2つのエッジランタイムオプションの利点を説明し、ユースケースに最適なオプションを選択するための指針を提供します。\n <p></p> \n <h2>nucleus と nucleus lite の主な違い</h2> \n <p>AWS IoT Greengrass nucleus lite は、AWS IoT Greengrass の <a href=\"https://docs.aws.amazon.com/greengrass/v2/APIReference/API_Operations.html\">V2 クラウドサービス API</a> と&nbsp;<a href=\"https://docs.aws.amazon.com/greengrass/v2/developerguide/interprocess-communication.html\">プロセス間通信 (IPC)</a>&nbsp;インターフェースと完全に互換性があります。これは、1 つまたは両方の実行時を対象としたコンポーネントを構築してデプロイできること、また、クラウドサービスを使用してデバイスフリートを管理し続けることができることを意味します。ただし、nucleus lite には、いくつかの重要な違いがあり、特定のユースケースに適しています。</p> \n <h3>メモリ使用量</h3> \n <p>AWS IoT Greengrass nucleus は、<a href=\"https://docs.aws.amazon.com/greengrass/v2/developerguide/greengrass-nucleus-component.html#greengrass-v2-requirements\">ディスク スペース 256 MB 以上、RAM 96 MB 以上</a>が必要です。<br> ただし、オペレーティング システムやJava 仮想マシン (JVM)、アプリケーションが動作するため、 RAM は最低 512 MB を推奨しています。昨今では、1GB以上のRAMを搭載したデバイスは一般的になってきています。しかし、限られたリソースで動作を求められるデバイスも数多く存在しています。物理的リソース条件が厳しいデバイスでも利用できるよう nucleus lite が誕生しました。<br> nucleus lite は非常に小さなフットプリントで動作します。<a href=\"https://docs.aws.amazon.com/greengrass/v2/developerguide/greengrass-nucleus-lite-component.html#greengrass-nucleus-lite-component-requirements\">RAM 5MB 、ストレージ (ディスク/フラッシュ)&nbsp; 5MB </a>のみ必要です。また、JVM を必要とせず、C 標準ライブラリのみで動作可能です。</p> \n <p><img loading=\"lazy\" class=\"wp-image-16654 aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/f6e1126cedebf23e1463aee73f9df08783640400/2025/04/15/Picture-1-6.png\" alt=\"Memory footprint of nucleus versus nucleus lite\" width=\"565\" height=\"353\"></p> \n <p style=\"text-align: center\">図 1: nucleus と nucleus lite のメモリフットプリントの比較</p> \n <p>リソース制約のあるデバイス上でも AWS IoT Greengrass を利用する新しい選択肢が生ました。</p> \n <h3>静的メモリ割り当て</h3> \n <p>AWS IoT Greengrass nucleus lite&nbsp; ランタイムのメモリフットプリントは、初期設定とビルドプロセス中に決定されます。ランタイムが開始すると、 nucleus lite は一定量のメモリを割り当て、その後はその量が一定のままです。<br> つまり、 nucleus lite はリソース要件が予測可能で再現性があり、メモリリークのリスクが最小限に抑えられ、ガベージコレクションを行う言語に関連する非決定論的な待ち時間がなくなります。<br> メモリ使用量が変動するのは、デプロイした AWS IoT Greengrass コンポーネントや AWS IoT Greengrass 外で実行するプログラムによる動的メモリ割り当てのみです。</p> \n <h3>ディレクトリ構造</h3> \n <p>Nucleus lite は、Nucleus lite ランタイム、Greengrass コンポーネント、設定、ログをディスク上の異なる領域に分離します。組み込み Linux システムでは、これらの異なる要素は通常、異なるパーティションまたは異なるボリュームに保存できます。<br> 例えば:</p> \n <ul> \n  <li>nucleus lite ランタイムは、OS イメージの更新を可能にするため、A/B パーティション分割の一部として、読み取り専用パーティションに格納される可能性があります。</li> \n  <li>AWS IoT Greengrass のコンポーネントと設定は、アプリケーションが AWS IoT Greengrass のデプロイメントによって管理できるように、読み書き可能なパーティションまたはオーバーレイに格納される可能性があります。</li> \n  <li>ログファイルは、ルートボリュームの限られたフラッシュメモリの書き込みサイクルを消費しないように、一時パーティションまたは別の物理ボリュームに格納される可能性があります。</li> \n </ul> \n <p>この分離により、スケールでデバイス製造のための golden イメージを構築するのに役立ちます。詳細については、 <a href=\"https://docs.aws.amazon.com/prescriptive-guidance/latest/iot-greengrass-golden-images/introduction.html\">Manufacturing devices at scale with AWS IoT Greengrass golden images</a> をご覧ください。</p> \n <h3>systemd との統合</h3> \n <p><a href=\"https://systemd.io/\">systemd</a>&nbsp;は Linux システムで一般的に利用可能なシステムとサービス管理フレームワークで、AWS IoT Greengrass nucleus lite には必須です。<br> nucles lite をデバイスにインストールすると、 <a href=\"https://github.com/aws-greengrass/aws-greengrass-lite/blob/main/docs/design/overview.md\">systemd サービスまたはデーモンの集合体</a>&nbsp;としてインストールされます。nucles lite は、デバイスに展開する AWS IoT Greengrass コンポーネントごとに個別の systemd サービスとしてインストールします。nucles lite は、デバイスの多数のフリートにまたがってスケールするクラウド管理の systemd として考えることができます。<br> nucleus lite とコンポーネントを systemd サービスとしてインストールしているため、systemd がシステムログを処理し、集中管理します。つまり、一般的な Linux システムツールを使用して、デバイスソフトウェアを監視、保守、デバッグできます。</p> \n <h2>nucleus と nucleus lite の選択</h2> \n <p style=\"text-align: left\">nucleus ランタイムと nucleus lite ランタイムの選択は、使用ケース、デバイスの制約、必要な機能、および OS によって異なります。次の表は、選択の目安を要約したものです。</p> \n <table class=\"aligncenter\" style=\"height: 435px\" border=\"1\" width=\"610\"> \n  <tbody> \n   <tr> \n    <td><strong>nucleus 利用ケース</strong></td> \n    <td><strong>nucleus lite 利用ケース</strong></td> \n   </tr> \n   <tr> \n    <td style=\"width: 300px\"> \n     <ul> \n      <li>オペレーティングシステムに Windows を使用したい、または systemd が含まれていない Linux ディストリビューションを使用したい場合</li> \n      <li>アプリケーションコンポーネントが Docker コンテナである場合</li> \n      <li>アプリケーションコンポーネントが Lambda 関数である場合</li> \n      <li>スクリプト言語または解釈型プログラミング言語を使ってアプリケーションコンポーネントを開発する場合</li> \n      <li><a href=\"https://docs.aws.amazon.com/greengrass/v2/developerguide/operating-system-feature-support-matrix.html\">nucleus lite でまだサポートされていない機能</a>を使用したい場合</li> \n      <li><a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/gw-self-host-gg2.html\">AWS IoT SiteWise ゲートウェイ</a>を作成する場合</li> \n     </ul> </td> \n    <td style=\"width: 300px\"> \n     <ul> \n      <li>デバイスのメモリが制約されており、RAM が 512 MB 以下の場合</li> \n      <li>デバイスの CPU のクロック周波数が 1 GHz 未満の場合</li> \n      <li>組み込み Linux ディストリビューションを作成し、OS イメージの更新や A/B パーティションなどの機能をサポートするため、パーティションスキームを正確に制御する必要がある場合</li> \n      <li>マシン語にコンパイルされるプログラミング言語を使ってアプリケーションコンポーネントを開発する場合</li> \n      <li>ava が適さないコンプライアンス要件がある場合</li> \n      <li>静的メモリ割り当てを好む場合</li> \n     </ul> </td> \n   </tr> \n  </tbody> \n </table> \n <p style=\"text-align: center\">表 1: nucleus と nucleus lite を選択する際の指針</p> \n <p>表 1 の指示は規範ではなく、一般的なガイダンスです。たとえば、ユースケースのニーズに基づいて、ギガバイトの RAM を搭載したデバイスで nucleus lite を使用することができます。また、デバイスのリソースが十分にある場合は、スクリプト言語やインタプリタ型言語で書かれたコンポーネントを nucleus lite にデプロイすることもできます。</p> \n <h2>シナリオとユースケース</h2> \n <h3>ユースケース</h3> \n <p>メモリとプロセシング能力が制限された低コストデバイス、そして慎重に選別された組み込み Linux ディストリビューションに適しているのが、リソース要件のハードルが低い nucleus lite です。こうしたデバイスには、スマートホーム、産業、自動車、スマートメーターなど、さまざまな分野があります。</p> \n <h3>組込みシステム</h3> \n <p>nucleus lite は、ローンチ時から <a href=\"https://github.com/aws4embeddedlinux/meta-aws\">meta-aws project</a> によって提供される組み込み Linux のサポートを含むことで、組み込みシステム開発者にとって大きな前進を示しています。このプロジェクトには、<a href=\"https://github.com/aws4embeddedlinux/meta-aws/tree/master/recipes-iot/aws-iot-greengrass\">サンプルレシピ</a> が含まれており、AWS IoT Greengrass を OpenEmbedded または Yocto プロジェクトにビルドインすることができます。このプロジェクトの姉妹プロジェクト <a href=\"https://github.com/aws4embeddedlinux/meta-aws-demos\">meta-aws-demos</a> には、<a href=\"https://github.com/aws4embeddedlinux/meta-aws-demos/tree/master/meta-aws-demos/recipes-core/images/aws-iot-greengrass-lite-demo-image#ab-update-example-made-with-meta-rauc\">RAUC を使った A/B アップデートのデモ</a>など、AWS IoT Greengrass の数多くのデモが含まれています。</p> \n <h3>コンテナ化された軽量&nbsp;AWS IoT Greengrass nucleus lite&nbsp;によるマルチテナンシーのサポート</h3> \n <p>nucleus lite はフットプリントが小さいため、マルチテナント IoT デプロイに対して効果的なコンテナ化を実現できます。独自の AWS IoT Greengrass ランタイムと一体化した複数の分離アプリケーションを実行できます。</p> \n <p><img loading=\"lazy\" class=\"wp-image-16660 aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/f6e1126cedebf23e1463aee73f9df08783640400/2025/04/15/Picture-2.png\" alt=\"Multi-tenant containerization\" width=\"648\" height=\"182\"></p> \n <p style=\"text-align: center\">図 2: マルチテナントのコンテナ化</p> \n <p>アーキテクチャの利点は次のとおりです:</p> \n <ul> \n  <li><span style=\"text-decoration: underline\">セキュリティを考慮した分離</span>: それぞれのコンテナ化されたインスタンスは、アプリケーション間の厳格な境界を維持します。</li> \n  <li><span style=\"text-decoration: underline\">リソース最適化</span>: 軽量なフットプリントにより、制約された環境でも複数のコンテナをサポートできます。</li> \n  <li><span style=\"text-decoration: underline\">独立した運用</span>: アプリケーションを個別に管理、デバッグ、更新できます。</li> \n  <li><span style=\"text-decoration: underline\">柔軟なデプロイ</span>: デバイスの機能に基づいて、さまざまなコンテナ化の戦略をサポートします。</li> \n </ul> \n <h2></h2> \n <h2>実装のベストプラクティス</h2> \n <p>nucleus lite を使用するには、コンポーネントを書き直す必要はありません。ただし、メモリ効率を最大化したい場合は、コンポーネントを最適化または書き換えることを選択できます。<br> nucleus lite を使用するにあたり、以下の重要な考慮事項を確認ください。</p> \n <h3>プラグインの互換性</h3> \n <p><a href=\"https://docs.aws.amazon.com/greengrass/v2/developerguide/develop-greengrass-components.html#component-types\">プラグインコンポーネント</a> は、Java 版 の nucleus ランタイムと密接に統合された特殊な Java コンポーネントです。これらのプラグインは nucleus lite ランタイムでは使用できません。</p> \n <h3>コンポーネント言語の考慮事項</h3> \n <p>カスタムコンポーネント用のプログラミング言語を選択する際は、各言語のインタープリターまたはランタイム環境が全体のメモリフットプリントに影響することを考慮する必要があります。Python のような言語を選択すると、nucleus lite のメモリ節約効果がある程度相殺されます。Java を選択する場合は、システムに JVM を導入する必要があります。</p> \n <h3>異なるシナリオ向けの推奨事項</h3> \n <p>nucleus から nucleus lite に移行する際、既存のコンポーネントはそのまま動作します。そのため、nucleus lite への移行が簡単になり、最適化の計画を立てている間も機能が維持されます。</p> \n <p>新規に作成する場合:</p> \n <ul> \n  <li>最大の効率を得るために、重要なコンポーネントを書き換えることを検討してください。</li> \n  <li>C、C ++、Rust などのランタイムオーバーヘッドが最小限の言語を選んでください。</li> \n  <li>開発の労力とメモリ最適化のニーズのバランスをとってください。</li> \n </ul> \n <p>メモリ容量の計画を立てる場合:</p> \n <ul> \n  <li>メモリ計算では、すべてのランタイム依存関係を考慮してください。</li> \n  <li>nucleus lite のサイズだけでなく、システム全体のフットプリントを評価してください。</li> \n  <li>適切な場合はコンポーネントの統合を検討してください。</li> \n </ul> \n <h2></h2> \n <h2>将来の展望と結論</h2> \n <p>今後、AWS IoT Greengrass nucleus lite を活用することで、エッジコンピューティングの実装を再構築できます。<br> リソース要件を大幅に削減することで、次のようなことが可能になります。</p> \n <ul> \n  <li>リソースの制限のあるデバイスに IoT 機能をデプロイ</li> \n  <li>より広範なハードウェアでのエッジコンピューティングソリューションの実装</li> \n  <li>機能を維持しながら運用オーバーヘッドの削減</li> \n  <li>リソース要件に制限されていた新しい使用例の実現</li> \n </ul> \n <p>開発者にとって、nucleus lite はエッジで革新的なことを行う新たな機会を提供します。リソース制約のあるデバイスでエッジコンピューティングが可能かどうかを気にする代わりに、ビジネス価値を生み出すソリューションの実装に集中できます。<br> この AWS IoT ポートフォリオの強化により、より幅広いデバイスやユースケースに対応する効率的かつスケーラブルな IoT ソリューションを構築するというコミットメントが示されました。<br> AWS IoT Greengrass nucleus lite を使用して IoT ソリューションの開発に向けて以下を検討ください。</p> \n <ul> \n  <li><strong>詳細を理解する :</strong> <a href=\"https://docs.aws.amazon.com/greengrass/v2/developerguide/what-is-iot-greengrass.html\">AWS IoT Greengrass のドキュメント</a>を参照してください。</li> \n  <li><strong>nucleus lite を試す :</strong> <a href=\"https://github.com/aws-greengrass/aws-greengrass-lite/blob/main/docs/SETUP.md#setting-up-greengrass-nucleus-lite\">インストールガイド</a>または <a href=\"https://docs.aws.amazon.com/greengrass/v2/developerguide/getting-started.html\">Getting Started チュートリアル</a> に従って実験と開発を始めましょう。</li> \n  <li><strong>専門家に質問 :</strong> 質問やガイダンスが必要な場合は、AWS IoT の専門家に相談してください。</li> \n  <li><strong>コミュニティに参加 :</strong> <a href=\"https://repost.aws/topics/TAEQXJMLWWTp2elx_Bkb1Kvw/internet-of-things-iot\">AWS IoT</a> コミュニティフォーラムで体験を共有したり、他のユーザーから学びましょう。</li> \n  <li><strong>コントリビュート :</strong> <a href=\"https://github.com/aws-greengrass/aws-greengrass-lite\">オープンソースリポジトリ</a>にコードを投稿してください。</li> \n </ul> \n <p>_________________________________________________________________________________</p> \n <h3>著者について</h3> \n <p><img loading=\"lazy\" class=\"alignleft wp-image-16664 size-thumbnail\" src=\"https://d2908q01vomqb2.cloudfront.net/f6e1126cedebf23e1463aee73f9df08783640400/2025/04/15/Picture-3-120x150.png\" alt=\"\" width=\"120\" height=\"150\"><strong>Camilla Panni</strong> は、 Amazon Web Services のソリューションアーキテクトです。彼女は、イタリア全土の公共部門の顧客がクラウド導入の取り組みを加速するのを支援しています。自動化とIoTにおける彼女の技術的背景が、顧客が新興技術でイノベーションを起こすのを支援することへの情熱を後押ししています。</p> \n <p>&nbsp;</p> \n</section> \n<section class=\"blog-post-content lb-rtxt\">\n <img loading=\"lazy\" class=\"size-medium wp-image-16663 alignleft\" src=\"https://d2908q01vomqb2.cloudfront.net/f6e1126cedebf23e1463aee73f9df08783640400/2025/04/15/Picture-4.png\" alt=\"\" width=\"120\" height=\"160\">\n <strong>Greg Breen</strong> は、Amazon Web Services のシニア IoT スペシャリスト ソリューションアーキテクトです。オーストラリアを拠点とし、アジア太平洋地域全体の顧客がIoTソリューションを構築するのを支援しています。組み込みシステムにおける豊富な経験を持つ彼は、製品開発チームがデバイスを市場に投入するのを支援することに特に関心を持っています。\n</section>"
  },
  {
    "title": "vercel/next.js – v16.0.0-canary.4",
    "date": "2025-10-13T23:37:59.000Z",
    "source": "GitHub",
    "url": "https://github.com/vercel/next.js/releases/tag/v16.0.0-canary.4",
    "content": "### Core Changes\n\n- Use ESLint Flat Config: #84800\n- fix missing flight-router-state-tree header normalization: #84718\n- Write `.next/dev/types/**/*.d.ts` to default tsconfig: #84747\n- Upgrade React from `9724e3e6-20251008` to `ead92181-20251010`: #84793\n- [mcp] capture next config schema errors: #84832\n\n### Example Changes\n\n- [docs] fix(with-supabase): Update README env variables: #84745\n\n### Misc Changes\n\n- Update test/CNA templates React version to 19.2.0: #84736\n- Turbopack: use the same serialization method for lookup as for storing: #84765\n- Turbopack: update petgraph: #84757\n- [turbopack] Issue 'too many matches' warning for DirAssets also: #84768\n- Revert \"Fix flakey overlay feedback test\": #84819\n- [test]: de-flake client-cache.original.test.ts: #84831\n- [ci]: set NEXT_TEST_VERSION to release tag for deploy tests: #84840\n\n### Credits \n\nHuge thanks to @eps1lon, @devjiwonchoi, @CarloQuick, @sokra, @lukesandberg, @ztanner, and @huozhi for helping!\n"
  },
  {
    "title": "【Unity】フキダシUIを作ろう、それもテキストに応じて伸びるやつな【ハンズオン, LayoutGroup, LayoutElement】",
    "date": "2025-10-13T22:07:05.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/gameshitai/articles/0b35fe99012c6a",
    "content": "\n 背景\n\nLayoutGroup あたりの解説記事書こう → なんか仕組み解説よりかフキダシ作成の手順解説記事になったけどまあいっか\nCanvas, TextMeshPro の解説はありません(追加してほしい事柄があればコメントにどうぞ)\n\n\n 完成形\n\n\nこんなフキダシを作りながら、各コンポーネントの使い方を覚えていきましょ～\n\n\n 準備, 設計\n↓使用するフキダシ スプライトはこちら↓\nhttps://fukidesign.com/e1695/\nフキダシUI のオブジェクト構成\nCanvas\n└─ WordBubble\n   └─ Text\nWordBubble オブジェクトの担当..."
  },
  {
    "title": "Vibe Codingで25万ダウンロード超のOSSを開発できた。できたが… ── AIの役割 vs 人間の役割ではなく「協働」で考える",
    "date": "2025-10-13T22:00:02.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/team_zenn/articles/claudecode-ai-coding-vs-human-engineer",
    "content": "\n はじめに\n@dyoshikawaです。\n私の2025年6月ごろからの取り組みとして、Claude CodeによるVibe CodingでRulesyncというOSSツールを公開しました。\nそこでかなり自由にClaude Codeでいろんな手法を試すことができましたので、AIコーディング全般のTipsをお伝えできればと思います。\n一方で（人間の介入が少なすぎる）Vibe Codingの弊害としてコードベースやドキュメントが崩壊し、途中で開発がストップした場面もありました。ここのプロセスの反省と、どのように開発可能に復帰させたかという点も紹介します。\n最後に人間の役割、AIの役割、ソフト..."
  },
  {
    "title": "vercel/next.js – v15.5.5",
    "date": "2025-10-13T17:15:14.000Z",
    "source": "GitHub",
    "url": "https://github.com/vercel/next.js/releases/tag/v15.5.5",
    "content": "> [!NOTE]  \r\n> This release is backporting bug fixes. It does **not** include all pending features/changes on canary.\r\n\r\n### Core Changes\r\n- Split code-frame into separate compiled package (#84238)\r\n- Add deprecation warning to Runtime config (#84650)\r\n- fix: unstable_cache should perform blocking revalidation during ISR revalidation (#84716)\r\n- feat: `experimental.middlewareClientMaxBodySize` body cloning limit  (#84722)\r\n- fix: missing next/link types with typedRoutes (#84779)\r\n\r\n### Misc Changes\r\n- docs: early October improvements and fixes (#84334)\r\n\r\n### Credits\r\n\r\nHuge thanks to @devjiwonchoi, @ztanner, and @icyJoseph for helping!"
  },
  {
    "title": "Next.js App Routerで破綻しない設計──本番で使えるアーキテクチャ実践ガイド",
    "date": "2025-10-13T15:32:56.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/yukionishi/articles/cd79e39ea6c172",
    "content": "Next.jsのApp Routerは、“設計力が試されるフレームワーク”です。\nServer Components、Server Actions、そして“use client”による明確な境界。\nそれらは間違いなく強力な仕組みであり、\n使いこなせば、アプリケーションの構造を根本から変えるほどのポテンシャルを持っています。\nただ、どう設計すれば破綻しないのかについては、\n誰も明確な指針を示してくれません。\n実際、僕自身もいくつものチーム開発でApp Routerを使いながら、\n「境界があいまいになる」「Server Actionsが散らかる」\nといった“App Router地獄”を何度も..."
  },
  {
    "title": "yomitokuで作る無料の日本語OCR Webアプリ【Flask + TypeScript】",
    "date": "2025-10-13T14:45:46.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/lecto/articles/b345c7f3920ae9",
    "content": "\n はじめに\n昨今、AI が急速に普及している中で、改めて「OCR（光学文字認識）」という技術に注目してみました。\nOCR の API サービスは多数存在していますが、どれも従量課金制で、利用量が増えるとコストが膨らんでいきます。Google Cloud Vision API や Amazon Textract などは高精度ですが、個人開発や小規模なプロジェクトでは原価が気になるところです。\n「日本語 OCR を自分で構築できれば、コストを気にせず色々なことに使えるのではないか？」\nOSS の OCR ライブラリとしては、Tesseract や EasyOCR などが有名ですが、日本語の..."
  },
  {
    "title": "Unity: 2D で大量の草を生やす",
    "date": "2025-10-13T14:24:18.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/ruccho/articles/258b59603547d0",
    "content": "2D で草を表現するのに、大量のメッシュを Transparent キューで描画する方法を調べました。\n\n\n 前提条件\n\nURP 17 カスタム\n\n2D Renderer と Lights 2D を使用\nすでにいろいろ改造しており、いざとなれば追加の改造も可能である前提\n\n\n描画対象\n\nPer Instance なデータのある描画\n\n個別の草が風でなびいたり、Rigidbody とのインタラクションをもたせるため、インスタンスごとに状態を持たせる必要がある\n\n\n既存の 2D ライティングと統合するため Shader Graph の Sprite Lit シェーダーを使いたい\nTransp..."
  },
  {
    "title": "知ってるかい？Codexならスマホでタスク完結できる世界線を。",
    "date": "2025-10-13T12:06:21.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/manabu/articles/80f22eb54883b0",
    "content": "※ ファンタジーではありません。\nもちろん丸投げでは完結できませんし、指示を無視した事もしてきます。\nそこはAI駆動開発に片足突っ込んだ人なら分かる通り、一定許容する必要がありますよね。\nしかし、以前この記事を書いた後で意見がまたガラッと変わるのですが、突如Codexに推し変することにしました。\nhttps://zenn.dev/fastdoctor/articles/f2f6b90f95c039\nもし以下に課題を感じてるという人がいたら、私と同じくシュタインズゲートの選択をしてはいかがでしょうか・・・😈\n\nClaude Code使ってるが、結局パソコンの前から離れて仕事できない。\nスマ..."
  },
  {
    "title": "アロー関数で this を操る！",
    "date": "2025-10-13T11:18:14.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/tcool/articles/350559e14d590a",
    "content": "\n はじめに\nJavaScript の this、混乱したことありませんか？\n「呼び出し方で変わる」「イベントで指すものが違う」──誰もが一度はハマるポイントです。\nでも、Arrow Function（アロー関数）を使うと this\nの挙動が一気にわかりやすくなります。\nこの記事では、「なぜ Arrow Function では this\nが変わらないのか？」を\nES5 の関数型の書き方で解説します。\n\n※ class 構文は使いません。全部関数とオブジェクトリテラルでいきます！\n\n\n\n Arrow Function はただの省略記法じゃない\nconst greet = (name) =&..."
  },
  {
    "title": "TUIでリッチテキストの表示と編集を同時に扱う",
    "date": "2025-10-13T10:52:05.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/desktopgame/articles/73f1ff1c950b2e",
    "content": "\n はじめに\n最近開発しているTUIのエディターがあるのですが、\nこれはマークダウン（の方言）をリッチテキストとしてレンダリングし、同時に編集も可能になるような設計をしています。\n\nどういうことかというと、添付動画のような感じです。\n\nこんな感じで、プレビューモードと編集モードを分けていません。\nシャープを入力してスペースを挿入すると即座に見出しになり、シャープは見えなくなります。\nアスタリスクで囲めば太字になるし、太字テキストを消すとそれを挟んでいたアスタリスクも一緒に消えます。\nちなみに、実用的なツールを作ってみたのでぜひ使ってください、といえるほどの完成度ではないです。\n正直なとこ..."
  },
  {
    "title": "なぜ気軽にテーブルにカラムを足してはいけないのか",
    "date": "2025-10-13T10:00:01.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/mj2mkt/articles/2025-10-12-dont-add-columns-at-random",
    "content": "\n はじめに\nデータベース（RDB）の設計で深く考えずにテーブルにカラムを追加してしまうことはありませんか？テーブルの追加よりもアプリケーション側での変更が少ないので、心理的ハードルが低いこともあるでしょう。しかし、そうしてカラム追加していくうちに取り返しのつかないことになるかもしれません。\nこの記事では大きく以下の3つに分けて、なぜ気軽にテーブルにカラムを足してはいけないのかを説明します。\n\nそもそもデータベース設計がちゃんとできていないことの兆候である\n変更のコストが大きい\nインデックスの設計が難しくなる\n\n\n そもそもデータベース設計がちゃんとできていないことの兆候である\n気軽にカ..."
  },
  {
    "title": "Snowflake 自律化サービスがもたらすデータエンジニアの新時代",
    "date": "2025-10-13T09:54:38.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/dataheroes/articles/d6da9fb50e0b1e",
    "content": "\n はじめに\n私は、CCCMKホールディングス株式会社でエンジアリング全般の責任者をしていますTaroと申します。\n当社は、日本最大級の共通ポイントサービス「Vポイント」を運営しており、Snowflakeを中心としたデータ活用基盤を構築運用しています。\n最近、テクノロジーロードマップを見直しており、今年に入ってからのSnowflakeのいくつかの機能リリースを元にデータ基盤の未来についての考察を兼ねて、この記事を書きました。\nという訳で、本記事は技術的な予測というより、一人のベテランデータエンジニアが『こうあってほしい』と考える未来像です。\n時間軸や具体的な機能は外れる可能性が高いですが..."
  },
  {
    "title": "「作って理解する仮想化技術」 読書ログ in Zig",
    "date": "2025-10-13T08:01:07.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/smallkirby/articles/3e8d3bd1730b6b",
    "content": "https://github.com/smallkirby/hugin\n\n イントロ\n作って理解する仮想化技術 ─⁠─ハイパーバイザを実装しながら仕組みを学ぶ (著: 森真誠) という本を読み終えたので、その読書感想文。自作本の自分なりの読み方について。\n念の為書いておくと、本記事はアフィリエイトではない。自分は筆者の方とは特に面識は無い。(完全に無いわけではなく、2023年のセキュリティ・キャンプ全国大会の講師をした時に同じく講師をしていた著者の方に挨拶程度に会話をしたくらいはある。恐らく向こうは覚えていないが。)\n\n モチベーション\n昔は自作なんちゃらの本を読むのが好きだった。中1 ..."
  },
  {
    "title": "【React】「とりあえず切り出す」をやめる - カスタムフック設計で大事なこと",
    "date": "2025-10-13T04:00:00.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/uzu_tech/articles/12bb1dde240c5b",
    "content": "こんにちは!\n株式会社Sally エンジニアの haruten です♪\n私たち株式会社Sallyでは、マーダーミステリーをスマホやPCで遊べるアプリ「ウズ」や、マーダーミステリーを制作してウズ上で公開・プレイできるエディターツール「ウズスタジオ」などを開発・運営しています。\nhttps://sally-inc.jp/\n今回はReactのカスタムフックの設計について学び直す機会があったので、その備忘録です！\n\n はじめに\nカスタムフックは、Reactにおけるロジックの再利用を可能にする強力な機能です。\nしかし最近、とりあえずスパゲッティコードを切り出して分割するだけに利用していることに気づ..."
  },
  {
    "title": "[先取り] Tanstack Start によるクライアントファーストな RSC のアプローチ",
    "date": "2025-10-13T03:35:58.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/tsuboi/articles/0d2d63b584aa2c",
    "content": "\n はじめに 🚀\nReact Server Components（RSC）は、Next.js App Router での採用を機に広く普及しました。一方で、RSC の採用方法については、フレームワークごとに異なる考え方が存在します。\nTanStack の作者である Tanner Linsley 氏は、インタビュー[1]にて「RSC をバンドルサイズの削減や静的コンテンツの最適化に役立つツールと見ているが、万能な解決策とは考えていない」と述べています。TanStack Start は、Next.js とは異なるアプローチで RSC をサポートする予定であり、その背景にはクライアントファース..."
  },
  {
    "title": "Anthropicが公開しているClaude Codeのベストプラクティスを初心者向けに解説",
    "date": "2025-10-13T02:42:53.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/tmasuyama1114/articles/claude_code_best_practice_guide",
    "content": "こんにちは、とまだです。\n「AIツールを使ってコーディングを効率化したい！」\nそう思ってClaude Codeを始めてみたものの、思うような結果が出なくて悩んでいませんか？\n今回は、Anthropic社が公開しているClaude Codeのベストプラクティスから抜粋し、初心者にもわかりやすく解説します！\nこれを読めば、Claude Codeをもっと効果的に使いこなせるようになるはずです。\nちなみに私は本業ではフリーランスエンジニア、ならびにAI駆動開発の導入支援を行っています。\nまた、Udemy で AI 駆動開発講座を複数開講しており、いくつかベストセラーもいただいています。\nその経験..."
  },
  {
    "title": "vercel/next.js – v16.0.0-canary.3",
    "date": "2025-10-12T23:46:44.000Z",
    "source": "GitHub",
    "url": "https://github.com/vercel/next.js/releases/tag/v16.0.0-canary.3",
    "content": "### Core Changes\n\n- Upgrade React from `3025aa39-20251007` to `9724e3e6-20251008`: #84642\n- Remove unused `eslint-disable` directives: #84797\n\n### Misc Changes\n\n- [cna] Preserve existing config option when enabling React Compiler: #84663\n- Prevent failing `types-and-precompiled` from corrupting terminal output: #84799\n\n### Credits \n\nHuge thanks to @eps1lon for helping!\n"
  },
  {
    "title": "Remix 3 発表まとめ - React を捨て、Web標準で新しい世界へ",
    "date": "2025-10-12T12:03:26.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/coji/articles/remix3-introduction",
    "content": "\n はじめに\n2025年10月10日、カナダのトロントで開催されたイベント \"Remix Jam 2025\" で Ryan Florence と Michael Jackson が Remix 3 を発表しました。このセッションは、React Router の生みの親たちが、なぜ React から離れ、独自のフレームワークを作ることにしたのか、その理由と新しいビジョンを語った歴史的な発表です。\nhttps://www.youtube.com/live/xt_iEOn2a6Y?t=11764s\n本記事では、1時間47分に及ぶセッションの内容を詳しく解説します。\n!\n注意事項\n\nこの記事は、..."
  },
  {
    "title": "TinyGoはどのように \"Tiny\" を実現している？",
    "date": "2025-10-12T06:00:05.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/uji/articles/how-tinygo-tiny",
    "content": "!\nこの資料は TinyGo Conference 2025 in Japan の登壇資料です。\n\n\n 自己紹介\n\n名前: uji\n\n神戸市在住\nNOT A HOTEL のソフトウェアエンジニア\nGopher 7年生、TinyGo は 3年くらい前に初めて触りました\nKOBE.go, Kyoto.go 運営\n\n\nKOBE.go TinyGo Keebイベントの様子\n\n作ったもの\n\nhttps://x.com/uji_rb/status/1964242879175327748\nhttps://x.com/uji_rb/status/1975770765812527488\nhttps://z..."
  },
  {
    "title": "LLMのコーディングエージェント(主にCodex)を効率よく使うために",
    "date": "2025-10-12T04:48:29.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/takeshy/articles/ffe23204d1d326",
    "content": "\n 前提\n私が現在使っているLLMコーディングエージェントは下記です。\n\nCodex（proプラン $200）\nCursor（proプラン $20）\nGemini（workspace Business）\n\n1年前にclineを使いはじめ、今年の春ごろにmaxプラン($100)でClaude Codeが使えるようになったタイミングでClaude Codeに乗り換えました。\nその後、gpt-5-codexが登場し、maxプランの残期間があったClaude Codeと併用していましたが、同じ不具合でもCodexはすんなり不具合を解決できるのに、Claude Codeだといつまでたっても解決しな..."
  },
  {
    "title": "モダンフロントエンドはJSON APIが鬱陶しいので、無くしていきたい",
    "date": "2025-10-12T00:44:01.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/naofumik/articles/0714f7237a493c",
    "content": "\n はじめに\nKaigi on Rails 2025で発表し、何人かの人といろいろ話しているうちに、モダンフロントエンドが面倒臭いのはJSON APIのせいではないかと考えるようになりました。そしてJSON APIそのものが悪いというよりは、JSON APIを必要以上に使う原因となっているSPAが問題ではないかと思っています。まだ考えは固まっていないのですが、まずは部分的に紹介したいと思います。\n\n モダンフロントエンドはJSON基礎工事が大変\n\nSPAのReactフロントエンドを作る場合、Hotwireなら不要だった多大な工数が新しく発生します。\nAPIエンドポイントのルータおよびコン..."
  },
  {
    "title": "vercel/next.js – v16.0.0-canary.2",
    "date": "2025-10-11T23:45:58.000Z",
    "source": "GitHub",
    "url": "https://github.com/vercel/next.js/releases/tag/v16.0.0-canary.2",
    "content": "### Misc Changes\n\n- Update Rspack production test manifest: #84729\n- Update Rspack development test manifest: #84730\n- fix: release next-rspack ci: #84673\n\n### Credits \n\nHuge thanks to @vercel-release-bot and @SyMind for helping!\n"
  },
  {
    "title": "Claude・Codex・Kombaiを使ったFigma to Codeの比較",
    "date": "2025-10-11T22:02:02.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/oikon/articles/frontend-ai-tools",
    "content": "Oikonです。\n先日AIツールでどこまでデザインを忠実に実装できるのかというテーマで登壇する機会がありました。\nその際に、以下の３つのツールについてFigmaからコードを生成してみて比較する実験を行いました。\n\nClaude Code + Figma MCP\nCodex CLI + Figma MCP\nKombai\n\n\nこの記事では、それぞれの手法について詳しく比較していきたいと思います。\n\n UI/UXデザイン実装の現状と課題\n最近はAIツールもデザイン力が高くなってきましたが、それでもバックエンドほど上手く実装することができない印象です。フロントエンド開発において、デザインからコー..."
  },
  {
    "title": "nodejs/node – 2025-10-08, Version 24.10.0 (Current), @RafaelGSS",
    "date": "2025-10-11T16:18:16.000Z",
    "source": "GitHub",
    "url": "https://github.com/nodejs/node/releases/tag/v24.10.0",
    "content": "### Notable Changes\r\n\r\n* \\[[`31bb476895`](https://github.com/nodejs/node/commit/31bb476895)] - **(SEMVER-MINOR)** **console**: allow per-stream `inspectOptions` option (Anna Henningsen) [#60082](https://github.com/nodejs/node/pull/60082)\r\n* \\[[`3b92be2fb8`](https://github.com/nodejs/node/commit/3b92be2fb8)] - **(SEMVER-MINOR)** **lib**: remove util.getCallSite (Rafael Gonzaga) [#59980](https://github.com/nodejs/node/pull/59980)\r\n* \\[[`18c79d9e1c`](https://github.com/nodejs/node/commit/18c79d9e1c)] - **(SEMVER-MINOR)** **sqlite**: create authorization api (Guilherme Araújo) [#59928](https://github.com/nodejs/node/pull/59928)\r\n\r\n### Commits\r\n\r\n* \\[[`e8cff3d51e`](https://github.com/nodejs/node/commit/e8cff3d51e)] - **benchmark**: remove unused variable from util/priority-queue (Bruno Rodrigues) [#59872](https://github.com/nodejs/node/pull/59872)\r\n* \\[[`03294252ab`](https://github.com/nodejs/node/commit/03294252ab)] - **benchmark**: update count to n in permission startup (Bruno Rodrigues) [#59872](https://github.com/nodejs/node/pull/59872)\r\n* \\[[`3c8a609d9b`](https://github.com/nodejs/node/commit/3c8a609d9b)] - **benchmark**: update num to n in dgram offset-length (Bruno Rodrigues) [#59872](https://github.com/nodejs/node/pull/59872)\r\n* \\[[`7b2032b13e`](https://github.com/nodejs/node/commit/7b2032b13e)] - **benchmark**: adjust dgram offset-length len values (Bruno Rodrigues) [#59708](https://github.com/nodejs/node/pull/59708)\r\n* \\[[`552d887aee`](https://github.com/nodejs/node/commit/552d887aee)] - **benchmark**: update num to n in dgram offset-length (Bruno Rodrigues) [#59708](https://github.com/nodejs/node/pull/59708)\r\n* \\[[`31bb476895`](https://github.com/nodejs/node/commit/31bb476895)] - **(SEMVER-MINOR)** **console**: allow per-stream `inspectOptions` option (Anna Henningsen) [#60082](https://github.com/nodejs/node/pull/60082)\r\n* \\[[`0bf022d4c0`](https://github.com/nodejs/node/commit/0bf022d4c0)] - **console,util**: improve array inspection performance (Ruben Bridgewater) [#60037](https://github.com/nodejs/node/pull/60037)\r\n* \\[[`04d568e591`](https://github.com/nodejs/node/commit/04d568e591)] - **deps**: V8: cherry-pick f93055fbd5aa (Olivier Flückiger) [#60105](https://github.com/nodejs/node/pull/60105)\r\n* \\[[`621058b3bf`](https://github.com/nodejs/node/commit/621058b3bf)] - **deps**: update archs files for openssl-3.5.4 (Node.js GitHub Bot) [#60101](https://github.com/nodejs/node/pull/60101)\r\n* \\[[`81b3009fe6`](https://github.com/nodejs/node/commit/81b3009fe6)] - **deps**: upgrade openssl sources to openssl-3.5.4 (Node.js GitHub Bot) [#60101](https://github.com/nodejs/node/pull/60101)\r\n* \\[[`dc44c9f349`](https://github.com/nodejs/node/commit/dc44c9f349)] - **deps**: upgrade npm to 11.6.1 (npm team) [#60012](https://github.com/nodejs/node/pull/60012)\r\n* \\[[`ec0f137198`](https://github.com/nodejs/node/commit/ec0f137198)] - **deps**: update ada to 3.3.0 (Node.js GitHub Bot) [#60045](https://github.com/nodejs/node/pull/60045)\r\n* \\[[`f490f91874`](https://github.com/nodejs/node/commit/f490f91874)] - **deps**: update amaro to 1.1.4 (pmarchini) [#60044](https://github.com/nodejs/node/pull/60044)\r\n* \\[[`de7a7cd0d7`](https://github.com/nodejs/node/commit/de7a7cd0d7)] - **deps**: update ada to 3.2.9 (Node.js GitHub Bot) [#59987](https://github.com/nodejs/node/pull/59987)\r\n* \\[[`a533e5b5db`](https://github.com/nodejs/node/commit/a533e5b5db)] - **doc**: add automated migration info to deprecations (Augustin Mauroy) [#60022](https://github.com/nodejs/node/pull/60022)\r\n* \\[[`7fb8fe4875`](https://github.com/nodejs/node/commit/7fb8fe4875)] - **doc**: fix typo on child\\_process.md (Angelo Gazzola) [#60114](https://github.com/nodejs/node/pull/60114)\r\n* \\[[`24c1ef9846`](https://github.com/nodejs/node/commit/24c1ef9846)] - **doc**: remove optional title prefixes (Aviv Keller) [#60087](https://github.com/nodejs/node/pull/60087)\r\n* \\[[`08b9eb8e19`](https://github.com/nodejs/node/commit/08b9eb8e19)] - **doc**: mark `.env` files support as stable (Santeri Hiltunen) [#59925](https://github.com/nodejs/node/pull/59925)\r\n* \\[[`66d90b8063`](https://github.com/nodejs/node/commit/66d90b8063)] - **doc**: mention reverse proxy and include simple example (Steven) [#59736](https://github.com/nodejs/node/pull/59736)\r\n* \\[[`14aa1119cb`](https://github.com/nodejs/node/commit/14aa1119cb)] - **doc**: provide alternative to `url.parse()` using WHATWG URL (Steven) [#59736](https://github.com/nodejs/node/pull/59736)\r\n* \\[[`f9412324f6`](https://github.com/nodejs/node/commit/f9412324f6)] - **doc**: fix typo of built-in module specifier in worker\\_threads (Deokjin Kim) [#59992](https://github.com/nodejs/node/pull/59992)\r\n* \\[[`64e738a342`](https://github.com/nodejs/node/commit/64e738a342)] - **doc,crypto**: reorder ML-KEM in the asymmetric key types table (Filip Skokan) [#60067](https://github.com/nodejs/node/pull/60067)\r\n* \\[[`1b25008b41`](https://github.com/nodejs/node/commit/1b25008b41)] - **http**: improve writeEarlyHints by avoiding for-of loop (Haram Jeong) [#59958](https://github.com/nodejs/node/pull/59958)\r\n* \\[[`35f9b6b28f`](https://github.com/nodejs/node/commit/35f9b6b28f)] - **inspector**: improve batch diagnostic channel subscriptions (Chengzhong Wu) [#60009](https://github.com/nodejs/node/pull/60009)\r\n* \\[[`3b92be2fb8`](https://github.com/nodejs/node/commit/3b92be2fb8)] - **(SEMVER-MINOR)** **lib**: remove util.getCallSite (Rafael Gonzaga) [#59980](https://github.com/nodejs/node/pull/59980)\r\n* \\[[`c495e1fe57`](https://github.com/nodejs/node/commit/c495e1fe57)] - **lib**: optimize priority queue (Gürgün Dayıoğlu) [#60039](https://github.com/nodejs/node/pull/60039)\r\n* \\[[`6be31fb9f3`](https://github.com/nodejs/node/commit/6be31fb9f3)] - **lib**: implement passive listener behavior per spec (BCD1me) [#59995](https://github.com/nodejs/node/pull/59995)\r\n* \\[[`c5e4aa763b`](https://github.com/nodejs/node/commit/c5e4aa763b)] - **meta**: bump actions/setup-python from 5.6.0 to 6.0.0 (dependabot\\[bot]) [#60090](https://github.com/nodejs/node/pull/60090)\r\n* \\[[`50fa1f4a76`](https://github.com/nodejs/node/commit/50fa1f4a76)] - **meta**: bump ossf/scorecard-action from 2.4.2 to 2.4.3 (dependabot\\[bot]) [#60096](https://github.com/nodejs/node/pull/60096)\r\n* \\[[`def4ce976c`](https://github.com/nodejs/node/commit/def4ce976c)] - **meta**: bump actions/cache from 4.2.4 to 4.3.0 (dependabot\\[bot]) [#60095](https://github.com/nodejs/node/pull/60095)\r\n* \\[[`24b5abc0e9`](https://github.com/nodejs/node/commit/24b5abc0e9)] - **meta**: bump step-security/harden-runner from 2.12.2 to 2.13.1 (dependabot\\[bot]) [#60094](https://github.com/nodejs/node/pull/60094)\r\n* \\[[`8ccf2b0b34`](https://github.com/nodejs/node/commit/8ccf2b0b34)] - **meta**: bump actions/setup-node from 4.4.0 to 5.0.0 (dependabot\\[bot]) [#60093](https://github.com/nodejs/node/pull/60093)\r\n* \\[[`78580147ef`](https://github.com/nodejs/node/commit/78580147ef)] - **meta**: bump actions/stale from 9.1.0 to 10.0.0 (dependabot\\[bot]) [#60092](https://github.com/nodejs/node/pull/60092)\r\n* \\[[`705686b5c4`](https://github.com/nodejs/node/commit/705686b5c4)] - **meta**: bump codecov/codecov-action from 5.5.0 to 5.5.1 (dependabot\\[bot]) [#60091](https://github.com/nodejs/node/pull/60091)\r\n* \\[[`423a6bc744`](https://github.com/nodejs/node/commit/423a6bc744)] - **meta**: bump github/codeql-action from 3.30.0 to 3.30.5 (dependabot\\[bot]) [#60089](https://github.com/nodejs/node/pull/60089)\r\n* \\[[`9d9bd0fb4f`](https://github.com/nodejs/node/commit/9d9bd0fb4f)] - **meta**: move Michael to emeritus (Michael Dawson) [#60070](https://github.com/nodejs/node/pull/60070)\r\n* \\[[`dbeee55824`](https://github.com/nodejs/node/commit/dbeee55824)] - **module**: use sync cjs when importing cts (Marco Ippolito) [#60072](https://github.com/nodejs/node/pull/60072)\r\n* \\[[`a722f677ac`](https://github.com/nodejs/node/commit/a722f677ac)] - **perf\\_hooks**: fix histogram fast call signatures (Renegade334) [#59600](https://github.com/nodejs/node/pull/59600)\r\n* \\[[`b3295b8353`](https://github.com/nodejs/node/commit/b3295b8353)] - **process**: fix wrong asyncContext under unhandled-rejections=strict (Shima Ryuhei) [#60103](https://github.com/nodejs/node/pull/60103)\r\n* \\[[`cff4a7608a`](https://github.com/nodejs/node/commit/cff4a7608a)] - **process**: fix default `env` for `process.execve` (Richard Lau) [#60029](https://github.com/nodejs/node/pull/60029)\r\n* \\[[`cd034e927f`](https://github.com/nodejs/node/commit/cd034e927f)] - **process**: fix hrtime fast call signatures (Renegade334) [#59600](https://github.com/nodejs/node/pull/59600)\r\n* \\[[`18c79d9e1c`](https://github.com/nodejs/node/commit/18c79d9e1c)] - **(SEMVER-MINOR)** **sqlite**: create authorization api (Guilherme Araújo) [#59928](https://github.com/nodejs/node/pull/59928)\r\n* \\[[`d949222043`](https://github.com/nodejs/node/commit/d949222043)] - **sqlite**: replace `ToLocalChecked` and improve filter error handling (Edy Silva) [#60028](https://github.com/nodejs/node/pull/60028)\r\n* \\[[`6417dc879e`](https://github.com/nodejs/node/commit/6417dc879e)] - **src**: bring permissions macros in line with general C/C++ standards (Anna Henningsen) [#60053](https://github.com/nodejs/node/pull/60053)\r\n* \\[[`e273c2020c`](https://github.com/nodejs/node/commit/e273c2020c)] - **src**: update contextify to use DictionaryTemplate (James M Snell) [#60059](https://github.com/nodejs/node/pull/60059)\r\n* \\[[`5f9ff60664`](https://github.com/nodejs/node/commit/5f9ff60664)] - **src**: remove `AnalyzeTemporaryDtors` option from .clang-tidy (iknoom) [#60008](https://github.com/nodejs/node/pull/60008)\r\n* \\[[`9db54adccc`](https://github.com/nodejs/node/commit/9db54adccc)] - **src**: update cares\\_wrap to use DictionaryTemplates (James M Snell) [#60033](https://github.com/nodejs/node/pull/60033)\r\n* \\[[`fc0ceb7b82`](https://github.com/nodejs/node/commit/fc0ceb7b82)] - **src**: correct the error handling in StatementExecutionHelper (James M Snell) [#60040](https://github.com/nodejs/node/pull/60040)\r\n* \\[[`3e8fdc1d8d`](https://github.com/nodejs/node/commit/3e8fdc1d8d)] - **src**: remove unused variables from report (Moonki Choi) [#60047](https://github.com/nodejs/node/pull/60047)\r\n* \\[[`d744324d8e`](https://github.com/nodejs/node/commit/d744324d8e)] - **src**: avoid unnecessary string allocations in SPrintF impl (Anna Henningsen) [#60052](https://github.com/nodejs/node/pull/60052)\r\n* \\[[`de65a5c719`](https://github.com/nodejs/node/commit/de65a5c719)] - **src**: make ToLower/ToUpper input args more flexible (Anna Henningsen) [#60052](https://github.com/nodejs/node/pull/60052)\r\n* \\[[`354026df5a`](https://github.com/nodejs/node/commit/354026df5a)] - **src**: allow `std::string_view` arguments to `SPrintF()` and friends (Anna Henningsen) [#60058](https://github.com/nodejs/node/pull/60058)\r\n* \\[[`42f7d7cb20`](https://github.com/nodejs/node/commit/42f7d7cb20)] - **src**: remove unnecessary `std::string` error messages (Anna Henningsen) [#60057](https://github.com/nodejs/node/pull/60057)\r\n* \\[[`30c2c0fedd`](https://github.com/nodejs/node/commit/30c2c0fedd)] - **src**: remove unnecessary shadowed functions on Utf8Value & BufferValue (Anna Henningsen) [#60056](https://github.com/nodejs/node/pull/60056)\r\n* \\[[`eb99eec09b`](https://github.com/nodejs/node/commit/eb99eec09b)] - **src**: avoid unnecessary string -> `char*` -> string round trips (Anna Henningsen) [#60055](https://github.com/nodejs/node/pull/60055)\r\n* \\[[`c1f1dbdce2`](https://github.com/nodejs/node/commit/c1f1dbdce2)] - **src**: remove useless dereferencing in `THROW_...` (Anna Henningsen) [#60054](https://github.com/nodejs/node/pull/60054)\r\n* \\[[`ea0f5e575d`](https://github.com/nodejs/node/commit/ea0f5e575d)] - **src**: fill `options_args`, `options_env` after vectors are finalized (iknoom) [#59945](https://github.com/nodejs/node/pull/59945)\r\n* \\[[`415fff217a`](https://github.com/nodejs/node/commit/415fff217a)] - **src**: use RAII for uv\\_process\\_options\\_t (iknoom) [#59945](https://github.com/nodejs/node/pull/59945)\r\n* \\[[`982b03ecbd`](https://github.com/nodejs/node/commit/982b03ecbd)] - **test**: mark `test-runner-run-watch` flaky on macOS (Richard Lau) [#60115](https://github.com/nodejs/node/pull/60115)\r\n* \\[[`831a0d3d28`](https://github.com/nodejs/node/commit/831a0d3d28)] - **test**: ensure that the message event is fired (Luigi Pinca) [#59952](https://github.com/nodejs/node/pull/59952)\r\n* \\[[`5538cfc1e8`](https://github.com/nodejs/node/commit/5538cfc1e8)] - **test**: replace diagnostics\\_channel stackframe in output snapshots (Chengzhong Wu) [#60024](https://github.com/nodejs/node/pull/60024)\r\n* \\[[`77ec400d90`](https://github.com/nodejs/node/commit/77ec400d90)] - **test**: mark test-web-locks skip on IBM i (SRAVANI GUNDEPALLI) [#59996](https://github.com/nodejs/node/pull/59996)\r\n* \\[[`1aaadb9e31`](https://github.com/nodejs/node/commit/1aaadb9e31)] - **test**: ensure message event fires in worker message port test (Jarred Sumner) [#59885](https://github.com/nodejs/node/pull/59885)\r\n* \\[[`1d5cc5e57a`](https://github.com/nodejs/node/commit/1d5cc5e57a)] - **test**: mark sea tests flaky on macOS x64 (Richard Lau) [#60068](https://github.com/nodejs/node/pull/60068)\r\n* \\[[`c412b1855d`](https://github.com/nodejs/node/commit/c412b1855d)] - **test**: expand tls-check-server-identity coverage (Diango Gavidia) [#60002](https://github.com/nodejs/node/pull/60002)\r\n* \\[[`ad87975029`](https://github.com/nodejs/node/commit/ad87975029)] - **test**: fix typo of test-benchmark-readline.js (Deokjin Kim) [#59993](https://github.com/nodejs/node/pull/59993)\r\n* \\[[`bad4b9b878`](https://github.com/nodejs/node/commit/bad4b9b878)] - **test**: add new `startNewREPLSever` testing utility (Dario Piotrowicz) [#59964](https://github.com/nodejs/node/pull/59964)\r\n* \\[[`ef90b0f456`](https://github.com/nodejs/node/commit/ef90b0f456)] - **test**: verify tracing channel doesn't swallow unhandledRejection (Gerhard Stöbich) [#59974](https://github.com/nodejs/node/pull/59974)\r\n* \\[[`d7285459fe`](https://github.com/nodejs/node/commit/d7285459fe)] - **timers**: fix binding fast call signatures (Renegade334) [#59600](https://github.com/nodejs/node/pull/59600)\r\n* \\[[`6529ae9b0c`](https://github.com/nodejs/node/commit/6529ae9b0c)] - **tools**: add message on auto-fixing js lint issues in gh workflow (Dario Piotrowicz) [#59128](https://github.com/nodejs/node/pull/59128)\r\n* \\[[`1ca116a6ea`](https://github.com/nodejs/node/commit/1ca116a6ea)] - **tools**: verify signatures when updating nghttp\\* (Antoine du Hamel) [#60113](https://github.com/nodejs/node/pull/60113)\r\n* \\[[`20d10a2398`](https://github.com/nodejs/node/commit/20d10a2398)] - **tools**: use dependabot cooldown and move tools/doc (Rafael Gonzaga) [#59978](https://github.com/nodejs/node/pull/59978)\r\n* \\[[`275c07064c`](https://github.com/nodejs/node/commit/275c07064c)] - **typings**: update 'types' binding (René) [#59692](https://github.com/nodejs/node/pull/59692)\r\n* \\[[`8c21c4b286`](https://github.com/nodejs/node/commit/8c21c4b286)] - **wasi**: fix WasiFunction fast call signature (Renegade334) [#59600](https://github.com/nodejs/node/pull/59600)\r\n* \\[[`b865074641`](https://github.com/nodejs/node/commit/b865074641)] - **win,tools**: add description to signature (Martin Costello) [#59877](https://github.com/nodejs/node/pull/59877)\r\n"
  },
  {
    "title": "vercel/next.js – v16.0.0-canary.1",
    "date": "2025-10-10T23:43:12.000Z",
    "source": "GitHub",
    "url": "https://github.com/vercel/next.js/releases/tag/v16.0.0-canary.1",
    "content": "### Core Changes\n\n- Version gate migration docs link: #84740\n- [Cache Components] Allow hiding logs after abort: #84579\n- Log `Compiled proxy in ...`: #84746\n\n### Misc Changes\n\n- [next-upgrade] misc: update comment: #84727\n- Turbopack: use vector instead of hash map: #84696\n- Revert \"docs: nav_title for long unbroken words (#84233)\": #84346\n- [turbopack] tweak the doc on the inner graph optimization: #84752\n- [turbopack] Fix a few references to caching configuration as it is no longer canary guarded: #84761\n- Add 16.0.0-beta.0 to next/third-parties peerDeps: #84741\n- [eslint-plugin] Remove `eslint-v8` testing: #84721\n\n### Credits \n\nHuge thanks to @devjiwonchoi, @mischnic, @icyJoseph, @gnoff, and @lukesandberg for helping!\n"
  },
  {
    "title": "ビジネスインテリジェンスの再解釈 : Amazon QuickSight から Amazon Quick Suite への進化",
    "date": "2025-10-10T09:11:37.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/reimagine-business-intelligence-amazon-quicksight-evolves-to-amazon-quick-suite/",
    "content": "<p>本記事は、2025 年 10 月 9 日に公開された <a href=\"https://aws.amazon.com/jp/blogs/business-intelligence/reimagine-business-intelligence-amazon-quicksight-evolves-to-amazon-quick-suite/\">Reimagine business intelligence: Amazon QuickSight evolves to Amazon Quick Suite</a> を翻訳したものです。翻訳は Solutions Architect の守田凜々佳が担当しました。</p> \n<p>ビジネスインテリジェンス (BI) の領域は、変革期を迎えています。データ活用が進み、AI が日常生活におけるデータとの関わり方を大きく変えている今、顧客は重要な岐路に立っています。つまり、ビジネスを加速させるために AI の可能性を受け入れる必要がありますが、それを慎重かつ安全に行わなければなりません。多くの顧客が、いかに実質的な価値を生み出す形で AI を業務に統合するか、という課題に直面しています。構造化データの可視化とレポート作成を主な目的とした従来の BI ソリューションは、もはやこの新時代には十分ではありません。</p> \n<p>顧客は 3 つの課題に直面しています。データの発見、分析、アクションの間で広がりつつあるギャップを埋めることができるソリューション、具体的なビジネス成果をもたらす形での AI 活用、さらにエンタープライズレベルのセキュリティとガバナンスを維持しながら組織全体のユーザーがアクセスできるソリューション、が必要です。多くの組織は、強力な AI 機能と、既存のデータやプロセスに適合する実用的で安全な実装との間で、適切なバランスを見つけることに苦闘しています。</p> \n<p>本日、Amazon QuickSight が <a href=\"https://aws.amazon.com/quicksuite/\" rel=\"noopener noreferrer\" target=\"_blank\">Amazon Quick Suite</a> へと進化することを発表できることを嬉しく思います。これは、組織内の全メンバーが包括的なビジネスインサイトを容易に利用できるようにする大きな前進です。この進化は、BI の可能性を広げ、AI エージェントがユーザーと協働しながら複雑な質問への回答、詳細な調査、定型業務の自動化を行う統合された体験を実現します。またその際に企業が期待するセキュリティ、信頼性、ガバナンスを維持します。Quick Suite は、AI 時代における BI の再解釈を行う私たちのビジョンを表しており、組織がより良い意思決定をより迅速に行い、それに基づいて行動できるように支援します。</p> \n<p>従来の BI 機能 (現在は <strong>Quick Sight</strong> と呼ばれています) に加えて、Quick Suite は複数の AI を活用した機能を導入しています：</p> \n<ul> \n <li><strong>Quick Research</strong> – 企業内外のデータソースから、引用付きの包括的なインサイトを提供します</li> \n <li><strong>Quick Flows</strong> – 自然言語でワークフローオートメーションを作成および共有します</li> \n <li><strong>Quick Automate</strong> – 複雑な多段階のビジネスプロセスを処理します</li> \n <li><strong>Quick Index</strong> – 企業のすべてのドキュメントとデータを共有ナレッジベースとして提供します</li> \n</ul> \n<p>これらの機能は、自然言語インターフェースの Quick chat を通じてアクセスでき、Quick spaces を通じて各チーム向けにカスタマイズすることができます。この統合環境では、ユーザーはデータ分析、詳細な調査、プロセスの自動化まで、全ての作業を同一アプリケーション内でシームレスに実行することができ、さらにエンタープライズレベルのセキュリティとガバナンスを維持できます。</p> \n<h2>なぜこの進化が重要なのか</h2> \n<p>冒頭で述べた企業が直面する 3 つの重要な課題 (データとアクションのギャップの解消、AI の実用的な活用、セキュリティの維持) に対して、Quick Suite は、企業がデータと AI を活用する方法を変革する包括的なソリューションを提供します。</p> \n<ul> \n <li><strong>あらゆるデータを統合するインテリジェンス </strong>– 従来の BI ソリューションは、指標と数値の活用に限定されており、ドキュメント、メール、エンタープライズアプリケーションに含まれる価値あるインサイトが活用できていませんでした。これにより、データの発見と有意義なインサイトの間に大きなギャップが生じていました。Quick Suite は、エンタープライズシステム、データベース、データレイク、チームの知見、リアルタイムのウェブインサイトなど、意思決定に必要なすべてのソースからのデータアクセスを統合することで、このギャップを解消します。経営者は、財務データベース、カスタマーフィードバックのメール、サポートチケット、市場調査文書にまたがる質問を行い、数秒で完全な回答を得ることができます。データの専門家は、利用可能なソースからコンテキストを取り込んだ高度な可視化と分析を作成し、より豊かで実用的なインサイトをステークホルダーに提供できます。</li> \n <li><strong>実用的な AI イノベーション </strong>– 企業が必要としているのは、単なる技術的な目新しさではなく、具体的なビジネス成果をもたらす AI です。Quick Suite は、強力な調査、分析、自動化エージェントを通じてこれを実現します。Quick Research は、社内データ、公開情報、専門データセットから情報を統合し、これまで数週間かかっていた包括的で引用付きのインサイト提供を数時間で実現します。Quick Flows を活用すると、議事録からアクション可能なタスクを作成する、最新のインサイトを含む週次レポートを自動で生成する、カスタマーサポートプロセスを効率化するなど、自然言語を使用して AI を活用したワークフローを作成できます。これらのワークフローを素早く共有することで、組織全体の生産性向上を実現できます。</li> \n <li><strong>セキュアでアクセスしやすい自然言語での体験 </strong>– Quick Suite は、エンタープライズレベルのセキュリティとガバナンスを維持しながら、AI へのアクセスを民主化します。強力なチャットインターフェースにより、自然言語での会話を通じて各機能にアクセスできます。組織は、技術的な質問に対応するトラブルシューティングアシスタントや、従業員に社内手続きをナビゲートするためのポリシーガイドなど、特定のニーズに合わせたカスタム AI エージェントを作成できます。これらのエージェントは、ドメインの専門知識と関連データソースを組み合わせ、必要とするすべての人が専門知識にアクセスできるようにします。各エージェントは、特定のペルソナ、データアクセス権、行動ガイドラインでカスタマイズでき、組織全体で一貫性のある、コンプライアンスに準拠した対話を実現します。</li> \n</ul> \n<h2>変更されない点</h2> \n<p> Quick Suite は強力な新機能を導入しますが、既存の BI 機能は変更なく維持されます。この進化は、現在の運用を妨げることなく、お客様が信頼する基盤の上に構築されています。</p> \n<p> 従来の QuickSight 環境は、ダッシュボード、データセット、分析を含めて、すべてがそのまま維持されます。データ接続、セキュリティ管理、ユーザー権限もすべて変更なく継続されます。既存の API 連携も以前と同様に機能し、データの移行も必要ありません。重要な点として、SOC、HIPAA、ISO 27001、ISO 27019、ISO 27018、ISO 9001、GDPR、FedRAMP を含む既存のコンプライアンス認証と認定が、引き続き有効です。Quick Suite は QuickSight の既存のコンプライアンス体制を継承します。また、データのプライバシーとセキュリティに対する AWS のコミットメントを強調したいと思います。私たちは、お客様のコンテンツをモデルのトレーニングに使用することはなく、新しいモデルプロバイダーも導入していません。お客様のデータは、信頼できるエンタープライズグレードのセキュリティとガバナンス管理により、お客様のものとして維持されます。このシームレスな移行により、ビジネスの継続性を維持しながら、お客様のペースで新機能を採用することができます。</p> \n<h2>リージョンの提供状況</h2> \n<p> Quick Suite は、すべてのお客様にスムーズな移行を提供するよう、段階的なアプローチで展開します。2025 年 10 月 9 日より、世界中の QuickSight のお客様は、新しい Quick Suite UI とブランディングが表示されます。新機能は、US East (N. Virginia)、US West (Oregon)、Europe (Dublin)、Asia Pacific (Sydney) でご利用いただけます。その他の AWS リージョンのお客様は、新しい Quick Suite インターフェイスが表示されますが、既存の BI 機能のみにアクセス可能な状態が維持されます。</p> \n<h2>新しいエクスペリエンスの操作方法</h2> \n<p> Quick Suite のインターフェースは、使い慣れた操作性を維持しながら強力な新機能を導入できるよう、慎重に再設計されました。このセクションでは、Pro ユーザー (Admin Pro、Author Pro、Reader Pro) と Author (Admin 含む) 向けの主要な変更点について説明します。</p> \n<p>Quick chat が Quick Suite のホームページに目立つように配置され、Quick Suite の機能にすぐにアクセスできるようになっています。また、ダッシュボードから主要なビジュアルをホームページにピン留めできる新機能が追加され、パーソナライズされたレコメンデーションや最近アクセスしたアイテムにも引き続き簡単にアクセスできます。基本的な Reader ($3) の体験は変更されていませんが、重要なメトリクスをホームページにピン留めできる機能が追加され、最も重要な情報を追跡しやすくなりました。</p> \n<p><img loading=\"lazy\" alt=\"\" class=\"alignnone size-full wp-image-5662\" height=\"750\" src=\"https://d2908q01vomqb2.cloudfront.net/d02560dd9d7db4467627745bd6701e809ffca6e3/2025/10/09/bi-7091-1.png\" style=\"margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC\" width=\"1536\"></p> \n<p>従来の BI 機能は、ナビゲーションペインの <strong>Quick Sight</strong> の下に整理されています。コンテンツへの整理されたアクセスのための <strong>マイフォルダ</strong> と <strong>共有フォルダ</strong>、<strong>ダッシュボード</strong>、<strong>ストーリー</strong> (旧 <strong>データストーリー</strong>)、<strong>分析</strong>、<strong>データセット</strong> などです。<strong>お気に入り</strong> は、素早くアクセスできるようにトップレベルに残され、グローバル検索は左上に配置されました。また、<strong>Quick Research</strong>、<strong>Quick Flows</strong>、<strong>Quick Automate</strong>、<strong>Connections</strong> は、ナビゲーションペインの専用セクションからアクセスできます。</p> \n<p>以下のスクリーンショットは、以前の QuickSight ナビゲーションペインと強化された Quick Suite ナビゲーションペインを比較したものです。</p> \n<table> \n <tbody> \n  <tr> \n   <td><img alt=\"\" class=\"alignnone size-full wp-image-5666\" height=\"772\" loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/d02560dd9d7db4467627745bd6701e809ffca6e3/2025/10/09/bi-7091-2-1.png\" style=\"margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC\" width=\"275\"></td> \n   <td><img alt=\"\" class=\"alignnone size-full wp-image-5664\" height=\"772\" loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/d02560dd9d7db4467627745bd6701e809ffca6e3/2025/10/09/bi-7091-3.png\" style=\"margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC\" width=\"252\"></td> \n  </tr> \n </tbody> \n</table> \n<h2>価値の向上</h2> \n<p>既存のお客様にとってのシンプルさを維持しながら、より多くの価値を提供するため、料金体系が変更されます。</p> \n<p>お客様は、価格の引き下げと機能アクセスの拡充のメリットを得ることができます:</p> \n<ul> \n <li>Author Pro の料金が月額 50 ドルから 40 ドルに値下げされ、Author Pro ユーザーは <a href=\"https://aws.amazon.com/quicksuite/pricing/\" rel=\"noopener noreferrer\" target=\"_blank\">Quick Suite の Enterprise ユーザーの機能</a>にアクセスできるようになりました</li> \n <li>Reader Pro (月額 20 ドル) ユーザーは <a href=\"https://aws.amazon.com/quicksuite/pricing/\" rel=\"noopener noreferrer\" target=\"_blank\">Quick Suite の Professional ユーザーの機能</a>にアクセスできるようになりました</li> \n <li>現在の Author および Admin ユーザーは、2026 年 4 月 30 日までプロモーションとして Quick Suite の Enterprise ユーザーの機能にアクセスできます</li> \n <li>Reader (3 ドル) および Author (24 ドル) の料金は変更ありません</li> \n</ul> \n<p>専用インフラストラクチャ料金:</p> \n<ul> \n <li>既存の月額 250 ドルのインフラストラクチャ料金は、引き続き以下のアカウントにのみ適用されます： \n  <ul> \n   <li>Pro ユーザー (20 ドル/40 ドルプラン) が 1 つ以上存在</li> \n   <li>Topics または Dashboard Q&amp;A がアクティブ</li> \n  </ul> </li> \n <li>2025 年 10 月 9 日以降の新規 Pro ユーザーまたは Q&amp;A 有効化を行ったアカウントについては、2025 年 12 月 31 日までプロモーションとして本料金が免除されます</li> \n</ul> \n<h2>機能導入の完全なコントロール</h2> \n<p>組織が AI 機能の採用を正確にコントロールする必要があることを理解しています。管理者は、カスタムアクセス許可を使用してアカウント、ロール、ユーザーレベルで機能の有効化や無効化を行い、新機能を導入しながら既存のセキュリティポリシーを維持し、API を通じて複数のアカウントに一貫したコントロールを適用できます。</p> \n<p> Quick Suite は、お客様のペースで導入を管理できる柔軟性を提供します。すべての機能を直ちに有効化することも、異なるユーザーグループに段階的に導入するかを選択することも可能です。</p> \n<h2>埋め込み分析</h2> \n<p> BI の埋め込み機能をご利用の場合、主要な機能は変更されません。埋め込み機能、API、および統合機能は、これまでと同様に動作し、既存の実装に変更を加える必要はありません。ただし Quick Suite に合わせて、フッターが「Powered by Amazon Quick Suite」に更新、カラースキームが青色から紫色に変更、標準的な配置に Quick Suite ロゴが表示されるというビジュアルの更新が行われます。</p> \n<p>ブランドカスタマイズ機能をご利用の場合、カスタムスタイルは引き続き製品のデフォルトの外観を上書きします。Quick Sight アプリケーション要素について現在の青色のカラースキームを維持したい場合は、アカウントレベルで設定されたブランドカスタマイズ、公開時のテーマカスタマイズの適用、SDK を使用した埋め込み呼び出しでの動的な適用、のいずれかの方法で実現できます。これにより、埋め込み分析においてエンドユーザーに一貫した体験を継続して提供できます。</p> \n<h2>リソースとサポート</h2> \n<p>お客様がスムーズに移行できるよう、私たちは全力でサポートいたします。以下のリソースをご利用いただけます：</p> \n<ul> \n <li><a href=\"https://docs.aws.amazon.com/quicksuite/latest/userguide/what-is.html\" rel=\"noopener noreferrer\" target=\"_blank\">Amazon Quick Suite User Guide</a>における詳細なドキュメント</li> \n <li><a href=\"https://aws.amazon.com/support\" rel=\"noopener noreferrer\" target=\"_blank\">AWS Support</a> を通じたテクニカルサポート</li> \n <li>AWS アカウントチームによるコンサルテーション</li> \n</ul> \n<h2>今後の展望</h2> \n<p> Quick Suite への進化は、意思決定とビジネス成果を導くために必要なコンテキストを提供する、新しい働き方を実現します。AI が組織でのインサイト発見と戦略的な意思決定の方法を変革し続ける中、Quick Suite は安全で実用的な前進の道筋を提供します。私たちは、お客様とこの旅を共にし、これらの機能を活用して組織全体の価値を引き出していく様子を見ることを楽しみにしています。</p> \n<p> BI の未来を体験する準備はできましたか？ Quick Suite の 30 日間無料トライアルを利用して、最大 25 ユーザーまでその機能を試すことができます。機能や料金について詳しく知るには <a href=\"https://aws.amazon.com/quicksuite/\" rel=\"noopener noreferrer\" target=\"_blank\">Amazon Quick Suite</a> をご覧いただくか、Quick Suite がお客様の組織のデータドリブンな意思決定をどのように変革できるかについて、AWS アカウントチームにお問い合わせください。</p> \n<h3>著者について</h3> \n<p><img alt=\"\" class=\"wp-image-4362 size-full alignleft\" height=\"133\" loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/d02560dd9d7db4467627745bd6701e809ffca6e3/2025/03/20/sinkoo-1.jpg\" width=\"100\"><strong>Sindhu Chandra</strong> は、AWS の Amazon Quick Suite のシニアプロダクトマーケティングマネージャーで、マーケティングとテクノロジーの分野で 10 年以上の経験を持っています。現職に就く前は、Amazon、Uber、Google などのテクノロジー企業でマーケティングの職務を歴任し、クロスチャネルマーケティング戦略を主導してきました。B2B マーケティングをより親しみやすくし、インクルーシブなマーケティング施策を推進することに情熱を注いでいます。仕事以外では、愛犬と遊んだり、さまざまな産地のコーヒーを淹れたりすることを楽しんでいます。</p>"
  },
  {
    "title": "新しい汎用 Amazon EC2 M8a インスタンスが利用可能になりました",
    "date": "2025-10-10T07:51:03.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/new-general-purpose-amazon-ec2-m8a-instances-are-now-available/",
    "content": "<p>10 月 8 日は、汎用 M インスタンスファミリーに最近追加された <a href=\"https://aws.amazon.com/ec2/\">Amazon Elastic Compute Cloud (Amazon EC2)</a> M8a インスタンスの提供開始についてお知らせしたいと思います。これらのインスタンスは、<a href=\"https://www.amd.com/en/products/processors/server/epyc/9005-series.html\">第 5 世代 AMD EPYC (コードネーム「Turin」) プロセッサ</a>を搭載しており、最大周波数は 4.5 GHz です。お客様は、M7a インスタンスよりも最大 30% 高いパフォーマンスと最大 19% 優れたコストパフォーマンスを期待できます。これらのインスタンスは、より広いメモリ帯域幅、改善されたネットワークスループットとストレージスループット、幅広い汎用ワークロードに対応する柔軟な設定オプションも提供します。</p> \n<p><strong><u>M8a の改善点<br> </u></strong>M8a インスタンスは、vCPU あたりのパフォーマンスが M7a インスタンスよりも最大 30% 優れているため、金融アプリケーション、ゲーム、レンダリング、アプリケーションサーバー、シミュレーションモデリング、中規模のデータストア、アプリケーション開発環境、キャッシュフリートなど、高パフォーマンスと高スループットのメリットを活用する必要がある用途に最適です。</p> \n<p>M7a インスタンスよりも 45% 広いメモリ帯域幅を提供し、インメモリデータベース、分散キャッシュ、リアルタイム分析を高速化します。</p> \n<p>I/O 要件の高いワークロードには、M8a インスタンスが最大 75 Gbps のネットワーク帯域幅と 60 Gbps の <a href=\"https://aws.amazon.com/ebs/\">Amazon Elastic Block Store (Amazon EBS)</a> 帯域幅を提供します。これは、前世代から 50% の向上です。これらの機能強化は、迅速なデータ転送と低レイテンシーのネットワーク通信が不可欠な最新のアプリケーションをサポートします。</p> \n<p>M8a インスタンスの各 vCPU は物理的な CPU コアに対応するものです。つまり、同時マルチスレッディング (SMT) は行われません。アプリケーションベンチマークでは、M7a インスタンスと比較した M8a インスタンスのパフォーマンスが、<a href=\"https://groovy-lang.org/\">GroovyJVM</a> の場合に最大 60%、<a href=\"https://cassandra.apache.org/_/index.html\">Cassandra</a> の場合に最大 39% 高速になっています。</p> \n<p>M8a インスタンスは、ネットワーク帯域幅と EBS 帯域幅間でリソースを割り当てる柔軟性を提供する<a href=\"https://docs.aws.amazon.com/ebs/latest/userguide/instance-bandwidth-configuration.html\">インスタンス帯域幅設定 (IBC)</a> をサポートしています。IBC は、ネットワーク帯域幅または EBS 帯域幅を最大 25% スケールし、データベースパフォーマンス、クエリ処理、ロギングの速度を向上させる柔軟性をお客様に提供します。</p> \n<p>M8a は、10 個の仮想化サイズと 2 つのベアメタルオプション (<strong>metal-24xl</strong> と <strong>metal-48xl</strong>) で利用でき、小規模なアプリケーションから大規模なエンタープライズワークロードにスケールするデプロイ選択肢を提供します。これらすべての改善は、すべてのインスタンスサイズ全体で低い仮想化オーバーヘッド、一貫的なパフォーマンス、高度なセキュリティを実現する <a href=\"https://aws.amazon.com/ec2/nitro/\"> AWS Nitro System</a> を基盤としています。&nbsp;これらのインスタンスは、機能の I/O をオフロードして加速する最新の第 6 世代 AWS Nitro Card を使用して構築されており、全体的なシステムパフォーマンスを向上させます。</p> \n<p>M8a インスタンスには複数のサイズがあり、最大で 192 個の vCPU と 768 GiB の RAM を備えています。詳しい仕様は次のとおりです。</p> \n<table style=\"border: 2px solid black;border-collapse: collapse;margin-left: auto;margin-right: auto\"> \n <tbody> \n  <tr style=\"border-bottom: 1px solid black;background-color: #e0e0e0\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>M8a</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px\"><strong>vCPU</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px\"><strong>メモリ (GiB)</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px\"><strong>ネットワーク帯域幅 (Gbps)</strong></td> \n   <td><strong>EBS 帯域幅 (Gbps)</strong></td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>medium</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">1</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">4</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 12.5</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 10</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>large</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">2</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">8</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 12.5</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 10</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">4</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">16</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 12.5</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 10</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>2xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">8</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">32</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 15</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 10</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>4xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">16</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">64</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 15</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 10</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>8xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">32</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">128</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">15</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">10</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>12xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">48</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">192</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">22.5</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">15</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>16xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">64</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">256</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">30</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">20</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>24xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">96</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">384</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">40</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">30</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>48xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">192</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">768</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">75</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">60</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>metal-24xl</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">96</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">384</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">40</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">30</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>metal-48xl</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">192</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">768</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">75</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">60</td> \n  </tr> \n </tbody> \n</table> \n<p>インスタンスのサイズと仕様の完全なリストについては、<a href=\"https://aws.amazon.com/ec2/instance-types/m8a\">Amazon EC2 M8a インスタンスページ</a>を参照してください。</p> \n<p><strong><u>M8a インスタンスを使用する状況<br> </u></strong>M8a は、コンピューティング、メモリ、ネットワークのバランスを取る必要がある汎用アプリケーションに最適です。M8a インスタンスは、予測可能なパフォーマンスと効率的なスケーリングが重要となる、ウェブやアプリケーションのホスティング、マイクロサービスアーキテクチャ、データベースに理想的なインスタンスです。</p> \n<p>これらのインスタンスは SAP 認定を受けており、金融アプリケーションやエンタープライズリソースプランニング (ERP) システムなどのエンタープライズワークロードにも最適です。コスト効率性と柔軟性が求められる開発環境やテスト環境に加えて、インメモリキャッシュや顧客関係管理 (CRM) でも同様の効果を発揮します。こうした汎用性を備えた M8a は、お客様がコストパフォーマンスを向上できるように支援しながら、幅広いワークロードをサポートします。</p> \n<p><strong><u>今すぐご利用いただけます<br> </u></strong>Amazon EC2 M8a インスタンスは、米国東部 (オハイオ)、米国西部 (オレゴン)、欧州 (スペイン) の各 <a href=\"https://docs.aws.amazon.com/glossary/latest/reference/glos-chap.html#region\">AWS リージョン</a>で 10 月 8 日からご利用いただけます。 M8a インスタンスは、<a href=\"https://aws.amazon.com/ec2/pricing/on-demand/\">オンデマンド</a>、<a href=\"https://aws.amazon.com/savingsplans/\">Savings Plans</a>、<a href=\"https://aws.amazon.com/ec2/spot/pricing/\">スポットインスタンス</a>としての購入が可能です。M8a インスタンスは<a href=\"https://aws.amazon.com/ec2/dedicated-hosts/pricing/\">専有ホスト</a>でも利用できます。詳細については、<a href=\"https://aws.amazon.com/ec2/pricing\">Amazon EC2 の料金ページ</a>をご覧ください。</p> \n<p>詳細については、<a href=\"https://aws.amazon.com/ec2/instance-types/m8a\">Amazon EC2 M8i インスタンスページ</a>をご覧ください。フィードバックは、<a href=\"https://repost.aws/tags/TAO-wqN9fYRoyrpdULLa5y7g/amazon-ec-2/\">AWS re:Post for EC2</a> に送信するか、通常の AWS サポート連絡先経由でお寄せください。</p> \n<p>– <a href=\"https://www.linkedin.com/in/zhengyubin714/\">Betty</a></p> \n<p>原文は<a href=\"https://aws.amazon.com/jp/blogs/aws/new-general-purpose-amazon-ec2-m8a-instances-are-now-available/\">こちら</a>です。</p>"
  },
  {
    "title": "新しいコンピューティング最適化 Amazon EC2 C8i および C8i-flex インスタンスのご紹介",
    "date": "2025-10-10T07:29:25.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/introducing-new-compute-optimized-amazon-ec2-c8i-and-c8i-flex-instances/",
    "content": "<p><a href=\"https://aws.amazon.com/pm/ec2/?trk=7c8639c6-87c6-47d6-9bd0-a5812eecb848&amp;sc_channel=el\">Amazon Elastic Compute Cloud (Amazon EC2)</a> メモリ最適化 <a href=\"https://aws.amazon.com/blogs/aws/best-performance-and-fastest-memory-with-the-new-amazon-ec2-r8i-and-r8i-flex-instances/\">R8i および R8i-flex インスタンス</a>、ならびに汎用 <a href=\"https://aws.amazon.com/blogs/aws/new-general-purpose-amazon-ec2-m8i-and-m8i-flex-instances-are-now-available/\">M8i および M8i-flex インスタンス</a>のリリースに続き、カスタムインテル Xeon 6 プロセッサを搭載し、持続的なオールコア 3.9 GHz ターボ周波数と 2:1 のメモリ対 vCPU 比を備えた、AWS でのみ利用可能なコンピューティング最適化 <a href=\"https://aws.amazon.com/ec2/instance-types/c8i/\">C8i および C8i-flex インスタンス</a>の一般提供の開始をお知らせします。これらのインスタンスは、クラウドにおける同等の Intel プロセッサの中でも最高のパフォーマンスと最速のメモリ帯域幅を提供します。</p> \n<p>C8i および C8i-flex インスタンスは、<a href=\"https://aws.amazon.com/ec2/instance-types/c7i/\">C7i および C7i-flex インスタンス</a>と比較して、最大 15% 優れた料金パフォーマンスと 2.5 倍のメモリ帯域幅を提供します。C8i および C8i-flex インスタンスは、C7i および C7i-flex インスタンスと比較して、NGINX ウェブアプリケーションで最大 60%、AI 深層学習レコメンデーションモデルで最大 40%、Memcached ストアで 35% 高速です。</p> \n<p>C8i および C8i-flex インスタンスは、ウェブサーバー、キャッシュ、Apache.Kafka、ElasticSearch、バッチ処理、分散分析、ハイパフォーマンスコンピューティング (HPC)、広告配信、高度にスケーラブルなマルチプレイヤーゲーム、動画エンコーディングなど、コンピューティングを多用するワークロードの実行に最適です。</p> \n<p>他の第 8 世代インスタンスと同様、これらのインスタンスは新しい第 6 世代 <a href=\"https://aws.amazon.com/ec2/nitro/\">AWS Nitro Card</a> を使用しており、前世代のインスタンスと比較してネットワークと <a href=\"https://aws.amazon.com/ebs/\">Amazon Elastic Block Storage (Amazon EBS)</a> の帯域幅が最大 2 倍増加しています。また、ネットワークと Amazon EBS 帯域幅の間で 25% の割り当て調整を行う帯域幅設定にも対応しており、データベースのパフォーマンス、クエリ処理、ログ記録速度が向上します。</p> \n<p><strong><u>C8i インスタンス</u></strong><br> C8i インスタンスは、基盤となる物理ハードウェアへの専用アクセスを提供するベアメタルインスタンスを含め、最大 384 個の vCPU と 768 TB のメモリを提供します。これらのインスタンスは、CPU ベースの推論や、継続的に最大インスタンスサイズまたは高い CPU を必要とする動画ストリーミングなど、コンピューティングを多用するワークロードの実行に役立ちます。</p> \n<p>C8i インスタンスの仕様は次のとおりです。</p> \n<table style=\"border: 2px solid black;border-collapse: collapse;margin-left: auto;margin-right: auto\"> \n <tbody> \n  <tr style=\"border-bottom: 1px solid black;background-color: #e0e0e0\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>インスタンスサイズ</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>vCPU</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>メモリ (GiB)</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>ネットワーク帯域幅 (Gbps)</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>EBS 帯域幅 (Gbps)</strong></td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i.large</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">2</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">4</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 12.5</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 10</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i.xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">4</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">8</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 12.5</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 10</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i.2xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">8</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">16</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 15</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 10</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i.4xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">16</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">32</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 15</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 10</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i.8xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">32</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">64</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">15</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">10</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i.12xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">48</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">96</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">22.5</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">15</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i.16xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">64</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">128</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">30</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">20</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i.24xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">96</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">192</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">40</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">30</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i.32xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">128</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">256</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">50</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">40</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i.48xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">192</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">384</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">75</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">60</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i.96xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">384</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">768</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">100</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">80</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i.metal-48xl</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">192</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">384</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">75</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">60</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i.metal-96xl</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">384</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">768</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">100</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">80</td> \n  </tr> \n </tbody> \n</table> \n<p><strong><u>C8i-flex インスタンス</u></strong><br> C8i-flex インスタンスは、C8i インスタンスの低コスト版であり、5% 低い料金で 5% 優れた料金パフォーマンスを実現しています。これらのインスタンスは、最新世代のパフォーマンスから恩恵を享受できるにかかわらず、すべてのコンピューティングリソースを完全に活用していないワークロード向けに設計されています。これらのインスタンスは、95% の確率で最大 CPU パフォーマンスを発揮できます。</p> \n<p>C8i-flex インスタンスの仕様は次のとおりです。</p> \n<table style=\"border: 2px solid black;border-collapse: collapse;margin-left: auto;margin-right: auto\"> \n <tbody> \n  <tr style=\"border-bottom: 1px solid black;background-color: #e0e0e0\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>インスタンスサイズ</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>vCPU</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>メモリ (GiB)</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>ネットワーク帯域幅 (Gbps)</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>EBS 帯域幅 (Gbps)</strong></td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i-flex.large</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">2</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">4</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 12.5</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 10</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i-flex.xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">4</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">8</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 12.5</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 10</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i-flex.2xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">8</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">16</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 15</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 10</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i-flex.4xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">16</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">32</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 15</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 10</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i-flex.8xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">32</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">64</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 15</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 10</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i-flex.12xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">48</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">96</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 22.5</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 15</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i-flex.16xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">64</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">128</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 30</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 20</td> \n  </tr> \n </tbody> \n</table> \n<p>現在、旧世代のコンピューティング最適化インスタンスを使用している場合は、アプリケーションやワークロードに変更を加えることなく、C8i-flex インスタンスを採用できます。</p> \n<p><strong><u>今すぐご利用いただけます</u></strong><br> Amazon EC2 C8i および C8i-flex インスタンスは、現在、米国東部 (バージニア北部)、米国東部 (オハイオ)、米国西部 (オレゴン)、欧州 (スペイン) の <a href=\"https://docs.aws.amazon.com/glossary/latest/reference/glos-chap.html#region\">AWS リージョン</a>でご利用いただけます。C8i および C8i-flex インスタンスは、<a href=\"https://aws.amazon.com/ec2/pricing/on-demand/?trk=cf96f8ec-de40-4ee0-8b64-3f7cf7660da2&amp;sc_channel=el\">オンデマンド</a>、<a href=\"https://aws.amazon.com/savingsplans/?trk=cc9e0036-98c5-4fa8-8df0-5281f75284ca&amp;sc_channel=el\">Savings Plan</a>、<a href=\"https://aws.amazon.com/ec2/spot/pricing/?trk=307341f6-3463-47d5-ba81-0957847a9b73&amp;sc_channel=el\">スポットインスタンス</a>として購入できます。C8i インスタンスは、<a href=\"https://aws.amazon.com/ec2/pricing/dedicated-instances/\">ハードウェア専有インスタンス</a>および<a href=\"https://aws.amazon.com/ec2/dedicated-hosts/pricing/\">専有ホスト</a>での利用も可能です。詳細については、<a href=\"https://aws.amazon.com/ec2/pricing\">Amazon EC2 の料金ページ</a>をご覧ください。</p> \n<p><a href=\"https://console.aws.amazon.com/ec2/?trk=769a1a2b-8c19-4976-9c45-b6b1226c7d20&amp;sc_channel=el\">Amazon EC2 コンソール</a>で C8i および C8i-flex インスタンスをお試しください。詳細については、<a href=\"https://aws.amazon.com/ec2/instance-types/c8i/\">Amazon EC2 C8i インスタンスのページ</a>をご覧ください。また、<a href=\"https://repost.aws/tags/TAO-wqN9fYRoyrpdULLa5y7g/amazon-ec-2\">AWS re:Post for EC2</a> に、または通常の AWS サポートの連絡先を通じて、ぜひフィードバックをお寄せください。</p> \n<p>– <a href=\"https://linkedin.com/in/channy/\">Channy</a></p> \n<p>原文は<a href=\"https://aws.amazon.com/jp/blogs/aws/introducing-new-compute-optimized-amazon-ec2-c8i-and-c8i-flex-instances/\">こちら</a>です。</p>"
  },
  {
    "title": "AWS IAM アイデンティティセンターが、保管中の暗号化のためにカスタマーマネージド KMS キーのサポートを開始",
    "date": "2025-10-10T07:20:22.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/aws-iam-identity-center-now-supports-customer-managed-kms-keys-for-encryption-at-rest/",
    "content": "<p>10 月 6 日より、独自の <a href=\"https://aws.amazon.com/kms/\">AWS Key Management Service (AWS KMS)</a> キーを使用して、<a href=\"https://aws.amazon.com/iam/identity-center/\">AWS IAM アイデンティティセンター</a>の組織インスタンスに保存されているユーザー属性やグループ属性などの ID データを暗号化できるようになりました。</p> \n<p>規制の厳しい業界で事業を展開している多くの組織は、暗号化キー管理を完全に制御する必要があります。アイデンティティセンターでは既に AWS 所有キーを使用して保管中のデータを暗号化していますが、監査やコンプライアンスのために独自の暗号化キーを管理する必要があるお客様もいます。</p> \n<p>このリリースにより、<a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html\">カスタマーマネージド KMS キー</a> (CMK) を使用して、アイデンティティセンターの保管中の ID データを暗号化できるようになりました。CMK を使用すると、作成、ローテーション、削除など、キーのライフサイクルを完全に制御できます。<a href=\"https://aws.amazon.com/kms/\">AWS Key Management Service (AWS KMS)</a> キーポリシーと IAM ポリシーを使用して、キーへのきめ細かなアクセスコントロールを設定できるため、認可されたプリンシパルのみが暗号化されたデータにアクセスできるようにするのに役立ちます。起動時には、CMK は IAM アイデンティティセンターインスタンスと同じ AWS アカウントおよびリージョンに存在する必要があります。アイデンティティセンターと KMS の統合により、キーの使用状況を監査するための詳細な <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-user-guide.html\">AWS CloudTrail</a> ログが提供され、規制コンプライアンス要件を遵守するのに役立ちます。</p> \n<p>アイデンティティセンターは、デプロイのニーズに合わせて、単一リージョンキーとマルチリージョンキーの両方をサポートしています。アイデンティティセンターインスタンスは現在単一のリージョンにのみデプロイできますが、会社のポリシーで単一リージョンキーに制限されていない限り、マルチリージョン AWS KMS キーを使用することをお勧めします。マルチリージョンキーは、各リージョンで独立したキーインフラストラクチャを維持しながら、リージョン間で一貫したキーマテリアルを提供します。これにより、暗号化戦略の柔軟性が高まり、デプロイが将来の変化にも対応できるようにするのに役立ちます。</p> \n<p><span style=\"text-decoration: underline\"><strong>始めましょう<br> </strong></span>CMK を使用してアイデンティティセンターの組織インスタンスの ID データを暗号化するとします。私の組織では、アイデンティティセンターを使用して、<a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/awsapps.html\">AWS マネージドアプリケーション</a> (<a href=\"https://aws.amazon.com/q/business/\">Amazon Q Business</a> や <a href=\"https://aws.amazon.com/athena\">Amazon Athena</a> など) へのアクセスを従業員に付与しています。</p> \n<p>現時点では、一部の AWS マネージドアプリケーションは、カスタマーマネージド KMS キーで設定されたアイデンティティセンターでは使用できません。互換性のあるアプリケーションのリストは常に更新されるため、「<a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/awsapps-that-work-with-identity-center.html\">AWS managed applications that you can use with Identity Center</a>」で最新情報をご覧ください。</p> \n<p>大まかなプロセスでは、まず AWS KMS で対称カスタマーマネージドキー (CMK) を作成する必要があります。このキーは、暗号化および復号オペレーション用に設定する必要があります。次に、アイデンティティセンター、AWS マネージドアプリケーション、管理者、およびアイデンティティセンターと IAM アイデンティティセンターサービス API にアクセスする必要がある他のプリンシパルにアクセスを付与するキーポリシーを設定します。キーにはポリシーを、IAM プリンシパルには IAM ポリシーを、それぞれアイデンティティセンターの使用方法に応じて定義する必要があります。<a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/identity-center-customer-managed-keys.html\">サービスドキュメントには、極めて一般的なユースケースをカバーするのに役立つ詳細が記載されています</a>。</p> \n<p>このデモは 3 つのパートに分かれています。まず、AWS KMS でカスタマーマネージドキーを作成し、アイデンティティセンターと AWS マネージドアプリケーションがそのキーを使用することを認可する許可を設定します。次に、AWS アプリケーション管理者など、別の AWS アカウントのキーを使用するプリンシパルの IAM ポリシーを更新します。最後に、アイデンティティセンターがそのキーを使用するように設定します。</p> \n<p><strong>パート 1: キーを作成して、許可を定義する</strong></p> \n<p>まず、AWS KMS で新しい CMK を作成しましょう。</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/07/04/2025-07-04_11-01-01.png\"><img loading=\"lazy\" class=\"aligncenter wp-image-97759\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/07/04/2025-07-04_11-01-01.png\" alt=\"AWS KMS、キーを作成する、パート 1\" width=\"800\" height=\"550\"></a></p> \n<p>キーは、アイデンティティセンターインスタンスと同じ AWS リージョンおよび AWS アカウントに存在する必要があります。AWS Organizations 内の組織の管理アカウントに、アイデンティティセンターインスタンスとキーを作成する必要があります。</p> \n<p>アイデンティティセンターインスタンスと同じリージョンで AWS Key Management Service (AWS KMS) コンソールに移動し、<strong>[キーを作成]</strong> を選択します。これでキー作成ウィザードが起動します。</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/07/04/2025-07-04_11-01-52.png\"><img loading=\"lazy\" class=\"aligncenter wp-image-97760\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/07/04/2025-07-04_11-01-52.png\" alt=\"AWS KMS、キーを作成する、パート 2\" width=\"800\" height=\"511\"></a></p> \n<p><strong>[ステップ 1 – キーを設定する]</strong> で、キータイプとして、[対称] (暗号化と復号の両方に使用される単一のキー) または [非対称] (暗号化/復号と署名/検証用のパブリックキーとプライベートキーのペア) を選択します。アイデンティティセンターでは、保管中の暗号化に対称キーが必要です。私は <strong>[対称]</strong> を選択します。</p> \n<p>キーの使用方法については、<strong>[暗号化および復号]</strong> を選択します。これにより、キーはデータの暗号化と復号にのみ使用されます。</p> \n<p><strong>[高度なオプション]</strong> の <strong>[キーマテリアルのオリジン]</strong> で <strong>[KMS – 推奨]</strong> を選択し、AWS KMS がキーマテリアルを作成および管理するようにします。</p> \n<p><strong>[リージョン]</strong> で、[シングルリージョンキー] または [マルチリージョンキー] を選択します。<strong>[マルチリージョンキー]</strong> を選択すると、キー管理者は、キーを他のリージョンにレプリケートできます。既に説明したように、アイデンティティセンターでは現時点ではこれは必要ありませんが、設定が将来の変化に対応できるようにするのに役立ちます。なお、シングルリージョンキーを作成した後で、マルチリージョンキーに変換することはできません (ただし、アイデンティティセンターによって使用されるキーを変更することは可能です)。</p> \n<p>その後、<strong>[次へ]</strong> を選択して、ラベルの追加、管理許可の定義、使用許可の設定、キー作成前の最終設定の確認などの追加の設定ステップに進みます。</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/07/04/2025-07-04_11-11-35.png\"><img loading=\"lazy\" class=\"aligncenter wp-image-97761\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/07/04/2025-07-04_11-11-35.png\" alt=\"AWS KMS、キーを作成する、パート 3\" width=\"800\" height=\"484\"></a></p> \n<p><strong>[ステップ 2 – ラベルを追加する]</strong> で、キーの <strong>[エイリアス]</strong> 名を入力し、<strong>[次へ]</strong> を選択します。</p> \n<p>このデモでは、<a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/identity-center-customer-managed-keys.html#choose-kms-key-policy-statements\">ドキュメント</a>で提供されているテンプレートを使用してポリシーステートメントを追加することで、キーポリシーを編集します。&nbsp;ステップ 3 とステップ 4 はスキップし、<strong>[ステップ 5 – キーポリシーを編集する]</strong> に進みます。</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/07/04/2025-07-04_11-47-58.png\"><img loading=\"lazy\" class=\"aligncenter wp-image-97786\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/07/04/2025-07-04_11-47-58.png\" alt=\"AWS KMS、キーを作成する、パート 5\" width=\"800\" height=\"517\"></a></p> \n<p>アイデンティティセンターでは、少なくともアイデンティティセンターとその管理者がキーを使用できるようにする許可が必要です。そのため、3 つのポリシーステートメントを追加します。1 つ目と 2 つ目はサービスの管理者を認可し、3 つ目はアイデンティティセンターサービス自体を認可します。</p> \n<pre><code class=\"lang-json\">{\n\t\"Version\": \"2012-10-17\",\n\t\"Id\": \"key-consolepolicy-3\",\n\t\"Statement\": [\n\t\t{\n\t\t\t\"Sid\": \"Allow_IAMIdentityCenter_Admin_to_use_the_KMS_key_via_IdentityCenter_and_IdentityStore\",\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Principal\": {\n\t\t\t\t\"AWS\": \"ARN_OF_YOUR_IDENTITY_CENTER_ADMIN_IAM_ROLE\"\n\t\t\t},\n\t\t\t\"Action\": [\n\t\t\t\t\"kms:Decrypt\",\n\t\t\t\t\"kms:Encrypt\",\n\t\t\t\t\"kms:GenerateDataKeyWithoutPlaintext\"\n\t\t\t],\n\t\t\t\"Resource\": \"*\",\n\t\t\t\"Condition\": {\n\t\t\t\t\"StringLike\": {\n\t\t\t\t\t\"kms:ViaService\": [\n\t\t\t\t\t\t\"sso.*.amazonaws.com\",\n\t\t\t\t\t\t\"identitystore.*.amazonaws.com\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"Sid\": \"Allow_IdentityCenter_admin_to_describe_the_KMS_key\",\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Principal\": {\n\t\t\t\t\"AWS\": \"ARN_OF_YOUR_IDENTITY_CENTER_ADMIN_IAM_ROLE\"\n\t\t\t},\n\t\t\t\"Action\": \"kms:DescribeKey\",\n\t\t\t\"Resource\": \"*\"\n\t\t},\n\t\t{\n\t\t\t\"Sid\": \"Allow_IdentityCenter_and_IdentityStore_to_use_the_KMS_key\",\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Principal\": {\n\t\t\t\t\"Service\": [\n\t\t\t\t\t\"sso.amazonaws.com\",\n\t\t\t\t\t\"identitystore.amazonaws.com\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t\"Action\": [\n\t\t\t\t\"kms:Decrypt\",\n\t\t\t\t\"kms:ReEncryptTo\",\n\t\t\t\t\"kms:ReEncryptFrom\",\n\t\t\t\t\"kms:GenerateDataKeyWithoutPlaintext\"\n\t\t\t],\n\t\t\t\"Resource\": \"*\",\n            \"Condition\": {\n    \t       \"StringEquals\": { \n                      \"aws:SourceAccount\": \"&lt;Identity Center Account ID&gt;\" \n\t           }\n            }\t\t\n\t\t},\n\t\t{\n\t\t\t\"Sid\": \"Allow_IdentityCenter_and_IdentityStore_to_describe_the_KMS_key\",\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Principal\": {\n\t\t\t\t\"Service\": [\n\t\t\t\t\t\"sso.amazonaws.com\",\n\t\t\t\t\t\"identitystore.amazonaws.com\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t\"Action\": [\n\t\t\t\t\"kms:DescribeKey\"\n\t\t\t],\n\t\t\t\"Resource\": \"*\"\n\t\t}\t\t\n\t]\n}</code></pre> \n<p>また、AWS マネージドアプリケーションの使用という私のユースケースを許可するために、ポリシーステートメントをさらに追加する必要があります。これらの 2 つのポリシーステートメントを追加して、AWS マネージドアプリケーションとその管理者が KMS キーを使用することを認可します。<a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/identity-center-customer-managed-keys.html#choose-kms-key-policy-statements\">このドキュメントには、追加のユースケースとそれぞれのポリシーがリストされています</a>。</p> \n<pre><code class=\"lang-json\">{\n    \"Sid\": \"Allow_AWS_app_admins_in_the_same_AWS_organization_to_use_the_KMS_key\",\n    \"Effect\": \"Allow\",\n    \"Principal\": \"*\",\n    \"Action\": [\n        \"kms:Decrypt\"\n    ],\n    \"Resource\": \"*\",\n    \"Condition\": {\n        \"StringEquals\" : {\n           \"aws:PrincipalOrgID\": \"MY_ORG_ID (format: o-xxxxxxxx)\"\n        },\n        \"StringLike\": {\n            \"kms:ViaService\": [\n                \"sso.*.amazonaws.com\", \"identitystore.*.amazonaws.com\"\n            ]\n        }\n    }\n},\n{\n   \"Sid\": \"Allow_managed_apps_to_use_the_KMS_Key\",\n   \"Effect\": \"Allow\",\n   \"Principal\": \"*\",\n   \"Action\": [\n      \"kms:Decrypt\"\n    ],\n   \"Resource\": \"*\",\n   \"Condition\": {\n      \"Bool\": { \"aws:PrincipalIsAWSService\": \"true\" },\n      \"StringLike\": {\n         \"kms:ViaService\": [\n             \"sso.*.amazonaws.com\", \"identitystore.*.amazonaws.com\"\n         ]\n      },\n      \"StringEquals\": { \"aws:SourceOrgID\": \"MY_ORG_ID (format: o-xxxxxxxx)\" }\n   }\n}</code></pre> \n<p>キーの使用を特定のアイデンティティセンターインスタンス、特定のアプリケーションインスタンス、または特定のアプリケーション管理者にさらに制限することもできます。<a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/advanced-kms-policy.html\">このドキュメントには、お客様のユースケース向けの高度なキーポリシーの例が記載されています</a>。</p> \n<p>許可セットの再作成時に IAM ロール名が変更されないようにするには、「<a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/referencingpermissionsets.html#custom-trust-policy-example\">Custom trust policy example</a>」で説明されている方法を使用します。</p> \n<p><strong>パート 2: IAM ポリシーを更新して、別の AWS アカウントからの KMS キーの使用を許可する</strong></p> \n<p>アイデンティティセンターの委任された管理者や AWS アプリケーション管理者など、別の AWS アカウントからアイデンティティセンターサービス API を使用するすべての IAM プリンシパルには、これらの API 経由での KMS キーの使用を許可する IAM ポリシーステートメントが必要です。</p> \n<p>新しいポリシーを作成し、ユースケースに関連する IAM ロールにそのポリシーをアタッチすることで、キーにアクセスするための許可を付与します。これらのステートメントを IAM ロールの既存の ID ベースのポリシーに追加することもできます。</p> \n<p>これを行うには、キーを作成した後、その ARN を見つけて、以下のテンプレートの <code>key_ARN</code> を置き換えます。その後、そのポリシーをマネージドアプリケーション管理者の IAM プリンシパルにアタッチします。このドキュメントでは、<a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/baseline-KMS-key-policy.html#baseline-kms-key-policy-statements-for-use-of-iam-identity-center-mandatory\">キーにアクセスするための許可をアイデンティティセンターの委任された管理者に付与する IAM ポリシー</a>についても説明しています。</p> \n<p>マネージドアプリケーション管理者向けの例を次に示します:</p> \n<pre><code class=\"lang-json\">{\n      \"Sid\": \"Allow_app_admins_to_use_the_KMS_key_via_IdentityCenter_and_IdentityStore\",\n      \"Effect\": \"Allow\",\n      \"Action\": \n        \"kms:Decrypt\",\n      \"Resource\": \"&lt;key_ARN&gt;\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"kms:ViaService\": [\n            \"sso.*.amazonaws.com\",\n            \"identitystore.*.amazonaws.com\"\n          ]\n        }\n      }\n    }</code></pre> \n<p><a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/baseline-KMS-key-policy.html\">ドキュメントでは、最も一般的なユースケース向けの IAM ポリシーテンプレートを共有しています</a>。</p> \n<p><strong>パート 3: キーを使用するように IAM アイデンティティセンターを設定する</strong></p> \n<p>CMK は、アイデンティティセンターの組織インスタンスを有効にする際に、または既存のインスタンスで設定できます。また、CMK を切り替えたり、AWS 所有キーに戻したりすることで、いつでも暗号化設定を変更できます。</p> \n<p>KMS キーの許可を正しく設定しないと、アイデンティティセンターの運用が中断され、アイデンティティセンターを通じた AWS マネージドアプリケーションおよびアカウントへのアクセスが中断される可能性があることにご留意ください。この最後のステップに慎重に進み、ドキュメントをよく読み、理解するようにしてください。</p> \n<p>CMK を作成して設定したら、アイデンティティセンターを有効にする際に <strong>[高度な設定]</strong> でその CMK を選択できます。</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/06/25/2025-06-25_10-39-53.png\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-97502\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/06/25/2025-06-25_10-39-53.png\" alt=\"CMK 設定を使用した IDC\" width=\"800\" height=\"583\"></a></p> \n<p>AWS マネジメントコンソールを使用して既存のアイデンティティセンターインスタンスで CMK を設定するには、まず <a href=\"https://console.aws.amazon.com\">AWS マネジメントコンソール</a>のアイデンティティセンターのセクションに移動します。そこで、ナビゲーションペインから <strong>[設定]</strong> を選択し、<strong>[管理]</strong> タブを選択して、<strong>[IAM アイデンティティセンターの保管中のデータの暗号化用のキー]</strong> セクションで <strong>[暗号化を管理]</strong> を選択します。</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/06/25/2025-06-25_15-04-27.png\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-97503\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/06/25/2025-06-25_15-04-27.png\" alt=\"既存の IDC 上のキーの変更\" width=\"800\" height=\"545\"></a></p> \n<p>いつでも、同じ AWS アカウントから別の CMK を選択したり、AWS マネージドキーに切り替えて戻したりできます。</p> \n<p><strong>[保存]</strong> を選択すると、キーの変更プロセスが完了するまで数秒かかります。移行中もすべてのサービス機能は中断なく使用できます。何らかの理由でアイデンティティセンターが新しいキーにアクセスできない場合は、エラーメッセージが返され、アイデンティティセンターは引き続き現在のキーを使用し、既に暗号化で使用されている暗号化メカニズムで ID データを暗号化し続けます。</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/06/25/2025-06-25_15-04-43.png\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-97504\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/06/25/2025-06-25_15-04-43.png\" alt=\"IDC 上の CMK、新しいキーを選択\" width=\"400\" height=\"246\"></a></p> \n<p><span style=\"text-decoration: underline\"><strong>留意事項<br> </strong></span>作成した暗号化キーは、アイデンティティセンターの重要なコンポーネントとなります。保管中の ID 属性を暗号化するために独自のマネージドキーを使用することを選択する場合は、次の点を確認する必要があります。</p> \n<ul> \n <li>KMS キーを使用するために<a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/baseline-KMS-key-policy.html\">必要な許可</a>を設定しましたか? 適切な許可がない場合、CMK を有効にすると失敗したり、IAM アイデンティティセンターの管理や AWS マネージドアプリケーションが中断したりする可能性があります。</li> \n <li>AWS マネージドアプリケーションが CMK キーと互換性があることを確認しましたか? 互換性のあるアプリケーションの一覧については、「<a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/awsapps-that-work-with-identity-center.html\">AWS managed applications that you can use with IAM Identity Center</a>」をご覧ください。 CMK と互換性のない AWS マネージドアプリケーションによって使用されるアイデンティティセンターのために CMK を有効にすると、それらのアプリケーションの運用が中断されます。互換性のないアプリケーションがある場合は、続行しないでください。</li> \n <li>組織は、アイデンティティセンターおよび Identity Store API を利用するために追加の IAM ロール設定を必要とする AWS マネージドアプリケーションを使用していますか? 既にデプロイされているこのような各 AWS マネージドアプリケーションについて、マネージドアプリケーションのユーザーガイドを読み、IAM アイデンティティセンターの使用のための、更新された KMS キーの許可を確認し、指示に従ってそれらの許可を更新して、アプリケーションが中断しないようにしてください。</li> \n <li>簡潔にするために、この記事の KMS キーポリシーステートメントでは、<a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/encryption-at-rest.html#iam-identity-center-encryption-context\">暗号化コンテキスト</a>を省略しています。暗号化コンテキストを使用すると、<a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/advanced-kms-policy.html#using-encryption-context-to-restrict-access\">特定のインスタンスを含むアイデンティティセンターへの KMS キーの使用を制限</a>できます。本番のシナリオでは、アイデンティティセンターに次のような条件を追加できます: <pre><code class=\"lang-json\">\"Condition\": {\n   \"StringLike\": {\n      \"kms:EncryptionContext:aws:sso:instance-arn\": \"${identity_center_arn}\",\n      \"kms:ViaService\": \"sso.*.amazonaws.com\"\n    }\n}</code></pre> <p>あるいは、Identity Store に次のような条件を追加できます:</p> <pre><code class=\"lang-json\">\"Condition\": {\n   \"StringLike\": {\n      \"kms:EncryptionContext:aws:identitystore:identitystore-arn\": \"${identity_store_arn}\",\n      \"kms:ViaService\": \"identitystore.*.amazonaws.com\"\n    }\n}</code></pre> </li> \n</ul> \n<p><span style=\"text-decoration: underline\"><strong>料金と利用可能なリージョン<br> </strong></span>キーストレージと API の使用には、AWS KMS の標準料金が適用されます。アイデンティティセンターは引き続き追加料金なしでご利用いただけます。</p> \n<p>この機能は、すべての AWS 商用リージョン、AWS GovCloud (米国)、および AWS 中国リージョンでご利用いただけます。詳細については、「<a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/encryption-at-rest.html\">IAM アイデンティティセンターユーザーガイド</a>」にアクセスしてください。</p> \n<p>セキュリティとコンプライアンスの要件を満たすために、この新しい機能をどのように使用するのかについて、ぜひお聞かせください。</p> \n<p><a href=\"https://linktr.ee/sebsto\">– seb</a></p> \n<p>原文は<a href=\"https://aws.amazon.com/jp/blogs/aws/aws-iam-identity-center-now-supports-customer-managed-kms-keys-for-encryption-at-rest/\">こちら</a>です。</p>"
  },
  {
    "title": "Amazon Bedrockを活用したAWS サポート問い合わせ内容の自動集約ソリューションの実装",
    "date": "2025-10-09T09:55:26.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/jaldx-solutions-awssupport-bedrock/",
    "content": "<p>本稿は、JALデジタル株式会社システムマネジメント本部ハイブリッドクラウド基盤部クラウド基盤運営グループの梅本様、北様からご寄稿いただきました。</p> \n<h2>はじめに</h2> \n<p>JALデジタル株式会社のプラットフォームチームでは、JALグループのITシステムとして必要な設計・運用を満たすためのAWSアカウントを「<a href=\"https://d1.awsstatic.com/case-studies/jp/pdf/JAL.pdf\" target=\"brank\" rel=\"noopener\">CIEL/S</a>」(※1)として提供しています。<br> 今回私たちのチームでは、複数のAWSアカウントにおける AWS サポートとのやり取りを組織全体で効率的に活用するため、Amazon Bedrock を活用したナレッジ集約のソリューションを開発しました。<br> 本記事では、AWS サポート問い合わせ内容の自動収集、AI要約、ServiceNow（※2）への連携を実現したアーキテクチャについて解説します。<br> ※1：リンク先の資料内におけるJALインフォテックは2025年4月、JALデジタルに社名変更しています。<br> ※2：JALグループではITSMツールとしてServiceNowを利用しています。</p> \n<h2>導入背景</h2> \n<p>現在JALグループで利用しているAWSアカウント数は数百アカウントあり、エンタープライズサポートを活用して24時間365日の運用を実現しています。しかし、利用していく中でいくつかの課題が発生しました。</p> \n<ul> \n <li>アカウントの制約<br> 各アカウントから行った問い合わせ内容は、そのアカウントでしか閲覧もできません。そのため、複数のAWSアカウントでのサポート問い合わせ内容が分散することになり、組織全体での知見共有が困難となっていました。また、私たちのチームに「○○という内容で過去に問い合わせしているアカウントはいないか」と質問があっても、一元管理できていないため探すのが困難でした。 </li> \n <li>ナレッジ共有の壁<br> 問い合わせした内容をドキュメント化して共有する場合、CIEL/SのAWSアカウント全体で平均60件/月の問い合わせが発生しており、それらを手動でナレッジとして作成することはコストがかかりすぎてしまいます。また問い合わせ履歴が多くなってしまったサポートケースをそのまま転記するだけでは、読み手の負担も大きいためある程度要約をする必要がありますが、要約作成もナレッジ化のハードルとなっていました。 </li> \n <li>AWS サポートケース保管期限の制約<br> 解決から２年経過した問い合わせはAWSコンソール上から削除されるため、それ以上過去に遡って探すことができませんでした。 </li> \n</ul> \n<h2>ソリューション概要</h2> \n<p>上記課題を解決するために、自動的にAWS サポートケース の集約と Amazon Bedrock を活用した問い合わせ内容の要約作成を行うソリューションの開発を行いました。開発したソリューションは、2種類のAWSアカウントと、3つの主要なコンポーネントで構成されています。</p> \n<h3>AWSアカウントの種類</h3> \n<ol> \n <li>集約実行アカウント<br> 問い合わせ内容を集約し、ServiceNowに連携するAWSアカウント </li> \n <li>集約対象アカウント<br> 問い合わせを集約させたいAWSアカウント </li> \n</ol> \n<h3>コンポーネント</h3> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/08/29/jaldx-solutions-awssupport-bedrock1.png\" alt=\"コンポーネント\"></p> \n<ol> \n <li>既存の AWS サポートケース の集約（集約実行アカウント） \n  <ul> \n   <li>本ソリューション導入前に解決済みとなっている AWS サポートケース を集約させるための処理</li> \n   <li>Amazon Bedrockを利用して問い合わせ内容の要約を作成</li> \n  </ul> </li> \n <li>新規の AWS サポートケース の集約（集約実行アカウント） \n  <ul> \n   <li>本ソリューション導入後に解決済みとなった AWS サポートケース を自動で集約させるための処理</li> \n   <li>Amazon Bedrockを利用して問い合わせ内容の要約を作成</li> \n   <li>集約した問い合わせをServiceNowに連携する処理</li> \n  </ul> </li> \n <li>AWS サポートケース の ResolveCase を検知（集約対象アカウント） \n  <ul> \n   <li>集約対象AWSアカウントで解決済みとなった AWS サポートケース を集約実行アカウントに連携する処理</li> \n   <li>AWS Cloudformation StackSets を利用して複数AWSアカウントに Amazon EventBridge Rule を展開</li> \n  </ul> </li> \n <li>AWS サポートケースの検索と表示（ServiceNow） \n  <ul> \n   <li>集約実行アカウントから連携された問い合わせの表示</li> \n   <li>AWSサポートケースの内容検索</li> \n  </ul> </li> \n</ol> \n<h3>アーキテクチャ詳細</h3> \n<p>既存の AWS サポートケース の集約の処理については、一度のみの処理となるため、メインとなる新規の AWS サポートケース の集約について詳細を解説します。</p> \n<p>Step 1: サポートケースが解決したイベント検知（集約対象AWSアカウント）</p> \n<ul> \n <li>集約実行アカウントの Event Bus をターゲットとした Amazon EventBrige Rule を作成します</li> \n <li>AWS サポートの解決処理をトリガーとして、Amazon EventBridge Ruleのイベントパターンに定義します</li> \n</ul> \n<pre>\n\t<code>\n{\n  \"detail-type\": [\"Support Case Update\"],\n  \"source\": [\"aws.support\"],\n  \"detail\": {\n    \"communication-id\": [\"\"],\n    \"event-name\": [\"ResolveCase\"]\n  }\n}\n\t</code>\n</pre> \n<p>Step 2: Step 1 の検知を元にLambdaを実行（集約実行AWSアカウント）</p> \n<ul> \n <li>集約対象AWSアカウントに対して、AWS Support API (<a href=\"https://docs.aws.amazon.com/ja_jp/awssupport/latest/APIReference/API_DescribeCases.html\" target=\"brank\" rel=\"noopener\">DescribeCases</a>、<a href=\"https://docs.aws.amazon.com/ja_jp/awssupport/latest/APIReference/API_DescribeSeverityLevels.html\" target=\"brank\" rel=\"noopener\">DescribeSeverityLevels</a>、<a href=\"https://docs.aws.amazon.com/ja_jp/awssupport/latest/APIReference/API_DescribeServices.html\" target=\"brank\" rel=\"noopener\">DescribeServices</a>、<a href=\"https://docs.aws.amazon.com/ja_jp/awssupport/latest/APIReference/API_DescribeCommunications.html\" target=\"brank\" rel=\"noopener\">DescribeCommunications</a>)を実行してサポートケース情報を取得</li> \n <li>Amazon Bedrock API (<a href=\"https://docs.aws.amazon.com/ja_jp/bedrock/latest/APIReference/API_runtime_Converse.html\" target=\"brank\" rel=\"noopener\">Converse</a>) を実行し サポートケース会話情報を要約</li> \n <li>Amazon DynamoDB に登録</li> \n</ul> \n<p>Step 3: ServiceNow連携（集約実行AWSアカウント）</p> \n<ul> \n <li>DynamoDB Stream から AWS Lambda 関数を実行 \n  <ul> \n   <li>ServiceNow への認証処理</li> \n   <li>ServiceNow への記事の登録処理の実行</li> \n  </ul> </li> \n</ul> \n<p>①AWS サポートケースとServiceNow上のナレッジとのマッピング<br> <img src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/08/29/jaldx-solutions-awssupport-bedrock3.png\" alt=\"AWS サポートケースとServiceNow上のナレッジとのマッピング\"></p> \n<p>②ServiceNow上でナレッジ検索する際イメージ<br> <img src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/08/29/jaldx-solutions-awssupport-bedrock2.png\" alt=\"ServiceNow上でナレッジ検索する際イメージ\"></p> \n<h2>実装ポイント</h2> \n<ul> \n <li>Amazon EventBridgeのリージョン制約対応<br> AWS サポートは us-east-1 リージョンのグローバルリソースであるため、EventBridge Rule の配置および Lambda 関数のデプロイも us-east-1 にまとめることが推奨されます。 </li> \n <li>セキュリティ権限の最小化<br> 各AWSアカウントに必要な IAMロール・ポリシーは最小権限の原則に従い、AWS サポートケースの読み取り権限や EventBridge Rule の作成権限だけに限定することで安全性を確保してください。 </li> \n <li>システムプロンプトの設計<br> 読み手が短時間で問題の本質と解決策を把握できるよう、要約生成のためのプロンプトは、以下のポイントを押さえて設計しています。<p></p> \n  <ul> \n   <li>ユーザーが直面した問題、サポートの具体的な解決策、成功のための考慮事項を明確に区別して要約させる</li> \n   <li>日本語で簡潔に300文字以内に収める文字数制限を設定し、不要な情報を排除</li> \n   <li>「問い合わせ内容」「解決策」「考慮事項」という出力フォーマットを厳格に指定し、一貫性のある要約を実現</li> \n  </ul> </li> \n <li>ナレッジ格納先にServiceNowを選定 \n  <ul> \n   <li>本ソリューション実装前から、プラットフォームに関するナレッジを ServiceNow 上に乗せていた</li> \n   <li>標準となるナレッジの型があり、UI を一から作成する必要が無い</li> \n   <li>検索機能も ServiceNow 標準のものを利用できる(AIを用いた検索等は今後実装予定)</li> \n  </ul> </li> \n <p> ※AWS Support APIの利用条件<br> AWS Support APIの利用にはビジネスサポート以上のサポートプラン（ビジネス、エンタープライズ On-Ramp、エンタープライズ）が必要です。JALグループではエンタープライズサポートを利用しているため、本ソリューションで必要となるAWS Support APIの全機能を活用することができます。 </p>\n</ul> \n<h2>導入効果</h2> \n<p>本ソリューションの導入により、以下の効果を実現しました。</p> \n<ol> \n <li>ナレッジ共有の効率化<br> 複数アカウントの問い合わせ内容を一元管理することで、組織全体の知見を活用できるようになりました。またAI要約を入れることで、すべてのやり取りを読む前に自分たちが探している情報かどうか判断することができるようになりました。 </li> \n <li>運用工数の削減<br> 手動でのドキュメントや要約作成が不要になることで、ナレッジ作成に伴う運用コストを大幅に削減させることができました。また ServiceNow への自動連携により転記作業を削減した上で、解決済みになった問い合わせをリアルタイムでナレッジ化することが可能になりました。 </li> \n <li>問題解決の迅速化<br> 一元管理により、各アカウントの担当者が組織全体の知見を活用して、調べたい情報や類似事例を直接検索-閲覧できるようになりました。これにより、プラットフォームチームやAWSサポートに問い合わせて回答を待つ時間を省略し、素早い問題解決が可能になりました。 </li> \n</ol> \n<h2>まとめ</h2> \n<p>AWS Support APIを利用した問い合わせ内容の取得と、Amazon Bedrock を活用した問い合わせ内容の要約作成を組み合わせることで、組織全体のナレッジマネジメントを大幅に改善することができました。AWS Lambda、 Amazon EventBridge、Amazon DynamoDB などAWSのマネージドサービスを最大限に活用、AWS利用料を最小限に抑えるアーキテクチャを実現しました。<br> 今後は、要約精度の向上や、より高度な分析機能の追加を検討しており、継続的な改善を進めていく予定です。</p> \n<hr> \n<h2>著者略歴</h2> \n<div class=\"blog-author-box\"> \n <div class=\"blog-author-image\"> \n  <img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/09/19/jaldx-solutions-awssupport-bedrock_writer1.png\" alt=\"著者\" width=\"195\" height=\"197\"> \n </div> \n <p> <strong><a href=\"https://www.jaldx.co.jp/\">JALデジタル株式会社</a></strong><br> <strong>システムマネジメント本部ハイブリッドクラウド基盤部クラウド基盤運営グループ</strong><br> <strong>梅本征宏</strong><br> 2019年入社　旅客系システムの開発・維持管理業務を担当。<br> 2022年に現部署に異動して以降、Platform Engineeringを推進。 </p>\n</div> \n<div class=\"blog-author-box\"> \n <div class=\"blog-author-image\"> \n  <img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/09/19/jaldx-solutions-awssupport-bedrock_writer2.png\" alt=\"著者\" width=\"195\" height=\"197\"> \n </div> \n <p> <strong><a href=\"https://www.jaldx.co.jp/\">JALデジタル株式会社</a></strong><br> <strong>システムマネジメント本部ハイブリッドクラウド基盤部クラウド基盤運営グループ</strong><br> <strong>北修哉</strong><br> 2022年入社　顧客系システムの開発を担当。<br> 2024年に現部署に異動し、プラットフォームチームの運用高度化を推進。 </p>\n</div>"
  },
  {
    "title": "AWS PrivateLink を使用したセキュアな SAP HANA Cloud 接続",
    "date": "2025-10-09T09:38:04.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/secure-sap-hanacloud-connectivity-using-aws-privatelink/",
    "content": "<h2><strong>はじめに</strong></h2> \n<p>データドリブンエンタープライズの環境では、組織は 2 つの重要な要件を満たすデータベースソリューションを必要としています。1 つは、トランザクション処理と分析処理の両方のワークロードを扱える高性能性、もう 1 つはセキュリティとコンプライアンス要件への適合です。AWS 上で運用される <a href=\"https://www.sap.com/sea/products/data-cloud/hana.html\">SAP HANA Cloud</a> は、<a href=\"https://www.sap.com/products/technology-platform.html\">SAP Business Technology Platform（ SAP BTP ）</a>のサービスの一つであり、フルマネージド型のクラウドネイティブな Database-as-a-Service として、これらの要件に応えます。</p> \n<p>SAP HANA Cloud は主に 2 つの用途で活用されています。1つは、ERP、CRM、HR、ロジシティックスなどの基幹システムを単一の高速プラットフォームで支えること。もう 1 つは、高度な分析とデータアプリケーションを通じて、実践的なビジネスイノベーションを推進・支援することです。また、SAP HANA Cloud は、SAP Analytics Cloud、SAP Datasphere、SAP Cloud Application Programming Model（CAP）で開発されたアプリケーションなどの、様々な SAP BTP サービスの基盤でもあります。</p> \n<p>このブログでは、AWS PrivateLink を通じて SAP HANA Cloud のセキュリティと接続性を強化することにフォーカスし、高性能と信頼性を維持しながらプライベートで安全なデータベースアクセスを必要とする組織の重要なニーズに対応します。</p> \n<h2><strong>AWS が SAP HANA Cloud の稼働基盤として選ばれた理由</strong></h2> \n<p>SAP HANA Cloud は&nbsp;<a href=\"https://news.sap.com/2023/11/sap-hana-cloud-now-supports-aws-graviton/\">AWS Graviton プロセッサーによって対応しており、分析ワークロードで計算性能が最大 30% 向上しを提供し、計算コストを 15% 削減し、同等の EC2 インスタンスと比較して最大 60% 消費エネルギーを抑えることができます</a>。AWS Graviton ベースのインスタンスに移行することで、SAP は SAP HANA Cloud ワークロードの計算カーボンフットプリントを約 45% 削減できると見込んでおり、炭素排出量削減を支援する Amazon の The Climate Pledge の署名企業としての取り組みを支持します。SAP は将来的に AWS Graviton の使用を拡大し、これらの性能向上、コスト削減、エネルギー効率を継続的に活用する計画です。したがって、AWS 上の SAP HANA Cloud を使用するお客様は、性能向上のメリットを享受しながら、カーボンフットプリントを削減も実現できます。</p> \n<h2><strong>AWS 上の SAP HANA Cloud への接続</strong></h2> \n<p>SAP HANA Cloud に接続する際、オンプレミスまたは他のクラウド環境にあるクライアントアプリケーションやユーザーは、インターネットアクセス可能なエンドポイントを通じてパブリック API を使用してデータベースにセキュアにアクセスできます。</p> \n<p style=\"text-align: center\"><a href=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_01.png\"><img loading=\"lazy\" class=\"size-full wp-image-8523 aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_01.png\" alt=\"図1：デフォルトのパブリックエンドポイント経由でのSAP HANA Cloudへの接続\" width=\"529\" height=\"243\"></a>図1：デフォルトのパブリックエンドポイント経由でのSAP HANA Cloudへの接続</p> \n<p>金融サービス、ヘルスケア、政府機関などの規制産業のお客様で、HIPAA、EU/US Privacy Shield、PCI DSS などの規制により、パブリックエンドポイントの使用が制限される場合があります。この場合、SAP HANA Cloud と AWS PrivateLink を組み合わせることをお勧めします。これにより、AWS の安全なネットワークインフラストラクチャを活用しながら、データベースとアプリケーション間の安全かつプライベートな通信を実現できます。また、プライベートIPアドレス範囲（RFC 1918）を使用することで、サービスへの攻撃リスクが低減できます。</p> \n<p>このブログでは、AWS PrivateLink を使用したプライベート接続オプションを活用して、SAP HANA Cloud のデータ転送時のセキュリティを強化する方法について解説します。PrivateLink は、AWS 環境と SAP HANA Cloud 間の安全でプライベートなネットワーク接続を確立でき、パブリックインターネットへの通信を回避し、不正アクセスのリスクを抑制することができます。</p> \n<h2>AWS PrivateLink とは</h2> \n<p><a href=\"https://aws.amazon.com/jp/privatelink/\" target=\"_blank\" rel=\"noopener\">AWS PrivateLink</a> を使うことにで、AWSサービス（ネットワーク、コンピューティング、サーバーレスアプリケーション、AI など）と SAP BTP サービス間の通信をインターネット経由せず、プライベート接続を実現できます。また、AWS PrivateLink を使用して、Direct Connect または VPN 経由で Amazon Virtual Private Cloud（VPC）に接続されたオンプレミスネットワーク間の安全でプライベートな接続を提供することもでき、パブリックネットワークやIPアドレスを完全に回避できます。</p> \n<p>AWS PrivateLink により、異なるアカウントやVPC間でのサービス接続が簡単になり、ネットワークアーキテクチャを大幅に簡素化します。VPC 内のプライベート IP アドレスを持つ Elastic Network Interface であるインターフェースエンドポイント経由で、AWS サービス、他の AWS アカウントで稼働しているサービス（エンドポイントサービス）、AWS Marketplace パートナーサービスに接続できます。</p> \n<p>インターフェースエンドポイントは、VPC のサブネット内の Elastic Network Interface と IP アドレスを使用して、VPC 内に直接作成されます。プロバイダーとコンシューマーは、IPアドレスの重複を避けるためにネットワークセグメントや CIDR ブロックを調整する必要がありません。VPC ピアリングや AWS Transit Gateway 経由の接続は通信に必要ありません。セキュリティグループを関連付け、AWS サービスのインターフェースエンドポイントにエンドポイントポリシーを設定することで、指定されたサービスへのアクセスを制御できます。AWS PrivateLink を使用すると、<a href=\"https://docs.aws.amazon.com/ja_jp/vpc/latest/privatelink/privatelink-access-aws-services.html\" target=\"_blank\" rel=\"noopener\">AWS サービス</a>や他の VPC が提供する他のサービスに、AWS ネットワーク内のプライベート接続を通じて安全にアクセスできます。すべてのネットワークトラフィックはグローバル AWS バックボーン上に留まり、パブリックインターネットを経由することはありません。</p> \n<p style=\"text-align: center\"><a href=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_02.png\"><img loading=\"lazy\" class=\"size-full wp-image-8524 aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_02.png\" alt=\"図2：AWS PrivateLink経由でのSAP HANA Cloudへの接続\" width=\"771\" height=\"226\"></a>図2：AWS PrivateLink 経由での SAP HANA Cloud への接続</p> \n<p>SAP HANA Cloudと AWS PrivateLink との接続するメリットをより理解するために、実際のシナリオでそのメリットを示すいくつかの実用的なユースケースを探ってみましょう。</p> \n<h2>SAP HANA Cloud と AWS PrivateLink を使うユースケース</h2> \n<p>データセキュリティが重要なビジネス環境において、AWS PrivateLink の実装は、データ転送中の機密情報を保護するために不可欠です。AWS のインフラストラクチャが提供するプライベート IP エンドポイントサービスは、重要なセキュリティレイヤーとして機能し、ビジネスへ重大な影響をもたらす可能性のあるセキュリティ侵害を防ぐのに役立ちます。この統合は、現代のクラウドアーキテクチャの複雑な要件に対応するエンタープライズクラスのセキュリティソリューションを提供することに対する AWS のコミットメントを示しています。</p> \n<h3>ユースケース 1 – SAP HANA Cloud 管理アクセスセキュリティ</h3> \n<p>SAP HANA Cloud PrivateLink を実装する重要なユースケースの 1 つは、安全なデータベースアクセスへの対応です。企業の環境では、オフィスで働くデータベース管理者と開発者は、テーブル管理、メンテナンス、開発タスクなどの重要タスクを実行するために SAP HANA Cloud への定期的なアクセスが必要です。これらの技術者は、一般ユーザーとは異なり、タスクに必要な広範なデータベース権限を付与されているため、接続セキュリティが特に重要になります。</p> \n<p>図3に示すように、<strong>AWS PrivateLinkを使用した SAP HANA Cloud </strong>は、組織が機密データの転送をプライベートネットワークでのみに制限できるようにする完璧なソリューションを提供します。データベース操作へのプライベートアクセスは、運用効率を維持しながらパブリック IP を使わず、厳格なアクセス制御を通じて組織のセキュリティを強化します。</p> \n<p style=\"text-align: center\"><a href=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_03.png\"><img loading=\"lazy\" class=\"size-full wp-image-8526 aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_03.png\" alt=\"図3：エンタープライズグレードのSAP HANA Cloud管理アクセスセキュリティ\" width=\"863\" height=\"273\"></a>図3：SAP HANA Cloud 管理アクセスセキュリティ</p> \n<h3>ユースケース 2 – セキュアなデータプラットフォーム統合：SAP HANA Cloud と AWS サービス</h3> \n<p>SAP HANA Cloud と AWS PrivateLink の重要なユースケースは、AWS 上でデータプラットフォームを構築し、SAP HANA Cloud データを分析エコシステムに統合するケースです。AWS データプラットフォーム内で SAP HANA Cloud データにアクセスするには、主に2つの方法があります。AWS Glue ETL ジョブを使用してデータを抽出しAmazon S3 にロードする方法、またはフェデレーションクエリに Amazon Athena SAP HANA コネクタを使用する方法です。両方のアプローチには、AWS サービスと SAP HANA Cloud 間の安全で信頼性の高い接続が必要です。</p> \n<p>これらのデータ統合パターンを実装する際、機密ビジネスデータがシステム間で転送されるため、セキュリティが重要になります。図4は、AWS PrivateLinkが必要なセキュアな接続レイヤーを提供することを示しています。AWS サービス（AWS Glue や Amazon Athena など）と SAP HANA Cloud 間のすべてのデータ転送とクエリがプライベートネットワークチャネルを介して行われ、パブリックインターネットへの通信を介さず、エンタープライズデータ統合シナリオの厳格なセキュリティ要件を満たします。</p> \n<p style=\"text-align: center\"><a href=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_04.png\"><img loading=\"lazy\" class=\"size-full wp-image-8527 aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_04.png\" alt=\"図4：セキュアなデータプラットフォーム統合：SAP HANA CloudとAWSサービス\" width=\"904\" height=\"396\"></a>図4：セキュアなデータプラットフォーム統合：SAP HANA Cloud と AWS サービス</p> \n<h2>AWS PrivateLink を使用した SAP HANA Cloud の設定方法</h2> \n<p>ユースケース 1 のエンタープライズグレードの SAP HANA Cloud アクセスの設定手順を説明します。このブログでは、設定について <a href=\"https://help.sap.com/docs/hana-cloud/sap-hana-cloud-administration-guide/sap-hana-cloud-private-link\" target=\"_blank\" rel=\"noopener\">SAP HANA Cloud 管理ガイド</a>を参照しました。この設定は SAP BTP 有料ティアアカウントで利用可能です。このブログ執筆時点では、データレイクインスタンス用の SAP HANA Cloud PrivateLink はAWS でのみ利用可能であり、<a href=\"https://help.sap.com/docs/hana-cloud/sap-hana-cloud-administration-guide/sap-hana-database-private-link-endpoint-service\" target=\"_blank\" rel=\"noopener\">SAP HANA Cloud PrivateLink ドキュメント</a>に記載されているように、リージョン内の接続のみをサポートしています。以下は設定手順の概要です。</p> \n<ol> \n <li>SAP HANA Cloud で AWS PrivateLink Endpoint ID を有効化</li> \n <li>AWS VPC で VPC エンドポイントを設定</li> \n <li>AWS VPC エンドポイントを HANA Cloud インスタンスの許可リストに追加</li> \n <li>Amazon Route53 でプライベートホストゾーンを設定</li> \n <li>VPC 内から HANA Cloud へのプライベートルーティングをテスト</li> \n <li>インバウンド DNS クエリ転送用のリゾルバーを設定（RISE またはオンプレミスネットワークでの使用例1でのみ必要）</li> \n</ol> \n<p>各ステップの詳細は以下の通りです。さらなるステップバイステップガイダンスについては、<a href=\"https://catalog.workshops.aws/genai-for-sap/en-US\">このワークショップ</a>のラボを参照してください。</p> \n<h3>1. SAP HANA Cloud で AWS PrivateLink Endpoint ID を有効化</h3> \n<p>SAP HANA Cloud の管理画面で、設定したい HANA Cloud インスタンスを選択し、<strong>View Configuration</strong>をクリックします。</p> \n<p style=\"text-align: center\"><a href=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_05.png\"><img loading=\"lazy\" class=\"size-full wp-image-8529 aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_05.png\" alt=\"図5：SAP HANA Cloud - 設定を表示\" width=\"698\" height=\"267\"></a>図5：SAP HANA Cloud – 設定を表示</p> \n<p>接続タブで、AWS PrivateLink Endpoint ID を有効にするボタンをオンにします。これにより、AWS VPC への接続を設定するための PrivateLink Endpoint ID を取得できます。<strong>許可する接続</strong>で、「この BTP リージョンの Cloud Foundry からの IP アドレスのみを許可」または「特定の IP アドレスと IP 範囲を許可（BTP の Cloud Foundry に加えて）」を選択して、すべてのトラフィックがプライベート接続を通過するように制御します。</p> \n<p style=\"text-align: center\"><a href=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_06.png\"><img loading=\"lazy\" class=\"size-full wp-image-8531 aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_06.png\" alt=\"図6：SAP HANA Cloud - 接続\" width=\"700\" height=\"478\"></a>図6：SAP HANA Cloud – 接続</p> \n<h3>2. AWS VPC で VPCエンドポイントを設定</h3> \n<p>このステップでは、AWS VPC で VPC エンドポイントとセキュリティグループを設定して、Amazon VPC からこのエンドポイント経由で HANA Cloud へのアクセスを許可します。ご自身のAWS アカウントに VPC が設定されていない場合は、<a href=\"https://docs.aws.amazon.com/ja_jp/vpc/latest/userguide/create-vpc.html\" target=\"_blank\" rel=\"noopener\">Amazon VPC ドキュメント</a>を参照して VPC を作成してください。SAP HANA Cloud インスタンスの設定タブで <strong>AWS PrivateLink Endpoint Service ID </strong>をコピーします。</p> \n<p><img class=\"aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_07.png\"></p> \n<p style=\"text-align: center\">図7: SAP HANA Cloud – PrivateLink Endpoint Service IDs</p> \n<p>AWS コンソールで、Amazon VPC サービスにアクセスし、<a href=\"https://docs.aws.amazon.com/ja_jp/vpc/latest/privatelink/privatelink-access-saas.html\" target=\"_blank\" rel=\"noopener\">パートナーサービス用の VPC インターフェースエンドポイント</a>を作成します。エンドポイント作成画面で、エンドポイントの名前を入力し、タイプに「PrivateLink Ready partner services」を選択します。サービス設定で、HANA Cloud インスタンスの <strong>AWS PrivateLink Endpoint Service ID </strong>をサービス名ボックスに入力します。次に、サービス確認ボタンをクリックします。</p> \n<p><img class=\"aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_08.png\"></p> \n<p style=\"text-align: center\">図 8: Amazon VPC – VPC エンドポイント作成 (1)</p> \n<p>「サービス名が確認されました」という成功メッセージが表示されたら、ネットワーク設定を選択できるようになります。ネットワーク設定で、エンドポイントを作成したい VPC とアベイラビリティーゾーン、サブネットを選択します。SAP HANA Cloud インスタンスが複数の AZ で利用可能な場合、VPC で複数の AZ とサブネットを選択できます。</p> \n<p><img class=\"aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_09.png\"></p> \n<p style=\"text-align: center\">図 9: Amazon VPC – VPC エンドポイント作成 (2)</p> \n<p>このエンドポイントに、 https トラフィックを許可するセキュリティグループを割り当ててください。このブログでは、同 VPC 内のIP アドレス CIDR からの https トラフィックを許可するインバウンドルールを持つ https-from-sap-vpc という名前のセキュリティグループを作成しました。</p> \n<p><img class=\"aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_10_01.png\"></p> \n<p><img class=\"aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_10_02.png\"></p> \n<p style=\"text-align: center\">図 10: Amazon VPC – VPC エンドポイント作成 (3)</p> \n<p>VPCエンドポイントが作成され、ステータスが「使用可能」になったら、エンドポイントの詳細ページからエンドポイント ID をコピーしてください。この ID は、次のステップで HANA Cloud の設定に使用します。DNS ネームをコピーして、後で Route 53 での DNS 設定時に使用します。プライベート IPv4 アドレスをメモしておいてください。これは、プライベートルーティングをテストする最後のステップで確認することができます。</p> \n<h3><img src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_11.png\"></h3> \n<p style=\"text-align: center\">図 11: Amazon VPC – VPC エンドポイントの確認</p> \n<h3>3. Amazon VPC エンドポイントを HANA Cloud インスタンスの許可リストに追加</h3> \n<p>HANA Cloud 管理画面に戻り、HANA Cloud インスタンスの設定を開きます。接続設定画面で、作成した VPC エンドポイント ID を許可リストに追加します。これにより、先ほどの VPC から作成された VPC エンドポイントで HANA Cloud PrivateLink エンドポイントサービスに接続できるようになります。</p> \n<p><img class=\"aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_12.png\"></p> \n<p style=\"text-align: center\">Figure 12: SAP HANA Cloud – VPC エンドポイント ID 許可</p> \n<h3>4. Amazon Route53 でプライベートホストゾーンを設定</h3> \n<p>このステップでは、VPC 用の Amazon Route 53 のプライベートホストゾーンを設定し、HANA Cloud インスタンスへのトラフィックを VPC エンドポイントに向ける DNS レコードを作成します。SAP HANA Cloud 接続の詳細から、SQL エンドポイントアドレスとランドスケープアドレスを確認します。Route 53 DNS 設定と接続テストで使用するため、これらのアドレスをメモしてください。</p> \n<p><img class=\"aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_13.png\"></p> \n<p style=\"text-align: center\">図 13: SAP HANA Cloud – 接続情報確認</p> \n<p>Amazon Route 53 ホストゾーン設定で、以下のように値を設定します。<br> – ドメイン名として HANA Cloud ランドスケープ名を入力<br> – タイプとしてプライベートホストゾーンを選択<br> – ホストゾーンを VPC に関連付けるために VPC ID を選択<br> 次に、ホストゾーンの作成ボタンをクリックします。</p> \n<p><img class=\"aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_14.png\"></p> \n<p style=\"text-align: center\">図 14: Amazon Route 53 – ホストゾーン作成</p> \n<p>作成されたホストゾーン画面で、すべての HANA Cloud へのトラフィックを VPC エンドポイントにルーティングする新しい DNS レコードを作成します。</p> \n<p><img class=\"aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_15.png\"></p> \n<p style=\"text-align: center\">図 15: Amazon Route 53 – DNS レコード作成</p> \n<h3>5. VPC 内から HANA Cloud へのプライベートルーティングをテスト</h3> \n<p>設定完了後、VPC 内の EC2 インスタンスから dig または nslookup コマンドを実行して、HANA Cloud インスタンスへのトラフィックが VPC エンドポイントのプライベート IP アドレスに向かっていることを確認します。HANA Cloud エンドポイント URL でこれらのコマンドを実行すると、VPC エンドポイントのプライベート IP アドレスが応答されます。</p> \n<p><img class=\"aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_16.png\"></p> \n<p style=\"text-align: center\">図 16: コマンドでプライベートルーティングを確認</p> \n<p>hdbsql コマンドで HANA Cloud エンドポイントへのデータベース接続を確認します。</p> \n<p><img class=\"aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_17.png\"></p> \n<p style=\"text-align: center\">図 17: hdbsql コマンドでデータベース接続を確認</p> \n<h3>6. インバウンド DNS クエリ転送用のリゾルバーを設定（RISE またはオンプレミスネットワークでのユースケース 1 でのみ必要）</h3> \n<p>Route 53 プライベートホストゾーンは AWS アカウントの VPC 内に設定されているため、この VPC からのトラフィックにのみ影響します。ユースケース 1 で、RISE またはオンプレミスネットワークから HANA Cloud へのトラフィックも VPC エンドポイントを通過させたい場合は、<a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/resolver-forwarding-inbound-queries.html\">Route 53 インバウンドリゾルバー</a>を使用し、ネットワークからこのリゾルバーに DNS を転送する必要があります。</p> \n<p>詳細な手順は <a href=\"https://docs.aws.amazon.com/ja_jp/Route53/latest/DeveloperGuide/resolver-forwarding-inbound-queries-configuring.html\" target=\"_blank\" rel=\"noopener\">Route 53 ドキュメント</a> を参照してください。下記の画面は、VPC 内に作成されたインバウンドエンドポイントのサンプルで、2 つのサブネットに 2 つのプライベートIPアドレスが割り当てられています。これらの IP アドレスは、RISE やオンプレミスネットワークでの DNS 設定に使用することができます。</p> \n<p><img class=\"aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_18.png\"></p> \n<p style=\"text-align: center\">図 18: Amazon Route 53 – インバウンドリゾルバー</p> \n<h2>高可用性</h2> \n<p>AWS PrivateLink の高可用性アーキテクチャは、複数のアベイラビリティーゾーン（ AZ ）を通じて堅牢で回復力のある接続を提供し、重要なビジネス運用のための継続的なサービス可用性を確保します。図 19 は、複数の AZ にまたがるエンドポイントネットワークインターフェースで AWS PrivateLink を実装することで、自動フェイルオーバー機能を実現し、ネットワークアーキテクチャにおける単一障害点を排除できることを示しています。この分散設計により、ある AZ が使用不可能になった場合でも、トラフィックは自動的に正常なエンドポイントにルーティングされ、アプリケーションやサービスへのシームレスな接続が維持されます。</p> \n<p>これにより、アプリケーションの信頼性が向上し、ダウンタイムのリスクが軽減され、パフォーマンスが安定するとともに、プライベート接続のセキュリティ上の利点も得られます。さらに、AWS PrivateLink と Amazon Route 53 DNS サービスとの統合により、インテリジェントなルーティングとヘルスチェックが可能となり、ソリューション全体の可用性と耐障害性が向上します。この包括的な高可用性の実装により、セキュアでプライベートなネットワーク通信を維持しながら、厳格なビジネス継続性要件を満たすことができます。</p> \n<p>以下のアーキテクチャは、Network Load Balancer を通じて 2 つの AZ に跨って HA がどのように機能するかを説明しています。</p> \n<p style=\"text-align: center\"><a href=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_19.png\"><img loading=\"lazy\" class=\"size-full wp-image-8548 aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_19.png\" alt=\"図19：高可用性を備えたAWS PrivateLink\" width=\"920\" height=\"385\"></a>図19：高可用性を備えた AWS PrivateLink</p> \n<h2>価格例</h2> \n<p>このブログの公開時点では、SAP HANA Cloud で AWS PrivateLink を有効にする際、SAP BTP で追加料金は発生しません。SAP が Network Load Balancer の実装と有効化を実施します。ご自身の AWS アカウントで作成されたリソースに対してのみ課金されます。</p> \n<p>例えば、高可用性ありとなしでのお客様の AWS アカウントでの AWS PrivateLink のコストを比較してみましょう。両方のオプションは、この<a href=\"https://calculator.aws/#/estimate?id=675147ff211d0e3089cbdfa7dbba55d8c47980fe\" target=\"_blank\" rel=\"noopener\"> AWS 料金計算ツールリンク</a> にあります。</p> \n<p><img class=\"aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_20-1.png\"></p> \n<p style=\"text-align: center\">図20: 料金の例</p> \n<h2>次のステップ</h2> \n<p>AWS PrivateLink の詳細については、AWS ドキュメント<a href=\"https://docs.aws.amazon.com/ja_jp/vpc/latest/privatelink/what-is-privatelink.html\" target=\"_blank\" rel=\"noopener\">「AWS PrivateLink とは？」</a>、<a href=\"https://docs.aws.amazon.com/ja_jp/vpc/latest/userguide/endpoint-services-overview.html\" target=\"_blank\" rel=\"noopener\">「AWS PrivateLink を使用して VPC をサービスに接続する」</a>、およびAWSホワイトペーパー<a href=\"https://docs.aws.amazon.com/ja_jp/whitepapers/latest/aws-vpc-connectivity-options/aws-privatelink.html\" target=\"_blank\" rel=\"noopener\">「AWS PrivateLink」</a>を参照してください。</p> \n<p>同様に、詳細については SAP HANA Cloud <a href=\"https://help.sap.com/docs/hana-cloud?locale=en-US&amp;state=PRODUCTION&amp;version=hanacloud\" target=\"_blank\" rel=\"noopener\">オンラインドキュメント</a> と&nbsp;<a href=\"https://help.sap.com/docs/hana-cloud-database/sap-hana-cloud-sap-hana-database-administration-guide/sap-hana-cloud-sap-hana-database-administration-guide\" target=\"_blank\" rel=\"noopener\">SAP HANA Cloud データベース管理ガイド</a> を参照してください。</p> \n<p>AWS アカウントチームと AWS サポートチャネルに加えて、AWS コミュニティ向けの Q&amp;A 体験である <a href=\"https://repost.aws/\">re:Post</a> を開始しました。AWS for SAP ソリューションアーキテクチャチームは、お客様とパートナーを支援するために回答できる議論と質問について、AWS for SAP トピックを定期的に監視しています。質問がサポート関連でない場合は、re:Post での議論に参加し、コミュニティの知識ベースに貢献することを検討してください。</p> \n<h2>クレジット</h2> \n<p>このブログへの貢献に対して、Derek Ewell、Ferry Mulyadi、Diego Lombardini、Eneko Bilbaoに感謝いたします。</p> \n<p>翻訳は Specialist SA トゥアンが担当しました。原文は<a href=\"https://aws.amazon.com/blogs/awsforsap/secure-sap-hanacloud-connectivity-using-aws-privatelink/\" target=\"_blank\" rel=\"noopener\">こちら</a>です。</p>"
  },
  {
    "title": "vitejs/vite – v7.1.9",
    "date": "2025-10-03T00:41:51.000Z",
    "source": "GitHub",
    "url": "https://github.com/vitejs/vite/releases/tag/v7.1.9",
    "content": "Please refer to [CHANGELOG.md](https://github.com/vitejs/vite/blob/v7.1.9/packages/vite/CHANGELOG.md) for details."
  },
  {
    "title": "vitejs/vite – v7.1.8",
    "date": "2025-10-02T06:15:47.000Z",
    "source": "GitHub",
    "url": "https://github.com/vitejs/vite/releases/tag/v7.1.8",
    "content": "Please refer to [CHANGELOG.md](https://github.com/vitejs/vite/blob/v7.1.8/packages/vite/CHANGELOG.md) for details."
  }
]
[
  {
    "title": "vercel/next.js – v15.6.0-canary.55",
    "date": "2025-10-09T22:31:19.000Z",
    "source": "GitHub",
    "url": "https://github.com/vercel/next.js/releases/tag/v15.6.0-canary.55",
    "content": "### Core Changes\n\n- breaking(next/image)!: remove 16px from default `images.imageSizes` config: #84647\n- add Statsig Node Core package to Server External Packages: #84157\n- Remove bailed out SSG routes from the list of SSG: #83861\n- Revert \"[Breaking] Skip Next.js internal routes `/_next` in middleware\": #84697\n- Bump eslint-plugin-react-hooks to v7: #84669\n- Add refresh API to next/cache: #84666\n- [Breaking] Require `images.localPatterns` for query in Image src: #84406\n- [Breaking] feat(next/image)!: add support for `images.dangerouslyAllowLocalIP` and `images.maximumRedirects`: #84676\n- Add new updateTag API and new signature for revalidateTag: #83822\n- Add validation for missing default.js in parallel routes: #84702\n\n### Misc Changes\n\n- Add note about $ACTION_ properties, remove reference to .entries(): #84459\n\n### Credits \n\nHuge thanks to @styfle, @brock-statsig, @devjiwonchoi, @karlhorky, @ijjk, @ztanner, and @wyattjoh for helping!\n"
  },
  {
    "title": "Amazon Bedrockを活用したAWS サポート問い合わせ内容の自動集約ソリューションの実装",
    "date": "2025-10-09T09:55:26.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/jaldx-solutions-awssupport-bedrock/",
    "content": "<p>本稿は、JALデジタル株式会社システムマネジメント本部ハイブリッドクラウド基盤部クラウド基盤運営グループの梅本様、北様からご寄稿いただきました。</p> \n<h2>はじめに</h2> \n<p>JALデジタル株式会社のプラットフォームチームでは、JALグループのITシステムとして必要な設計・運用を満たすためのAWSアカウントを「<a href=\"https://d1.awsstatic.com/case-studies/jp/pdf/JAL.pdf\" target=\"brank\" rel=\"noopener\">CIEL/S</a>」(※1)として提供しています。<br> 今回私たちのチームでは、複数のAWSアカウントにおける AWS サポートとのやり取りを組織全体で効率的に活用するため、Amazon Bedrock を活用したナレッジ集約のソリューションを開発しました。<br> 本記事では、AWS サポート問い合わせ内容の自動収集、AI要約、ServiceNow（※2）への連携を実現したアーキテクチャについて解説します。<br> ※1：リンク先の資料内におけるJALインフォテックは2025年4月、JALデジタルに社名変更しています。<br> ※2：JALグループではITSMツールとしてServiceNowを利用しています。</p> \n<h2>導入背景</h2> \n<p>現在JALグループで利用しているAWSアカウント数は数百アカウントあり、エンタープライズサポートを活用して24時間365日の運用を実現しています。しかし、利用していく中でいくつかの課題が発生しました。</p> \n<ul> \n <li>アカウントの制約<br> 各アカウントから行った問い合わせ内容は、そのアカウントでしか閲覧もできません。そのため、複数のAWSアカウントでのサポート問い合わせ内容が分散することになり、組織全体での知見共有が困難となっていました。また、私たちのチームに「○○という内容で過去に問い合わせしているアカウントはいないか」と質問があっても、一元管理できていないため探すのが困難でした。 </li> \n <li>ナレッジ共有の壁<br> 問い合わせした内容をドキュメント化して共有する場合、CIEL/SのAWSアカウント全体で平均60件/月の問い合わせが発生しており、それらを手動でナレッジとして作成することはコストがかかりすぎてしまいます。また問い合わせ履歴が多くなってしまったサポートケースをそのまま転記するだけでは、読み手の負担も大きいためある程度要約をする必要がありますが、要約作成もナレッジ化のハードルとなっていました。 </li> \n <li>AWS サポートケース保管期限の制約<br> 解決から２年経過した問い合わせはAWSコンソール上から削除されるため、それ以上過去に遡って探すことができませんでした。 </li> \n</ul> \n<h2>ソリューション概要</h2> \n<p>上記課題を解決するために、自動的にAWS サポートケース の集約と Amazon Bedrock を活用した問い合わせ内容の要約作成を行うソリューションの開発を行いました。開発したソリューションは、2種類のAWSアカウントと、3つの主要なコンポーネントで構成されています。</p> \n<h3>AWSアカウントの種類</h3> \n<ol> \n <li>集約実行アカウント<br> 問い合わせ内容を集約し、ServiceNowに連携するAWSアカウント </li> \n <li>集約対象アカウント<br> 問い合わせを集約させたいAWSアカウント </li> \n</ol> \n<h3>コンポーネント</h3> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/08/29/jaldx-solutions-awssupport-bedrock1.png\" alt=\"コンポーネント\"></p> \n<ol> \n <li>既存の AWS サポートケース の集約（集約実行アカウント） \n  <ul> \n   <li>本ソリューション導入前に解決済みとなっている AWS サポートケース を集約させるための処理</li> \n   <li>Amazon Bedrockを利用して問い合わせ内容の要約を作成</li> \n  </ul> </li> \n <li>新規の AWS サポートケース の集約（集約実行アカウント） \n  <ul> \n   <li>本ソリューション導入後に解決済みとなった AWS サポートケース を自動で集約させるための処理</li> \n   <li>Amazon Bedrockを利用して問い合わせ内容の要約を作成</li> \n   <li>集約した問い合わせをServiceNowに連携する処理</li> \n  </ul> </li> \n <li>AWS サポートケース の ResolveCase を検知（集約対象アカウント） \n  <ul> \n   <li>集約対象AWSアカウントで解決済みとなった AWS サポートケース を集約実行アカウントに連携する処理</li> \n   <li>AWS Cloudformation StackSets を利用して複数AWSアカウントに Amazon EventBridge Rule を展開</li> \n  </ul> </li> \n <li>AWS サポートケースの検索と表示（ServiceNow） \n  <ul> \n   <li>集約実行アカウントから連携された問い合わせの表示</li> \n   <li>AWSサポートケースの内容検索</li> \n  </ul> </li> \n</ol> \n<h3>アーキテクチャ詳細</h3> \n<p>既存の AWS サポートケース の集約の処理については、一度のみの処理となるため、メインとなる新規の AWS サポートケース の集約について詳細を解説します。</p> \n<p>Step 1: サポートケースが解決したイベント検知（集約対象AWSアカウント）</p> \n<ul> \n <li>集約実行アカウントの Event Bus をターゲットとした Amazon EventBrige Rule を作成します</li> \n <li>AWS サポートの解決処理をトリガーとして、Amazon EventBridge Ruleのイベントパターンに定義します</li> \n</ul> \n<pre>\n\t<code>\n{\n  \"detail-type\": [\"Support Case Update\"],\n  \"source\": [\"aws.support\"],\n  \"detail\": {\n    \"communication-id\": [\"\"],\n    \"event-name\": [\"ResolveCase\"]\n  }\n}\n\t</code>\n</pre> \n<p>Step 2: Step 1 の検知を元にLambdaを実行（集約実行AWSアカウント）</p> \n<ul> \n <li>集約対象AWSアカウントに対して、AWS Support API (<a href=\"https://docs.aws.amazon.com/ja_jp/awssupport/latest/APIReference/API_DescribeCases.html\" target=\"brank\" rel=\"noopener\">DescribeCases</a>、<a href=\"https://docs.aws.amazon.com/ja_jp/awssupport/latest/APIReference/API_DescribeSeverityLevels.html\" target=\"brank\" rel=\"noopener\">DescribeSeverityLevels</a>、<a href=\"https://docs.aws.amazon.com/ja_jp/awssupport/latest/APIReference/API_DescribeServices.html\" target=\"brank\" rel=\"noopener\">DescribeServices</a>、<a href=\"https://docs.aws.amazon.com/ja_jp/awssupport/latest/APIReference/API_DescribeCommunications.html\" target=\"brank\" rel=\"noopener\">DescribeCommunications</a>)を実行してサポートケース情報を取得</li> \n <li>Amazon Bedrock API (<a href=\"https://docs.aws.amazon.com/ja_jp/bedrock/latest/APIReference/API_runtime_Converse.html\" target=\"brank\" rel=\"noopener\">Converse</a>) を実行し サポートケース会話情報を要約</li> \n <li>Amazon DynamoDB に登録</li> \n</ul> \n<p>Step 3: ServiceNow連携（集約実行AWSアカウント）</p> \n<ul> \n <li>DynamoDB Stream から AWS Lambda 関数を実行 \n  <ul> \n   <li>ServiceNow への認証処理</li> \n   <li>ServiceNow への記事の登録処理の実行</li> \n  </ul> </li> \n</ul> \n<p>①AWS サポートケースとServiceNow上のナレッジとのマッピング<br> <img src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/08/29/jaldx-solutions-awssupport-bedrock3.png\" alt=\"AWS サポートケースとServiceNow上のナレッジとのマッピング\"></p> \n<p>②ServiceNow上でナレッジ検索する際イメージ<br> <img src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/08/29/jaldx-solutions-awssupport-bedrock2.png\" alt=\"ServiceNow上でナレッジ検索する際イメージ\"></p> \n<h2>実装ポイント</h2> \n<ul> \n <li>Amazon EventBridgeのリージョン制約対応<br> AWS サポートは us-east-1 リージョンのグローバルリソースであるため、EventBridge Rule の配置および Lambda 関数のデプロイも us-east-1 にまとめることが推奨されます。 </li> \n <li>セキュリティ権限の最小化<br> 各AWSアカウントに必要な IAMロール・ポリシーは最小権限の原則に従い、AWS サポートケースの読み取り権限や EventBridge Rule の作成権限だけに限定することで安全性を確保してください。 </li> \n <li>システムプロンプトの設計<br> 読み手が短時間で問題の本質と解決策を把握できるよう、要約生成のためのプロンプトは、以下のポイントを押さえて設計しています。<p></p> \n  <ul> \n   <li>ユーザーが直面した問題、サポートの具体的な解決策、成功のための考慮事項を明確に区別して要約させる</li> \n   <li>日本語で簡潔に300文字以内に収める文字数制限を設定し、不要な情報を排除</li> \n   <li>「問い合わせ内容」「解決策」「考慮事項」という出力フォーマットを厳格に指定し、一貫性のある要約を実現</li> \n  </ul> </li> \n <li>ナレッジ格納先にServiceNowを選定 \n  <ul> \n   <li>本ソリューション実装前から、プラットフォームに関するナレッジを ServiceNow 上に乗せていた</li> \n   <li>標準となるナレッジの型があり、UI を一から作成する必要が無い</li> \n   <li>検索機能も ServiceNow 標準のものを利用できる(AIを用いた検索等は今後実装予定)</li> \n  </ul> </li> \n <p> ※AWS Support APIの利用条件<br> AWS Support APIの利用にはビジネスサポート以上のサポートプラン（ビジネス、エンタープライズ On-Ramp、エンタープライズ）が必要です。JALグループではエンタープライズサポートを利用しているため、本ソリューションで必要となるAWS Support APIの全機能を活用することができます。 </p>\n</ul> \n<h2>導入効果</h2> \n<p>本ソリューションの導入により、以下の効果を実現しました。</p> \n<ol> \n <li>ナレッジ共有の効率化<br> 複数アカウントの問い合わせ内容を一元管理することで、組織全体の知見を活用できるようになりました。またAI要約を入れることで、すべてのやり取りを読む前に自分たちが探している情報かどうか判断することができるようになりました。 </li> \n <li>運用工数の削減<br> 手動でのドキュメントや要約作成が不要になることで、ナレッジ作成に伴う運用コストを大幅に削減させることができました。また ServiceNow への自動連携により転記作業を削減した上で、解決済みになった問い合わせをリアルタイムでナレッジ化することが可能になりました。 </li> \n <li>問題解決の迅速化<br> 一元管理により、各アカウントの担当者が組織全体の知見を活用して、調べたい情報や類似事例を直接検索-閲覧できるようになりました。これにより、プラットフォームチームやAWSサポートに問い合わせて回答を待つ時間を省略し、素早い問題解決が可能になりました。 </li> \n</ol> \n<h2>まとめ</h2> \n<p>AWS Support APIを利用した問い合わせ内容の取得と、Amazon Bedrock を活用した問い合わせ内容の要約作成を組み合わせることで、組織全体のナレッジマネジメントを大幅に改善することができました。AWS Lambda、 Amazon EventBridge、Amazon DynamoDB などAWSのマネージドサービスを最大限に活用、AWS利用料を最小限に抑えるアーキテクチャを実現しました。<br> 今後は、要約精度の向上や、より高度な分析機能の追加を検討しており、継続的な改善を進めていく予定です。</p> \n<hr> \n<h2>著者略歴</h2> \n<div class=\"blog-author-box\"> \n <div class=\"blog-author-image\"> \n  <img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/09/19/jaldx-solutions-awssupport-bedrock_writer1.png\" alt=\"著者\" width=\"195\" height=\"197\"> \n </div> \n <p> <strong><a href=\"https://www.jaldx.co.jp/\">JALデジタル株式会社</a></strong><br> <strong>システムマネジメント本部ハイブリッドクラウド基盤部クラウド基盤運営グループ</strong><br> <strong>梅本征宏</strong><br> 2019年入社　旅客系システムの開発・維持管理業務を担当。<br> 2022年に現部署に異動して以降、Platform Engineeringを推進。 </p>\n</div> \n<div class=\"blog-author-box\"> \n <div class=\"blog-author-image\"> \n  <img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/09/19/jaldx-solutions-awssupport-bedrock_writer2.png\" alt=\"著者\" width=\"195\" height=\"197\"> \n </div> \n <p> <strong><a href=\"https://www.jaldx.co.jp/\">JALデジタル株式会社</a></strong><br> <strong>システムマネジメント本部ハイブリッドクラウド基盤部クラウド基盤運営グループ</strong><br> <strong>北修哉</strong><br> 顧客系システムの開発を担当。<br> 2024年に現部署に異動し、プラットフォームチームの運用高度化を推進。 </p>\n</div>"
  },
  {
    "title": "vercel/next.js – v15.6.0-canary.54",
    "date": "2025-10-09T09:47:36.000Z",
    "source": "GitHub",
    "url": "https://github.com/vercel/next.js/releases/tag/v15.6.0-canary.54",
    "content": "### Core Changes\n\n- [middleware]: add upper bound to cloneBodyStream: #84539\n- Remove automatic linting from build: #83136\n- Re-enable legacyBehavior and passHref on Link: #84500\n- [cna] Use stable React Compiler: #84660\n- Add codemod for `middleware` to `proxy`: #84127\n- Fix dynamic catchall parameter interpolation in parallel routes: #84279\n- feat(breaking): Hard Deprecate PPR Configuration: #84280\n- Deprecate `middleware` and recommend `proxy`: #84119\n- Put native TS resolver for next config under `--experimental-next-config-strip-types` flag: #84675\n- Fix interception route rewrites for nested dynamic routes: #84413\n- fix: strip _NEXTSEP_ from interpolated pathnames: #84430\n- chore: Remove useless symlink resolution logic in `recursive-delete.js`: #84582\n\n### Misc Changes\n\n- docs: update core documentation for Turbopack as default bundler: #84282\n- Update Rspack development test manifest: #84631\n- [turbopack] Only send the filesystem caching timing messages for slow events: #84646\n- docs: `experimental.isolatedDevBuild`: #84656\n- docs: add note clarifying project root in monorepo: #84628\n- Fix flakey overlay feedback test: #84662\n- [ci]: update flake detection to only run in Turbopack: #84659\n- [ci]: move router-act to top level testing utils: #84653\n- [tests]: de-flake client-cache.parallel-routes.test.ts: #84655\n- [create-next-app]: add eslint to default template: #84661\n- Update Rspack production test manifest: #84630\n- [test] Assert on stable error codes: #84671\n- Turbopack: convert HashMap to IndexMap for deterministic tasks: #84641\n\n### Credits \n\nHuge thanks to @lukesandberg, @vercel-release-bot, @ztanner, @devjiwonchoi, @gwkline, @ijjk, @bgub, @samselikoff, @eps1lon, @wyattjoh, @bgw, and @sokra for helping!\n"
  },
  {
    "title": "AWS PrivateLink を使用したセキュアな SAP HANA Cloud 接続",
    "date": "2025-10-09T09:38:04.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/secure-sap-hanacloud-connectivity-using-aws-privatelink/",
    "content": "<h2><strong>はじめに</strong></h2> \n<p>データドリブンエンタープライズの環境では、組織は 2 つの重要な要件を満たすデータベースソリューションを必要としています。1 つは、トランザクション処理と分析処理の両方のワークロードを扱える高性能性、もう 1 つはセキュリティとコンプライアンス要件への適合です。AWS 上で運用される <a href=\"https://www.sap.com/sea/products/data-cloud/hana.html\">SAP HANA Cloud</a> は、<a href=\"https://www.sap.com/products/technology-platform.html\">SAP Business Technology Platform（ SAP BTP ）</a>のサービスの一つであり、フルマネージド型のクラウドネイティブな Database-as-a-Service として、これらの要件に応えます。</p> \n<p>SAP HANA Cloud は主に 2 つの用途で活用されています。1つは、ERP、CRM、HR、ロジシティックスなどの基幹システムを単一の高速プラットフォームで支えること。もう 1 つは、高度な分析とデータアプリケーションを通じて、実践的なビジネスイノベーションを推進・支援することです。また、SAP HANA Cloud は、SAP Analytics Cloud、SAP Datasphere、SAP Cloud Application Programming Model（CAP）で開発されたアプリケーションなどの、様々な SAP BTP サービスの基盤でもあります。</p> \n<p>このブログでは、AWS PrivateLink を通じて SAP HANA Cloud のセキュリティと接続性を強化することにフォーカスし、高性能と信頼性を維持しながらプライベートで安全なデータベースアクセスを必要とする組織の重要なニーズに対応します。</p> \n<h2><strong>AWS が SAP HANA Cloud の稼働基盤として選ばれた理由</strong></h2> \n<p>SAP HANA Cloud は&nbsp;<a href=\"https://news.sap.com/2023/11/sap-hana-cloud-now-supports-aws-graviton/\">AWS Graviton プロセッサーによって対応しており、分析ワークロードで計算性能が最大 30% 向上しを提供し、計算コストを 15% 削減し、同等の EC2 インスタンスと比較して最大 60% 消費エネルギーを抑えることができます</a>。AWS Graviton ベースのインスタンスに移行することで、SAP は SAP HANA Cloud ワークロードの計算カーボンフットプリントを約 45% 削減できると見込んでおり、炭素排出量削減を支援する Amazon の The Climate Pledge の署名企業としての取り組みを支持します。SAP は将来的に AWS Graviton の使用を拡大し、これらの性能向上、コスト削減、エネルギー効率を継続的に活用する計画です。したがって、AWS 上の SAP HANA Cloud を使用するお客様は、性能向上のメリットを享受しながら、カーボンフットプリントを削減も実現できます。</p> \n<h2><strong>AWS 上の SAP HANA Cloud への接続</strong></h2> \n<p>SAP HANA Cloud に接続する際、オンプレミスまたは他のクラウド環境にあるクライアントアプリケーションやユーザーは、インターネットアクセス可能なエンドポイントを通じてパブリック API を使用してデータベースにセキュアにアクセスできます。</p> \n<p style=\"text-align: center\"><a href=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_01.png\"><img loading=\"lazy\" class=\"size-full wp-image-8523 aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_01.png\" alt=\"図1：デフォルトのパブリックエンドポイント経由でのSAP HANA Cloudへの接続\" width=\"529\" height=\"243\"></a>図1：デフォルトのパブリックエンドポイント経由でのSAP HANA Cloudへの接続</p> \n<p>金融サービス、ヘルスケア、政府機関などの規制産業のお客様で、HIPAA、EU/US Privacy Shield、PCI DSS などの規制により、パブリックエンドポイントの使用が制限される場合があります。この場合、SAP HANA Cloud と AWS PrivateLink を組み合わせることをお勧めします。これにより、AWS の安全なネットワークインフラストラクチャを活用しながら、データベースとアプリケーション間の安全かつプライベートな通信を実現できます。また、プライベートIPアドレス範囲（RFC 1918）を使用することで、サービスへの攻撃リスクが低減できます。</p> \n<p>このブログでは、AWS PrivateLink を使用したプライベート接続オプションを活用して、SAP HANA Cloud のデータ転送時のセキュリティを強化する方法について解説します。PrivateLink は、AWS 環境と SAP HANA Cloud 間の安全でプライベートなネットワーク接続を確立でき、パブリックインターネットへの通信を回避し、不正アクセスのリスクを抑制することができます。</p> \n<h2>AWS PrivateLink とは</h2> \n<p><a href=\"https://aws.amazon.com/jp/privatelink/\" target=\"_blank\" rel=\"noopener\">AWS PrivateLink</a> を使うことにで、AWSサービス（ネットワーク、コンピューティング、サーバーレスアプリケーション、AI など）と SAP BTP サービス間の通信をインターネット経由せず、プライベート接続を実現できます。また、AWS PrivateLink を使用して、Direct Connect または VPN 経由で Amazon Virtual Private Cloud（VPC）に接続されたオンプレミスネットワーク間の安全でプライベートな接続を提供することもでき、パブリックネットワークやIPアドレスを完全に回避できます。</p> \n<p>AWS PrivateLink により、異なるアカウントやVPC間でのサービス接続が簡単になり、ネットワークアーキテクチャを大幅に簡素化します。VPC 内のプライベート IP アドレスを持つ Elastic Network Interface であるインターフェースエンドポイント経由で、AWS サービス、他の AWS アカウントで稼働しているサービス（エンドポイントサービス）、AWS Marketplace パートナーサービスに接続できます。</p> \n<p>インターフェースエンドポイントは、VPC のサブネット内の Elastic Network Interface と IP アドレスを使用して、VPC 内に直接作成されます。プロバイダーとコンシューマーは、IPアドレスの重複を避けるためにネットワークセグメントや CIDR ブロックを調整する必要がありません。VPC ピアリングや AWS Transit Gateway 経由の接続は通信に必要ありません。セキュリティグループを関連付け、AWS サービスのインターフェースエンドポイントにエンドポイントポリシーを設定することで、指定されたサービスへのアクセスを制御できます。AWS PrivateLink を使用すると、<a href=\"https://docs.aws.amazon.com/ja_jp/vpc/latest/privatelink/privatelink-access-aws-services.html\" target=\"_blank\" rel=\"noopener\">AWS サービス</a>や他の VPC が提供する他のサービスに、AWS ネットワーク内のプライベート接続を通じて安全にアクセスできます。すべてのネットワークトラフィックはグローバル AWS バックボーン上に留まり、パブリックインターネットを経由することはありません。</p> \n<p style=\"text-align: center\"><a href=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_02.png\"><img loading=\"lazy\" class=\"size-full wp-image-8524 aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_02.png\" alt=\"図2：AWS PrivateLink経由でのSAP HANA Cloudへの接続\" width=\"771\" height=\"226\"></a>図2：AWS PrivateLink 経由での SAP HANA Cloud への接続</p> \n<p>SAP HANA Cloudと AWS PrivateLink との接続するメリットをより理解するために、実際のシナリオでそのメリットを示すいくつかの実用的なユースケースを探ってみましょう。</p> \n<h2>SAP HANA Cloud と AWS PrivateLink を使うユースケース</h2> \n<p>データセキュリティが重要なビジネス環境において、AWS PrivateLink の実装は、データ転送中の機密情報を保護するために不可欠です。AWS のインフラストラクチャが提供するプライベート IP エンドポイントサービスは、重要なセキュリティレイヤーとして機能し、ビジネスへ重大な影響をもたらす可能性のあるセキュリティ侵害を防ぐのに役立ちます。この統合は、現代のクラウドアーキテクチャの複雑な要件に対応するエンタープライズクラスのセキュリティソリューションを提供することに対する AWS のコミットメントを示しています。</p> \n<h3>ユースケース 1 – SAP HANA Cloud 管理アクセスセキュリティ</h3> \n<p>SAP HANA Cloud PrivateLink を実装する重要なユースケースの 1 つは、安全なデータベースアクセスへの対応です。企業の環境では、オフィスで働くデータベース管理者と開発者は、テーブル管理、メンテナンス、開発タスクなどの重要タスクを実行するために SAP HANA Cloud への定期的なアクセスが必要です。これらの技術者は、一般ユーザーとは異なり、タスクに必要な広範なデータベース権限を付与されているため、接続セキュリティが特に重要になります。</p> \n<p>図3に示すように、<strong>AWS PrivateLinkを使用した SAP HANA Cloud </strong>は、組織が機密データの転送をプライベートネットワークでのみに制限できるようにする完璧なソリューションを提供します。データベース操作へのプライベートアクセスは、運用効率を維持しながらパブリック IP を使わず、厳格なアクセス制御を通じて組織のセキュリティを強化します。</p> \n<p style=\"text-align: center\"><a href=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_03.png\"><img loading=\"lazy\" class=\"size-full wp-image-8526 aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_03.png\" alt=\"図3：エンタープライズグレードのSAP HANA Cloud管理アクセスセキュリティ\" width=\"863\" height=\"273\"></a>図3：SAP HANA Cloud 管理アクセスセキュリティ</p> \n<h3>ユースケース 2 – セキュアなデータプラットフォーム統合：SAP HANA Cloud と AWS サービス</h3> \n<p>SAP HANA Cloud と AWS PrivateLink の重要なユースケースは、AWS 上でデータプラットフォームを構築し、SAP HANA Cloud データを分析エコシステムに統合するケースです。AWS データプラットフォーム内で SAP HANA Cloud データにアクセスするには、主に2つの方法があります。AWS Glue ETL ジョブを使用してデータを抽出しAmazon S3 にロードする方法、またはフェデレーションクエリに Amazon Athena SAP HANA コネクタを使用する方法です。両方のアプローチには、AWS サービスと SAP HANA Cloud 間の安全で信頼性の高い接続が必要です。</p> \n<p>これらのデータ統合パターンを実装する際、機密ビジネスデータがシステム間で転送されるため、セキュリティが重要になります。図4は、AWS PrivateLinkが必要なセキュアな接続レイヤーを提供することを示しています。AWS サービス（AWS Glue や Amazon Athena など）と SAP HANA Cloud 間のすべてのデータ転送とクエリがプライベートネットワークチャネルを介して行われ、パブリックインターネットへの通信を介さず、エンタープライズデータ統合シナリオの厳格なセキュリティ要件を満たします。</p> \n<p style=\"text-align: center\"><a href=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_04.png\"><img loading=\"lazy\" class=\"size-full wp-image-8527 aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_04.png\" alt=\"図4：セキュアなデータプラットフォーム統合：SAP HANA CloudとAWSサービス\" width=\"904\" height=\"396\"></a>図4：セキュアなデータプラットフォーム統合：SAP HANA Cloud と AWS サービス</p> \n<h2>AWS PrivateLink を使用した SAP HANA Cloud の設定方法</h2> \n<p>ユースケース 1 のエンタープライズグレードの SAP HANA Cloud アクセスの設定手順を説明します。このブログでは、設定について <a href=\"https://help.sap.com/docs/hana-cloud/sap-hana-cloud-administration-guide/sap-hana-cloud-private-link\" target=\"_blank\" rel=\"noopener\">SAP HANA Cloud 管理ガイド</a>を参照しました。この設定は SAP BTP 有料ティアアカウントで利用可能です。このブログ執筆時点では、データレイクインスタンス用の SAP HANA Cloud PrivateLink はAWS でのみ利用可能であり、<a href=\"https://help.sap.com/docs/hana-cloud/sap-hana-cloud-administration-guide/sap-hana-database-private-link-endpoint-service\" target=\"_blank\" rel=\"noopener\">SAP HANA Cloud PrivateLink ドキュメント</a>に記載されているように、リージョン内の接続のみをサポートしています。以下は設定手順の概要です。</p> \n<ol> \n <li>SAP HANA Cloud で AWS PrivateLink Endpoint ID を有効化</li> \n <li>AWS VPC で VPC エンドポイントを設定</li> \n <li>AWS VPC エンドポイントを HANA Cloud インスタンスの許可リストに追加</li> \n <li>Amazon Route53 でプライベートホストゾーンを設定</li> \n <li>VPC 内から HANA Cloud へのプライベートルーティングをテスト</li> \n <li>インバウンド DNS クエリ転送用のリゾルバーを設定（RISE またはオンプレミスネットワークでの使用例1でのみ必要）</li> \n</ol> \n<p>各ステップの詳細は以下の通りです。さらなるステップバイステップガイダンスについては、<a href=\"https://catalog.workshops.aws/genai-for-sap/en-US\">このワークショップ</a>のラボを参照してください。</p> \n<h3>1. SAP HANA Cloud で AWS PrivateLink Endpoint ID を有効化</h3> \n<p>SAP HANA Cloud の管理画面で、設定したい HANA Cloud インスタンスを選択し、<strong>View Configuration</strong>をクリックします。</p> \n<p style=\"text-align: center\"><a href=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_05.png\"><img loading=\"lazy\" class=\"size-full wp-image-8529 aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_05.png\" alt=\"図5：SAP HANA Cloud - 設定を表示\" width=\"698\" height=\"267\"></a>図5：SAP HANA Cloud – 設定を表示</p> \n<p>接続タブで、AWS PrivateLink Endpoint ID を有効にするボタンをオンにします。これにより、AWS VPC への接続を設定するための PrivateLink Endpoint ID を取得できます。<strong>許可する接続</strong>で、「この BTP リージョンの Cloud Foundry からの IP アドレスのみを許可」または「特定の IP アドレスと IP 範囲を許可（BTP の Cloud Foundry に加えて）」を選択して、すべてのトラフィックがプライベート接続を通過するように制御します。</p> \n<p style=\"text-align: center\"><a href=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_06.png\"><img loading=\"lazy\" class=\"size-full wp-image-8531 aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_06.png\" alt=\"図6：SAP HANA Cloud - 接続\" width=\"700\" height=\"478\"></a>図6：SAP HANA Cloud – 接続</p> \n<h3>2. AWS VPC で VPCエンドポイントを設定</h3> \n<p>このステップでは、AWS VPC で VPC エンドポイントとセキュリティグループを設定して、Amazon VPC からこのエンドポイント経由で HANA Cloud へのアクセスを許可します。ご自身のAWS アカウントに VPC が設定されていない場合は、<a href=\"https://docs.aws.amazon.com/ja_jp/vpc/latest/userguide/create-vpc.html\" target=\"_blank\" rel=\"noopener\">Amazon VPC ドキュメント</a>を参照して VPC を作成してください。SAP HANA Cloud インスタンスの設定タブで <strong>AWS PrivateLink Endpoint Service ID </strong>をコピーします。</p> \n<p><img class=\"aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_07.png\"></p> \n<p style=\"text-align: center\">図7: SAP HANA Cloud – PrivateLink Endpoint Service IDs</p> \n<p>AWS コンソールで、Amazon VPC サービスにアクセスし、<a href=\"https://docs.aws.amazon.com/ja_jp/vpc/latest/privatelink/privatelink-access-saas.html\" target=\"_blank\" rel=\"noopener\">パートナーサービス用の VPC インターフェースエンドポイント</a>を作成します。エンドポイント作成画面で、エンドポイントの名前を入力し、タイプに「PrivateLink Ready partner services」を選択します。サービス設定で、HANA Cloud インスタンスの <strong>AWS PrivateLink Endpoint Service ID </strong>をサービス名ボックスに入力します。次に、サービス確認ボタンをクリックします。</p> \n<p><img class=\"aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_08.png\"></p> \n<p style=\"text-align: center\">図 8: Amazon VPC – VPC エンドポイント作成 (1)</p> \n<p>「サービス名が確認されました」という成功メッセージが表示されたら、ネットワーク設定を選択できるようになります。ネットワーク設定で、エンドポイントを作成したい VPC とアベイラビリティーゾーン、サブネットを選択します。SAP HANA Cloud インスタンスが複数の AZ で利用可能な場合、VPC で複数の AZ とサブネットを選択できます。</p> \n<p><img class=\"aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_09.png\"></p> \n<p style=\"text-align: center\">図 9: Amazon VPC – VPC エンドポイント作成 (2)</p> \n<p>このエンドポイントに、 https トラフィックを許可するセキュリティグループを割り当ててください。このブログでは、同 VPC 内のIP アドレス CIDR からの https トラフィックを許可するインバウンドルールを持つ https-from-sap-vpc という名前のセキュリティグループを作成しました。</p> \n<p><img class=\"aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_10_01.png\"></p> \n<p><img class=\"aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_10_02.png\"></p> \n<p style=\"text-align: center\">図 10: Amazon VPC – VPC エンドポイント作成 (3)</p> \n<p>VPCエンドポイントが作成され、ステータスが「使用可能」になったら、エンドポイントの詳細ページからエンドポイント ID をコピーしてください。この ID は、次のステップで HANA Cloud の設定に使用します。DNS ネームをコピーして、後で Route 53 での DNS 設定時に使用します。プライベート IPv4 アドレスをメモしておいてください。これは、プライベートルーティングをテストする最後のステップで確認することができます。</p> \n<h3><img src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_11.png\"></h3> \n<p style=\"text-align: center\">図 11: Amazon VPC – VPC エンドポイントの確認</p> \n<h3>3. Amazon VPC エンドポイントを HANA Cloud インスタンスの許可リストに追加</h3> \n<p>HANA Cloud 管理画面に戻り、HANA Cloud インスタンスの設定を開きます。接続設定画面で、作成した VPC エンドポイント ID を許可リストに追加します。これにより、先ほどの VPC から作成された VPC エンドポイントで HANA Cloud PrivateLink エンドポイントサービスに接続できるようになります。</p> \n<p><img class=\"aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_12.png\"></p> \n<p style=\"text-align: center\">Figure 12: SAP HANA Cloud – VPC エンドポイント ID 許可</p> \n<h3>4. Amazon Route53 でプライベートホストゾーンを設定</h3> \n<p>このステップでは、VPC 用の Amazon Route 53 のプライベートホストゾーンを設定し、HANA Cloud インスタンスへのトラフィックを VPC エンドポイントに向ける DNS レコードを作成します。SAP HANA Cloud 接続の詳細から、SQL エンドポイントアドレスとランドスケープアドレスを確認します。Route 53 DNS 設定と接続テストで使用するため、これらのアドレスをメモしてください。</p> \n<p><img class=\"aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_13.png\"></p> \n<p style=\"text-align: center\">図 13: SAP HANA Cloud – 接続情報確認</p> \n<p>Amazon Route 53 ホストゾーン設定で、以下のように値を設定します。<br> – ドメイン名として HANA Cloud ランドスケープ名を入力<br> – タイプとしてプライベートホストゾーンを選択<br> – ホストゾーンを VPC に関連付けるために VPC ID を選択<br> 次に、ホストゾーンの作成ボタンをクリックします。</p> \n<p><img class=\"aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_14.png\"></p> \n<p style=\"text-align: center\">図 14: Amazon Route 53 – ホストゾーン作成</p> \n<p>作成されたホストゾーン画面で、すべての HANA Cloud へのトラフィックを VPC エンドポイントにルーティングする新しい DNS レコードを作成します。</p> \n<p><img class=\"aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_15.png\"></p> \n<p style=\"text-align: center\">図 15: Amazon Route 53 – DNS レコード作成</p> \n<h3>5. VPC 内から HANA Cloud へのプライベートルーティングをテスト</h3> \n<p>設定完了後、VPC 内の EC2 インスタンスから dig または nslookup コマンドを実行して、HANA Cloud インスタンスへのトラフィックが VPC エンドポイントのプライベート IP アドレスに向かっていることを確認します。HANA Cloud エンドポイント URL でこれらのコマンドを実行すると、VPC エンドポイントのプライベート IP アドレスが応答されます。</p> \n<p><img class=\"aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_16.png\"></p> \n<p style=\"text-align: center\">図 16: コマンドでプライベートルーティングを確認</p> \n<p>hdbsql コマンドで HANA Cloud エンドポイントへのデータベース接続を確認します。</p> \n<p><img class=\"aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_17.png\"></p> \n<p style=\"text-align: center\">図 17: hdbsql コマンドでデータベース接続を確認</p> \n<h3>6. インバウンド DNS クエリ転送用のリゾルバーを設定（RISE またはオンプレミスネットワークでのユースケース 1 でのみ必要）</h3> \n<p>Route 53 プライベートホストゾーンは AWS アカウントの VPC 内に設定されているため、この VPC からのトラフィックにのみ影響します。ユースケース 1 で、RISE またはオンプレミスネットワークから HANA Cloud へのトラフィックも VPC エンドポイントを通過させたい場合は、<a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/resolver-forwarding-inbound-queries.html\">Route 53 インバウンドリゾルバー</a>を使用し、ネットワークからこのリゾルバーに DNS を転送する必要があります。</p> \n<p>詳細な手順は <a href=\"https://docs.aws.amazon.com/ja_jp/Route53/latest/DeveloperGuide/resolver-forwarding-inbound-queries-configuring.html\" target=\"_blank\" rel=\"noopener\">Route 53 ドキュメント</a> を参照してください。下記の画面は、VPC 内に作成されたインバウンドエンドポイントのサンプルで、2 つのサブネットに 2 つのプライベートIPアドレスが割り当てられています。これらの IP アドレスは、RISE やオンプレミスネットワークでの DNS 設定に使用することができます。</p> \n<p><img class=\"aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_18.png\"></p> \n<p style=\"text-align: center\">図 18: Amazon Route 53 – インバウンドリゾルバー</p> \n<h2>高可用性</h2> \n<p>AWS PrivateLink の高可用性アーキテクチャは、複数のアベイラビリティーゾーン（ AZ ）を通じて堅牢で回復力のある接続を提供し、重要なビジネス運用のための継続的なサービス可用性を確保します。図 19 は、複数の AZ にまたがるエンドポイントネットワークインターフェースで AWS PrivateLink を実装することで、自動フェイルオーバー機能を実現し、ネットワークアーキテクチャにおける単一障害点を排除できることを示しています。この分散設計により、ある AZ が使用不可能になった場合でも、トラフィックは自動的に正常なエンドポイントにルーティングされ、アプリケーションやサービスへのシームレスな接続が維持されます。</p> \n<p>これにより、アプリケーションの信頼性が向上し、ダウンタイムのリスクが軽減され、パフォーマンスが安定するとともに、プライベート接続のセキュリティ上の利点も得られます。さらに、AWS PrivateLink と Amazon Route 53 DNS サービスとの統合により、インテリジェントなルーティングとヘルスチェックが可能となり、ソリューション全体の可用性と耐障害性が向上します。この包括的な高可用性の実装により、セキュアでプライベートなネットワーク通信を維持しながら、厳格なビジネス継続性要件を満たすことができます。</p> \n<p>以下のアーキテクチャは、Network Load Balancer を通じて 2 つの AZ に跨って HA がどのように機能するかを説明しています。</p> \n<p style=\"text-align: center\"><a href=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_19.png\"><img loading=\"lazy\" class=\"size-full wp-image-8548 aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_19.png\" alt=\"図19：高可用性を備えたAWS PrivateLink\" width=\"920\" height=\"385\"></a>図19：高可用性を備えた AWS PrivateLink</p> \n<h2>価格例</h2> \n<p>このブログの公開時点では、SAP HANA Cloud で AWS PrivateLink を有効にする際、SAP BTP で追加料金は発生しません。SAP が Network Load Balancer の実装と有効化を実施します。ご自身の AWS アカウントで作成されたリソースに対してのみ課金されます。</p> \n<p>例えば、高可用性ありとなしでのお客様の AWS アカウントでの AWS PrivateLink のコストを比較してみましょう。両方のオプションは、この<a href=\"https://calculator.aws/#/estimate?id=675147ff211d0e3089cbdfa7dbba55d8c47980fe\" target=\"_blank\" rel=\"noopener\"> AWS 料金計算ツールリンク</a> にあります。</p> \n<p><img class=\"aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_20-1.png\"></p> \n<p style=\"text-align: center\">図20: 料金の例</p> \n<h2>次のステップ</h2> \n<p>AWS PrivateLink の詳細については、AWS ドキュメント<a href=\"https://docs.aws.amazon.com/ja_jp/vpc/latest/privatelink/what-is-privatelink.html\" target=\"_blank\" rel=\"noopener\">「AWS PrivateLink とは？」</a>、<a href=\"https://docs.aws.amazon.com/ja_jp/vpc/latest/userguide/endpoint-services-overview.html\" target=\"_blank\" rel=\"noopener\">「AWS PrivateLink を使用して VPC をサービスに接続する」</a>、およびAWSホワイトペーパー<a href=\"https://docs.aws.amazon.com/ja_jp/whitepapers/latest/aws-vpc-connectivity-options/aws-privatelink.html\" target=\"_blank\" rel=\"noopener\">「AWS PrivateLink」</a>を参照してください。</p> \n<p>同様に、詳細については SAP HANA Cloud <a href=\"https://help.sap.com/docs/hana-cloud?locale=en-US&amp;state=PRODUCTION&amp;version=hanacloud\" target=\"_blank\" rel=\"noopener\">オンラインドキュメント</a> と&nbsp;<a href=\"https://help.sap.com/docs/hana-cloud-database/sap-hana-cloud-sap-hana-database-administration-guide/sap-hana-cloud-sap-hana-database-administration-guide\" target=\"_blank\" rel=\"noopener\">SAP HANA Cloud データベース管理ガイド</a> を参照してください。</p> \n<p>AWS アカウントチームと AWS サポートチャネルに加えて、AWS コミュニティ向けの Q&amp;A 体験である <a href=\"https://repost.aws/\">re:Post</a> を開始しました。AWS for SAP ソリューションアーキテクチャチームは、お客様とパートナーを支援するために回答できる議論と質問について、AWS for SAP トピックを定期的に監視しています。質問がサポート関連でない場合は、re:Post での議論に参加し、コミュニティの知識ベースに貢献することを検討してください。</p> \n<h2>クレジット</h2> \n<p>このブログへの貢献に対して、Derek Ewell、Ferry Mulyadi、Diego Lombardini、Eneko Bilbaoに感謝いたします。</p> \n<p>翻訳は Specialist SA トゥアンが担当しました。原文は<a href=\"https://aws.amazon.com/blogs/awsforsap/secure-sap-hanacloud-connectivity-using-aws-privatelink/\" target=\"_blank\" rel=\"noopener\">こちら</a>です。</p>"
  },
  {
    "title": "AWS Weekly Roundup: Amazon Bedrock、AWS Outposts、Amazon ECS マネージドインスタンス、AWS ビルダー ID など (2025 年 10 月 6 日)",
    "date": "2025-10-09T09:17:49.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/aws-weekly-roundup-amazon-bedrock-aws-outposts-amazon-ecs-managed-instances-aws-builder-id-and-more-october-6-2025/",
    "content": "<p>9 月 29 日週、SWE-Bench によって世界最高のコーディングモデルと評価されている Anthropic の Claude Sonnet 4.5 が、<a href=\"https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/command-line.html\">Amazon Q コマンドラインインターフェイス (CLI)</a> と <a href=\"https://kiro.dev/\">Kiro</a> でご利用いただけるようになりました。このことに高揚感を覚えている理由は 2 つあります:</p> \n<p>まず、私は数週間前に世界中のお客様と 4 日間にわたって集中的に AI 支援開発ワークショップを開催し、<a href=\"https://aws.amazon.com/q/\">Amazon Q</a> CLI がデベロッパーの生産性をいかに向上させるかを実際に体験しました。ワークショップ中、お客様は Amazon Q CLI を使用して 1 日でアプリケーションに新しい特徴量を追加することができました。これは従来であれば少なくとも 2 週間はかかっていた作業です。Amazon Q CLI で Anthropic の Claude Sonnet 4.5 が使用できるようになることで、デベロッパーの生産性がさらに向上すると確信しています。</p> \n<p>2 つ目として、私は <a href=\"https://reinvent.awsevents.com/\">AWS re:Invent 2025</a> でのコードトークの準備を始めました。このコードトークでは、私と共同講演者が Kiro を使用してレガシーコードベースをモダナイズするライブコーディングを行います。Kiro で Anthropic の Claude Sonnet 4.5 を使用してライブデモを作成するのが待ちきれません。このデモや、クラウドと AI に関する 1,000 を超える他のセッションをご覧になりたい方は、12 月 1 日から 5 日までラスベガスで開催される <a href=\"https://reinvent.awsevents.com/\">AWS re:Invent 2025</a> にぜひご参加ください。</p> \n<p><strong><span style=\"text-decoration: underline\">9 月 29 日週のリリース</span></strong><br> 私が注目したリリースをいくつかご紹介します。</p> \n<ul> \n <li><a href=\"https://aws.amazon.com/blogs/aws/introducing-claude-sonnet-4-5-in-amazon-bedrock-anthropics-most-intelligent-model-best-for-coding-and-complex-agents/\">Amazon Bedrock で Claude Sonnet 4.5 が使用可能に</a> – コーディングと複雑なエージェントに最適な、Anthropic の最もインテリジェントなモデルが、Amazon Bedrock でご利用いただけるようになりました。Amazon Bedrock で Claude Sonnet 4.5 を利用することで、デベロッパーは、基盤モデル (FM) 用の統合 API を提供するだけでなく、セキュリティと最適化を実現するためのエンタープライズグレードのツールによってデータを完全に制御できるようにする、フルマネージドサービスにアクセスできます。</li> \n <li><a href=\"https://aws.amazon.com/blogs/aws/announcing-aws-outposts-third-party-storage-integration-with-dell-and-hpe/\">AWS Outposts が Dell および HPE とのサードパーティーストレージ統合をサポート</a> – AWS Outposts のサードパーティーストレージ統合に、<a href=\"https://www.dell.com/en-us/shop/storage-servers-and-networking-for-business/sf/power-store\">Dell PowerStore</a> および <a href=\"https://www.hpe.com/us/en/storage/alletra.html\">HPE Alletra Storage MP B10000</a> システムが含まれるようになりました。これらは、<a href=\"https://aws.amazon.com/blogs/aws/announcing-aws-outposts-third-party-storage-integration-with-dell-and-hpe/#:~:text=NetApp%20on%2Dpremises%20enterprise%20storage%20arrays\">NetApp オンプレミスエンタープライズストレージアレイ</a>および <a href=\"https://aws.amazon.com/blogs/aws/announcing-aws-outposts-third-party-storage-integration-with-dell-and-hpe/#:~:text=Pure%20Storage%20FlashArray\">Pure Storage FlashArray</a> との既存の統合リストに加わりました。この統合には、主に 3 つの目的があります。1 つ目は、お客様が既存のストレージインフラストラクチャを維持しながら VMware ワークロードを AWS に移行するのをサポートすることです。2 つ目は、お客様が AWS サービスを利用しながらデータをオンプレミスに保持することで、厳格なデータレジデンシー要件を満たすのをサポートすることです。3 つ目として、この統合により、お客様は、AWS ツールを通じてサードパーティーストレージアレイとともに AWS Outposts を利用できます。</li> \n <li><a href=\"https://aws.amazon.com/blogs/aws/announcing-amazon-ecs-managed-instances-for-containerized-applications/\">Amazon ECS マネージドインスタンスが利用可能に</a> – コンテナ化されたアプリケーション向けの Amazon ECS マネージドインスタンスは、Amazon ECS 向けの新しいフルマネージドコンピューティングオプションであり、インフラストラクチャ管理のオーバーヘッドを排除しながら、Amazon EC2 の全機能を使用できるように設計されています。ECS マネージドインスタンスは、ワークロードを迅速に起動およびスケールするとともに、パフォーマンスを改善し、総保有コストを削減するのに役立ちます。</li> \n <li><a href=\"https://aws.amazon.com/about-aws/whats-new/2025/10/application-map-generally-available-amazon-cloudwatch/\">Amazon CloudWatch でアプリケーションマップの一般提供を開始</a> – Amazon CloudWatch は、設定とその関係に基づいてサービスを自動的に検出し、グループに整理することで、大規模な分散アプリケーションをモニタリングするのをサポートします。この新しいアプリケーションパフォーマンスモニタリング (APM) 機能を使用すると、分散アプリケーションのトラブルシューティング時に、どのアプリケーションと依存関係に重点を置くべきかを迅速に視覚化できます。</li> \n <li><a href=\"https://aws.amazon.com/about-aws/whats-new/2025/10/open-source-mcp-server-amazon-bedrock-agentcore/\">Amazon Bedrock AgentCore モデルコンテキストプロトコル (MCP) サーバーが使用可能に</a> – ランタイム、ゲートウェイ統合、ID 管理、エージェントメモリのサポートが組み込まれた AgentCore MCP サーバーは、Bedrock AgentCore と互換性のあるコンポーネントの作成を高速化するために特別に構築されています。AgentCore MCP サーバーは、ラピッドプロトタイピング、本番 AI ソリューション、またはエージェントインフラストラクチャのスケールに使用できます。</li> \n</ul> \n<p><span style=\"text-decoration: underline\"><strong>その他のアップデート<br> </strong></span>以下では、私が興味深いと思った他のニュースやブログ記事をいくつかご紹介します:</p> \n<ul> \n <li><a href=\"https://aws.amazon.com/about-aws/whats-new/2025/10/aws-builder-id-sign-in-google/\">AWS ビルダー ID が「Google でログイン」をサポート</a> –「Google でログイン」を使用して AWS ビルダー ID を作成できるようになりました。AWS ビルダー ID は、Kiro、AWS Builder Center、AWS トレーニングと認定、AWS re:Post、AWS スタートアップなどの AWS アプリケーションへのアクセスを提供する個人プロファイルです。</li> \n <li><a href=\"https://aws.amazon.com/about-aws/whats-new/2025/10/aws-api-mcp-server-v1-0-0-release/\">AWS API MCP サーバー v1.0.0 リリース</a> – AWS API MCP サーバーは、AI アシスタントと AWS サービスの間のブリッジとして機能し、構文的に正しい CLI コマンドを作成して実行することで、基盤モデルが自然言語を通じてあらゆる AWS API とインタラクションできるようにします。AWS API MCP サーバーはオープンソースであり、<a href=\"https://github.com/awslabs/mcp/tree/main/src/aws-api-mcp-server\">AWS ラボ GitHub リポジトリ</a>で現在入手可能です。</li> \n <li><a href=\"https://aws.amazon.com/about-aws/whats-new/2025/10/aws-knowledge-mcp-server-generally-available/\">AWS Knowledge MCP サーバーの一般提供を開始</a> – AWS Knowledge サーバーは、AI エージェントと MCP クライアントに、ドキュメント、ブログ記事、新機能のお知らせ、Well-Architected ベストプラクティスなどの信頼できる情報を LLM 互換形式で提供します。このリリースでは、AWS API と CloudFormation のリソースが利用できるリージョンに関する情報もサーバーに含まれます。</li> \n <li><a href=\"https://aws.amazon.com/about-aws/whats-new/2025/09/aws-transform-terraform-vmware-network-automation/\">AWS Transform で VMware ネットワークオートメーションのために Terraform が使用可能に</a> – AWS Transform は、VMware 環境からネットワークインフラストラクチャコードを自動的に生成するための追加オプションとして Terraform を提供するようになりました。このサービスは、ソースネットワーク定義を再使用可能な Terraform モジュールに変換し、現在の AWS CloudFormation と AWS Cloud Development Kit (CDK) のサポートを補完します。</li> \n</ul> \n<p><span style=\"text-decoration: underline\"><strong>近日開催予定の AWS イベント</strong></span><br> カレンダーを確認して、近日開催予定の AWS イベントにサインアップしましょう。</p> \n<ul> \n <li><a href=\"https://info.devpost.com/blog/aws-ai-agent-global-hackathon?trk=c4ea046f-18ad-4d23-a1ac-cdd1267f942c&amp;sc_channel=el\">AWS AI Agent Global Hackathon</a> – AWS の強力な生成 AI スタックを掘り下げて、目を見張るようなすばらしいソリューションを創り出すチャンスです。9 月 8 日から 10 月 20 日までの期間、AWS の AI サービススイートを使用して AI エージェントを作成し、45,000 USD を超える賞金と独占的な市場参入の機会の獲得に向けて競い合いましょう。</li> \n <li><a href=\"https://aws.amazon.com/startups/lp/aws-gen-ai-lofts?trk=c4ea046f-18ad-4d23-a1ac-cdd1267f942c&amp;sc_channel=el\">AWS Gen AI Loft</a> – 特別セッションで AWS の AI 製品とサービスについて学び、業界をリードするエキスパートと交流して、投資家や同業者との有益なネットワーキングの機会を得ることができます。最寄りの都市でご登録ください: <a href=\"https://aws.amazon.com/startups/lp/aws-gen-ai-loft-paris?trk=c4ea046f-18ad-4d23-a1ac-cdd1267f942c&amp;sc_channel=el\">パリ</a> (10 月 7 日～21 日)、<a href=\"https://aws.amazon.com/startups/lp/aws-gen-ai-loft-london?trk=c4ea046f-18ad-4d23-a1ac-cdd1267f942c&amp;sc_channel=el\">ロンドン</a> (10 月 13 日～21 日)、<a href=\"https://aws.amazon.com/startups/lp/aws-gen-ai-loft-tel-aviv?trk=c4ea046f-18ad-4d23-a1ac-cdd1267f942c&amp;sc_channel=el\">テルアビブ</a> (11 月 11 日～19 日)。</li> \n <li><a href=\"https://aws.amazon.com/events/community-day/?trk=c4ea046f-18ad-4d23-a1ac-cdd1267f942c&amp;sc_channel=el\">AWS Community Days</a> – 世界中の AWS ユーザーや業界リーダーによる技術的なディスカッション、ワークショップ、ハンズオンラボを特徴とする、コミュニティ主導のカンファレンスにぜひご参加ください: <a href=\"https://www.aws-community-day.de/\">ミュンヘン</a> (10 月 7 日)、<a href=\"https://awscommunity.eu/\">ブダペスト</a> (10 月 16 日)。</li> \n</ul> \n<p><a href=\"https://aws.amazon.com/events/explore-aws-events?trk=c4ea046f-18ad-4d23-a1ac-cdd1267f942c&amp;sc_channel=el\">今後開催されるすべての AWS イベント</a>と <a href=\"https://aws.amazon.com/startups/events?trk=c4ea046f-18ad-4d23-a1ac-cdd1267f942c&amp;sc_channel=el\">AWS スタートアップイベント</a>をご覧いただけます。</p> \n<p>10 月 6 日週のニュースは以上です。10 月 13 日週にお届けする次回の <a href=\"https://aws.amazon.com/blogs/aws/tag/week-in-review/?trk=7c8639c6-87c6-47d6-9bd0-a5812eecb848&amp;sc_channel=el\">Weekly Roundup</a> もお楽しみに!</p> \n<p>– <a href=\"https://www.linkedin.com/in/kprasadrao/\">Prasad</a></p> \n<p>原文は<a href=\"https://aws.amazon.com/jp/blogs/aws/aws-weekly-roundup-amazon-bedrock-aws-outposts-amazon-ecs-managed-instances-aws-builder-id-and-more-october-6-2025/\">こちら</a>です。</p>"
  },
  {
    "title": "コンテナ化されたアプリケーション用の Amazon ECS マネージドインスタンスの発表",
    "date": "2025-10-09T08:59:46.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/announcing-amazon-ecs-managed-instances-for-containerized-applications/",
    "content": "<p>9 月 30 日、Amazon ECS マネージドインスタンスを発表しました。これは <a href=\"https://aws.amazon.com/ecs/\">Amazon Elastic Container Service (Amazon ECS)</a> の新しいコンピューティングオプションです。開発者はインフラストラクチャ管理の責任を <a href=\"https://aws.amazon.com\">Amazon Web Services (AWS)</a> にオフロードしながら、<a href=\"https://aws.amazon.com/ec2\">Amazon Elastic Compute Cloud (Amazon EC2)</a> の全機能を使用できるようになります。この新しいサービスは、インフラストラクチャのオフロードによる運用のシンプルさと Amazon EC2 の柔軟性および制御を組み合わせたものです。つまり、お客様は総保有コスト (TCO) を削減し、AWS のベストプラクティスを維持しながら、イノベーションを推進するアプリケーションの構築に集中することができます。</p> \n<p>弊社では、コンテナ化されたワークロードを実行しているお客様から、サーバーレスのシンプルさとセルフマネージド EC2 インスタンスの柔軟性を組み合わせたいというご要望をいただいていました。サーバーレスオプションは優れた汎用ソリューションを提供しますが、アプリケーションによっては GPU アクセラレーション、特定の CPU アーキテクチャ、またはネットワークパフォーマンスの強化など、特定のコンピューティング機能が必要となります。さらに、EC2 料金オプションを通じて既に Amazon EC2 キャパシティに投資してくださったお客様は、これらのコミットメントをサーバーレスサービスで十分に活用することができませんでした。</p> \n<p>Amazon ECS マネージドインスタンスは、さまざまな EC2 インスタンスタイプと AWS サービスとの密な統合をサポートする、フルマネージドのコンテナコンピューティング環境を提供します。デフォルトでは、ワークロードに最適なコストの EC2 インスタンスが自動的に選択されますが、必要に応じて特定のインスタンス属性またはタイプを指定できます。AWS がプロビジョニング、スケーリング、セキュリティパッチ処理、コスト最適化など、インフラストラクチャ管理のすべての側面を処理するため、お客様はアプリケーションの構築と実行に集中することが可能です。</p> \n<p><span style=\"text-decoration: underline\"><strong>試してみましょう</strong></span></p> \n<p>新しい Amazon ECS クラスターを作成する <a href=\"https://aws.amazon.com/console/\">AWS マネジメントコンソール</a>のエクスペリエンスを見てみると、ECS マネージドインスタンスを使用するための新しいオプションだということがわかります。それでは、すべての新しいオプションについて簡単に見ていきましょう。</p> \n<p><img loading=\"lazy\" class=\"alignnone size-large wp-image-99478\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/09/24/Screenshot-2025-09-24-at-10.51.19 AM-1024x502.png\" alt=\"マネージドインスタンスを使用した ECS クラスターの作成\" width=\"1024\" height=\"502\"></p> \n<p><strong>[Fargate とマネージドインスタンス]</strong> を選択すると、2 つのオプションが表示されます。<strong>[ECS デフォルトを使用]</strong> を選択すると、Amazon ECS は保留中のタスクをグループ化して汎用インスタンスタイプを選択し、コストと耐障害性のメトリクスに基づいて最適なインスタンスタイプを選択します。これが最もわかりやすい、お勧めの開始方法です。<strong>[カスタムを使用 – 詳細]</strong> を選択すると、Amazon ECS が使用するインスタンスの属性をファインチューニングできる追加の設定パラメータが開きます。</p> \n<p><img loading=\"lazy\" class=\"alignnone size-large wp-image-99479\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/09/24/Screenshot-2025-09-24-at-12.59.44 PM-1024x593.png\" alt=\"マネージドインスタンスを使用した ECS クラスターの作成\" width=\"1024\" height=\"593\"></p> \n<p>デフォルトでは、<strong>CPU</strong> と<strong>メモリ</strong>は属性として表示されますが、さらに 20 個の属性から選択し、Amazon ECS がアクセスできる使用可能なインスタンスタイプのリストを引き続きフィルタリングすることができます。</p> \n<p><img loading=\"lazy\" class=\"alignnone size-large wp-image-99480\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/09/24/Screenshot-2025-09-24-at-12.59.44 PM-1-1024x593.png\" alt=\"マネージドインスタンスを使用した ECS クラスターの作成\" width=\"1024\" height=\"593\"></p> \n<p>属性を選択すると、選択に一致するすべてのインスタンスタイプのリストが表示されます。</p> \n<p><img loading=\"lazy\" class=\"alignnone size-large wp-image-99484\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/09/24/Screenshot-2025-09-24-at-12.59.57 PM-1-1024x466.png\" alt=\"マネージドインスタンスを使用した ECS クラスターの作成\" width=\"1024\" height=\"466\"></p> \n<p>ここから、通常どおり ECS クラスターを作成できます。Amazon ECS は、前のステップで定義した属性と基準に基づき、私に代わってインスタンスをプロビジョニングします。</p> \n<p><span style=\"text-decoration: underline\"><strong>Amazon ECS マネージドインスタンスの主な特徴量</strong></span></p> \n<p>Amazon ECS マネージドインスタンスでは、AWS がインフラストラクチャ管理の全責任を負い、インスタンスのプロビジョニング、スケーリング、メンテナンスのすべての側面を処理します。これには、14 日ごとに開始される定期的なセキュリティパッチの実装 (インスタンスの Connection Draining により、インスタンスの実際の存続期間が長くなる場合があります) や、アプリケーションの中断を最小限に抑えるために Amazon EC2 イベントウィンドウを使用してメンテナンスウィンドウをスケジュールする機能が含まれます。</p> \n<p>このサービスでは、インスタンスタイプを非常に柔軟に選択できます。デフォルトではコスト最適化されたインスタンスタイプが自動的に選択されますが、ワークロードにおいて特定の機能が必要な場合、必要なインスタンス属性を指定することができます。これには GPU アクセラレーション、CPU アーキテクチャ、ネットワークパフォーマンス要件のオプションが含まれており、コンピューティング環境を正確に制御できます。</p> \n<p>Amazon ECS マネージドインスタンスはコストを最適化するために、必要に応じて複数のタスクをより大きなインスタンスに自動的に割り当てることにより、リソースの使用率をインテリジェントに管理します。このサービスはタスク配置を継続的に監視および最適化し、ワークロードを少数のインスタンスに統合してアイドル (空の) 状態のインスタンスを枯渇させ、利用および終了することで、コンテナ化されたアプリケーションの可用性とコスト効率の両方を高めます。</p> \n<p>既存の AWS サービス、特に EC2 料金オプションなどの Amazon EC2 特徴量との統合はシームレスです。この密な統合により、フルマネージドサービスの運用のシンプルさを維持しながら、既存のキャパシティ投資を最大限に活用することができます。</p> \n<p>Amazon ECS マネージドインスタンスでは、引き続きセキュリティが最優先事項です。このサービスは、専用のコンテナオペレーティングシステムである Bottlerocket 上で動作し、自動化されたセキュリティパッチとアップデートを通じてお客様のセキュリティ体制を維持します。Bottlerocket OS イメージに適用されたすべてのアップデートとパッチは、<a href=\"https://bottlerocket.dev/en/os/\">Bottlerocket のウェブサイト</a>で確認できます。この包括的なセキュリティへのアプローチにより、コンテナ化されたアプリケーションを安全かつ管理された環境で引き続き実行することができます。</p> \n<p><span style=\"text-decoration: underline\"><strong>今すぐご利用いただけます</strong></span></p> \n<p>Amazon ECS マネージドインスタンスは現在、米国東部 (バージニア北部)、米国西部 (オレゴン)、欧州 (ダブリン)、アフリカ (ケープタウン)、アジアパシフィック (シンガポール)、アジアパシフィック (東京) の AWS リージョンでご利用いただけます。マネージドインスタンスは、AWS マネジメントコンソール、AWS コマンドラインインターフェイス (AWS CLI)、または AWS Cloud Development Kit (AWS CDK) や AWS CloudFormation などの Infrastructure as Code (IaC) ツールから使用を開始できます。使用する EC2 インスタンスの料金と、サービスの管理料金が請求されます。</p> \n<p>Amazon ECS マネージドインスタンスの詳細については、<a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ManagedInstances.html\">ドキュメント</a>をご覧ください。コンテナインフラストラクチャの簡素化を今すぐ始めましょう。</p> \n<p>原文は<a href=\"https://aws.amazon.com/jp/blogs/aws/announcing-amazon-ecs-managed-instances-for-containerized-applications/\">こちら</a>です。</p>"
  },
  {
    "title": "【自動車業界】SDV時代の車載ソフトウエア開発を支えるAWSソリューション（Vector SDV Symposium Japan 2025で発表）",
    "date": "2025-10-09T05:39:28.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/automotive_vector_sdv_symposium_2025_aws_session/",
    "content": "<h2>はじめに</h2> \n<p>みなさんこんにちは、ソリューションアーキテクトの眞壽田（ますた）です。2025年9月18日に開催された「Vector SDV Symposium Japan 2025」にて、AWSのソリューションアーキテクトとして「SDV時代の車載ソフトウエア開発を支えるAWSソリューション」というテーマでセッションを担当させていただきました。Software-Defined Vehicle（SDV）の波が自動車産業を大きく変革している今、クラウドテクノロジーがどのように車載ソフトウェア開発の課題を解決し、イノベーションを加速させるのか。本セッションでは、仮想開発環境や仮想ECU技術を使ったテストの効率化まで、AWSが提供するソリューションについて紹介しました。</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/aws_masutah_202510_01.jpg\"><img loading=\"lazy\" class=\"alignnone size-medium wp-image-166545\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/aws_masutah_202510_01-300x225.jpg\" alt=\"\" width=\"300\" height=\"225\"></a></p> \n<p>この記事では、セッションの内容を詳しく解説するとともに、SDV時代におけるクラウドの可能性について掘り下げていきたいと思います。</p> \n<h2>これまでのSDV事例のおさらい</h2> \n<p>SDV時代を見据え、AWSを活用して車載ソフトウエア開発の効率化を目指した自動車メーカー様の事例は次の通りです。詳細はリンクやブログを参照頂ければと思います。</p> \n<p><strong>1. ステランティス　Virtual Engineering Workbench（VEW）2022年 <a href=\"https://www.youtube.com/watch?v=9Tse4B-fnbI\" target=\"_blank\" rel=\"noopener\">youtube</a> <a href=\"https://aws.amazon.com/blogs/industries/stellantis-sdv-transformation-with-the-virtual-engineering-workbench-on-aws/\" target=\"_blank\" rel=\"noopener\">blog</a></strong><br> <strong>2. BMW Operating System 9 2023年 <a href=\"https://aws.amazon.com/jp/solutions/case-studies/bmw-software-defined-vehicles/\" target=\"_blank\" rel=\"noopener\">link</a></strong><br> <strong>3. 本田技研工業株式会社　Digital Proving Ground 2023年 <a href=\"https://www.youtube.com/watch?v=eS2yqxDE-08\" target=\"_blank\" rel=\"noopener\">youtube</a></strong></p> \n<p>これらの事例に共通するAWSのソリューションを、次の章でじっくり紹介していきたいと思います。</p> \n<h2>SDV開発を支援するAWSのソリューション</h2> \n<p>自動車産業がソフトウェア定義車両（SDV）へと急速に進化する中、AWSは自動車メーカーが直面する複雑な課題に対して、包括的な支援フレームワークを提供しています。この図が示すように、AWSの支援は三つの主要な柱を中心に構成されています。</p> \n<p>これらの柱に加え、AWSはデジタル人材の育成支援やパートナーとの連携を通じて、自動車メーカーのSDV開発を包括的にサポートしています。この統合的なアプローチにより、お客様は従来の開発モデルからソフトウェア中心の開発へとスムーズに移行し、次世代モビリティの創造に専念することができます。</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/aws_masutah_202510_02.png\"><img loading=\"lazy\" class=\"size-full wp-image-166546\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/aws_masutah_202510_02.png\" alt=\"SDV開発を支援するAWSのソリューション\" width=\"2290\" height=\"1286\"></a></p> \n<h2>自動車業界におけるオンプレミスの開発環境に対する課題</h2> \n<p>以下の例は、AWSがお客様からよく聞く課題をAWSの生成AIのサービス（<a href=\"https://aws.amazon.com/jp/bedrock\" target=\"_blank\" rel=\"noopener\">Amazon Bedrock</a>）でストーリー調に仕立てたものです。</p> \n<blockquote> \n <p style=\"padding-left: 40px\"><em>ある自動車メーカーの制御ECU開発部門では100名以上のエンジニアがモデルベース開発（MBD）環境を使って制御ソフトウェアの開発に取り組んでいます。「開発環境の構築と維持が私たちの最大の頭痛の種なんです」とAさんは語ります。</em><br> <em>「昨年、新たなプロジェクトが始まった時、各エンジニアの開発PC調達だけで数ヶ月を要しました。そして機材が到着した後も、必要なツールのインストールに数週間を費やしました。開発に必要なツール群は多岐にわたり、互換性の問題も頻発します。詳細なインストールマニュアルを整備する専任スタッフまで配置したのですが、それでも約2割のエンジニアが環境構築に失敗し、Q&amp;A対応に追われました」とAさんは振り返ります。</em><br> <em>「さらに、一度環境を構築できても問題は続きます。シミュレーションやテスト実行中はPCリソースが占有されるため、他の作業が事実上不可能になります。また社外エンジニアとの協業においては、セキュリティ上の制約から開発PC利用に制限がかかることも少なくありません。また、すべての開発PCに対するセキュリティパッチの適用にも膨大な時間を要します。静的解析やテスト、シミュレーションの実行にも長時間を要し、開発サイクル全体が遅延する要因となっていました」とAさんは説明します。</em></p> \n</blockquote> \n<p>このような開発環境では、ソフトウエアの開発量が増大するSDV時代に対応することは難しくなります。そこでAWSは、従来のオンプレミスでの開発環境の課題解決のために、主に次の２つのソリューションを提供しています。</p> \n<h2>開発環境課題を解決するためのAWSソリューション ２選</h2> \n<h3>1. Research and Engineering Studio on AWS (RES)</h3> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/aws_masutah_202510_03.png\"><img loading=\"lazy\" class=\"size-full wp-image-166547\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/aws_masutah_202510_03.png\" alt=\"Research and Engineering Studio on AWS (RES)\" width=\"2296\" height=\"1282\"></a></p> \n<p>RESに関する情報　<a href=\"https://github.com/aws/res\" target=\"_blank\" rel=\"noopener\">GitHub</a>　<a href=\"https://docs.aws.amazon.com/res/\" target=\"_blank\" rel=\"noopener\">AWS Document</a>　<a href=\"https://aws.amazon.com/blogs/hpc/new-research-and-engineering-studio-on-aws/\" target=\"_blank\" rel=\"noopener\">AWS Blog</a>　<a href=\"https://www.youtube.com/watch?v=M0rc0Rwj6Tg\" target=\"_blank\" rel=\"noopener\">YouTube</a></p> \n<p>RESの特徴的な機能として、<strong>専用ウェブポータルからデスクトップ環境を簡単に作成</strong>できることが挙げられます。<strong>各プロジェクトでデスクトップイメージを保存</strong>し、チームメンバーがそれを必要に応じてデプロイできる柔軟性も備えています。さらに、共有データストアを活用した共同作業環境の構築や、既存のID管理インフラ（AWS Managed Microsoft AD）との統合も実現しています。<br> 先ほどの車載ソフトウエア開発の例では、RESを導入することで彼らの課題を以下のように解決できます：</p> \n<ol> \n <li><strong>迅速な環境構築</strong>: 専用ウェブポータルからデスクトップ環境を短時間で作成でき、数ヶ月かかっていたPC調達・環境構築のプロセスを大幅に短縮</li> \n <li><strong>環境の標準化と再利用</strong>: プロジェクト毎にデスクトップイメージを保存し、チームメンバーが即座にデプロイできるため、環境構築の失敗によるQ&amp;A対応の負担が限りなく軽減される</li> \n <li><strong>共同作業の効率化</strong>: 共有データストアを活用した共同作業が可能となり、OEM、サプライヤーが所属するチームのコラボレーションが促進される</li> \n <li><strong>セキュリティの強化と簡素化</strong>: 既存のID管理インフラ（AWSマネージドAD）との統合により、社外エンジニアとの協業におけるセキュリティ課題が解決され、一元的なセキュリティ管理が可能</li> \n <li>メンテナンス作業の軽減: セキュリティパッチを当てた開発環境をイメージとして保存することで、開発者は最新の環境をデプロイすることが可能</li> \n</ol> \n<h3>2. Virtual Engineering Workbench (VEW)</h3> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/aws_masutah_202510_04.png\"><img loading=\"lazy\" class=\"size-full wp-image-166548\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/aws_masutah_202510_04.png\" alt=\"Virtual Engineering Workbench (VEW)\" width=\"2290\" height=\"1288\"></a></p> \n<p>ステランティスの事例で紹介したVirtual Engineering Workbenchは、AWSのソリューションとしても展開しています。<br> このソリューションは、前述のRESで提供する開発環境やシミュレーション環境だけではなく、特定の仮想ECUのイメージも管理することで、今まで評価ボードを調達しなければECUのテストができなかった機能テストや結合テストが、仮想環境で実現することを可能とします。ステランティスの事例では、Github actionsやArtifactoryを用いたDevOpS環境の構築と、そのWorkflowで作成したアーティファクトの仮想ECUのバイナリファイルを、専用線で接続したオンプレミスのHILS環境へ連携するユースケースも実現しています。ご興味のある方は、こちらの<a href=\"https://aws.amazon.com/blogs/industries/stellantis-sdv-transformation-with-the-virtual-engineering-workbench-on-aws/\" target=\"_blank\" rel=\"noopener\">ブログ</a>もご覧ください。</p> \n<h2>Shift Leftを実現する仮想ECU技術</h2> \n<p>車載ソフトウエア開発のV字モデルの開発プロセスでは、ECU間の結合テストがV字の右側（後半）で実施されることがありました。右側の段階で不具合が発見されると、開発の手戻りが大きくなり、コストや時間の増大につながっており、多くのお客様が仮想ECUに興味を持っていただいています。</p> \n<h3>1. AWS Graviton と ARM on ARM技術</h3> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/aws_masutah_202510_05.png\"><img loading=\"lazy\" class=\"alignnone size-full wp-image-166549\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/aws_masutah_202510_05.png\" alt=\"\" width=\"1511\" height=\"844\"></a></p> \n<p>AWSはARMアーキテクチャを採用したデータセンター向けLSIであるGravitonを自ら設計し、2015年にLSI設計会社のAnnapuruna Labsを完全子会社化することでその技術基盤を強化しました。特に自動車開発において重要な点として、<a href=\"https://aws.amazon.com/jp/ec2/graviton/\" target=\"_blank\" rel=\"noopener\">AWS Graviton</a>は、ARMとの協力により、実際のECUで使用されるARMのCortex-A、Cortex-M、Cortex-Rシリーズの命令コードをAWS Graviton上でそのまま実行できる「ARM on ARM技術」を搭載しています。これにより、仮想ECUの環境を正確かつ効率的に構築することが可能となっています。<br> このARM on ARMの技術を活用したソリューションがAWS Marketplaceで公開されました。Corellium社が提供する<a href=\"https://aws.amazon.com/marketplace/pp/prodview-ec3yp6hoxpgby\" target=\"_blank\" rel=\"noopener\">Atlas Private Cloud</a>です。</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/aws_masutah_202510_06.png\"><img loading=\"lazy\" class=\"alignnone size-full wp-image-166550\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/aws_masutah_202510_06.png\" alt=\"\" width=\"1063\" height=\"771\"></a></p> \n<p>詳細は、<a href=\"https://aws.amazon.com/marketplace/pp/prodview-ec3yp6hoxpgby\" target=\"_blank\" rel=\"noopener\">Marketplaceのページ</a>をご覧頂ければと思いますが、このAtlas Private Cloudは、<a href=\"https://aws.amazon.com/jp/ec2/instance-types/c8g/\" target=\"_blank\" rel=\"noopener\">AWS Graviton 4 c8g.metal24xl</a> EC2インスタンス上で、32ビットと64ビットのArm Cortex A、R、MコアをベースにしたARM Virtual Hardware（AVH）を実行することができます。2025年10月現在、AWS Graviton 4 c8g.metal24xl １つのEC2インスタンス上で動作可能なAVHは、トータル80 core分で、１つのEC2インスタンス上で複数の仮想ECUを起動することが可能です。今まで、制御系ECUを仮想化する場合、x86上のEC2インスタンスでエミュレーターを動かしいるのが通常でしたが、GravitonとARM on ARM技術を利用したソリューションで解決できるようになるケースが期待できます。<br> 例えば、2025年のAWS Summit JapanのAutomotiveデモブースでは、下記の構成でコックピットとパワートレインのECUを仮想化し、Autosar APのSOME/IPで接続するデモンストレーションを紹介しました（下の図）。③の仮想ECUのスタックでは、AWS Graviton EC2 + Corellium上で、Cortex-R82AEのVirtual Hardwareを動作させ、パワートレインのアプリケーションを動作させています。</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/aws_masutah_202510_07.png\"><img loading=\"lazy\" class=\"size-full wp-image-166551\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/aws_masutah_202510_07.png\" alt=\"2025年のAWS Summit JapanのAutomotiveデモブース\" width=\"2640\" height=\"1488\"></a></p> \n<h3>2. QNX Hypervisor on AWS</h3> \n<p>Blackberry社のQNXが、<a href=\"https://aws.amazon.com/marketplace/pp/prodview-cse7ii7pszrxa\" target=\"_blank\" rel=\"noopener\">QNX Hypervisor 2.2</a>をAWS Marketplaceから提供しています。2025年10月現在、AWS上でQNX Hypervisor 2.2を利用するには、Blackberry社と別途ライセンス契約が必要になります。ご興味がある方は、Blackberry社にお問い合わせ頂ければと思います。</p> \n<div id=\"attachment_166552\" style=\"width: 1315px\" class=\"wp-caption alignnone\">\n <a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/aws_masutah_202510_08.png\"><img aria-describedby=\"caption-attachment-166552\" loading=\"lazy\" class=\"size-full wp-image-166552\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/aws_masutah_202510_08.png\" alt=\"QNX Hypervisor on AWS\" width=\"1305\" height=\"733\"></a>\n <p id=\"caption-attachment-166552\" class=\"wp-caption-text\">QNX Hypervisor on AWS</p>\n</div> \n<p>QNX Hypervisor 2.2 on AWSは、AWS Graviton EC2インスタンスである、c6g.metal, r6g.metal, m6g.metalインスタンスで稼働します。アプリケーションから周辺デバイスへのアクセスは、Hardware Abstraction Layer（HAL層）のVirtIO経由で行います。仮に、従来のアプリケーションを、QNX Hypervisor 2.2上で仮想化するには、そのアプリケーション内で、ハードウエアに依存した処理をVirtIOで分離させる必要があります。どのハードウエアへのアクセスを抽象化するかという点において、サポートするVirtIOのバージョンやQNXとのライセンス契約にも依存しますので、Blackberry社にお問い合わせ頂ければと思います。</p> \n<p>QNX Hypervisor on AWSに関する情報は以下のブログでもまとめられています。<br> <a href=\"https://aws.amazon.com/jp/blogs/industries/elevating-cluster-software-development-with-qnx-hypervisor-on-aws/\" target=\"_blank\" rel=\"noopener\">Elevating cluster software development with QNX Hypervisor on AWS</a></p> \n<h2>おわりに</h2> \n<p>このブログでは、SDV時代を支えるAWSソリューションとして、開発環境と検証環境の２点に絞って紹介しました。特に、開発環境の課題については多くのお客様が解決したい課題ではないかと思います。量産開始後も継続してソフトウエアのアップデートが本格化する将来、開発環境を必要に応じて伸縮自在に調整することが望まれ、クラウドベースのエコシステムを構築していくことは多くのお客様において急務となっています。このブログを読んでAWSの人と少しお話してみたいなと思われる読者様がいらっしゃいましたら、お近くのAWSのアカウントチームや<a href=\"https://aws.amazon.com/jp/automotive/\" target=\"_blank\" rel=\"noopener\">AWS for Automotive</a>（チャット）までご連絡下さいませ。</p> \n<h2>著者</h2> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2023/09/26/masutah2.png\"><img loading=\"lazy\" class=\"wp-image-38823 alignleft\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2023/09/26/masutah2.png\" alt=\"\" width=\"65\" height=\"86\"></a>眞壽田 英輝 (Masuta, Hideki)</p> \n<p>アマゾン ウェブ サービス ジャパン 合同会社<br> 自動車製造領域のお客様を支援するシニアソリューションアーキテクト。長年乗っていた車を最近買い替えたところ、車載ソフトウェアの目覚ましい進化に驚かされる日々を過ごしています。今後さらに高度な運転支援システムが普及することで、交通死亡事故ゼロの社会へと一歩ずつ近づいていくでしょう。そのような未来の実現に貢献すべく、自動車産業のお客様のイノベーションを技術面からバックアップしています。</p>"
  },
  {
    "title": "AWS 流通小売消費財業界向けイベント「AWS Retail CPG Expo 2025」を開催：カスタマーエンゲージメントからスマートストアまで – 戦略的イノベーションが牽引する次世代小売",
    "date": "2025-10-09T03:29:15.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/aws-retail-cpg-expo-2025-announce/",
    "content": "<p><img loading=\"lazy\" class=\"aligncenter size-full wp-image-166513\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/07/thumbnail-retcpg-expo-2025.png\" alt=\"\" width=\"1001\" height=\"346\"></p> \n<h2>イベント概要</h2> \n<p>AWS は Amazon の流通小売事業における知見と経験をもとにソリューションを提供しており、流通小売・消費財業界におけるイノベーションのカギとして、「カスタマーエンゲージメント」「デジタル コマース」「インテリジェント・サプライチェーン」「マーチャンダイジング &amp; プランニング」「スマートストア」の 5 つのテーマを重視しています。<br> 本イベントでは、この 5 つのテーマから、特に「カスタマーエンゲージメント」「デジタル コマース」 「スマートストア」の 3 つのテーマにフォーカスをして、AWS のテクノロジー、専門知識を活用して提供しているソリューションプロバイダーから業界に固有の課題と機会に応えるサービスやベストプラクティスをご紹介します。<br> 「イノベーションを加速させたいが、スピードや人材が課題」といった状況でもすぐに活用できるソリューションを学び、展示ブースで製品デモをご覧いただけるほか、ソリューションプロバイダー各社と個別にご相談できる機会も提供いたします。</p> \n<p>日時：2025 年 11 月 25 日（火）16:00–19:00（15:30 受付開始）</p> \n<p>場所：AWS 目黒オフィス 目黒セントラルスクエア 21 階（東京都品川区上大崎 3-1-1）</p> \n<p>主催：アマゾン ウェブ サービス ジャパン合同会社</p> \n<p>参加費：無料（要事前申込）</p> \n<p>参加申込：こちらの<a href=\"https://pulse.aws/survey/SXMCHRFV?p=0\" target=\"_blank\" rel=\"noopener\">お申込みフォーム</a>からお申込みください。</p> \n<h2>展示テーマと出展企業</h2> \n<h3>「カスタマーエンゲージメント」</h3> \n<p>カスタマー 360° によって顧客セグメントの関係性や特徴、顧客生涯価値を理解し、CRM、顧客データプラットフォーム、コンタクトセンター DX など、データ主導のインサイトによるカスタマーエンゲージメントの促進に役立つソリューションをご紹介します。</p> \n<p><strong>＜出展企業（アルファベット順）＞</strong></p> \n<p><a href=\"https://amplitude.com/ja-jp\" target=\"_blank\" rel=\"noopener\">Amplitude Analytics 合同会社</a></p> \n<p><a href=\"https://www.braze.com/ja/product\" target=\"_blank\" rel=\"noopener\">Braze 株式会社</a></p> \n<p><a href=\"https://www.dentsudigital.co.jp/\" target=\"_blank\" rel=\"noopener\">株式会社電通デジタル</a></p> \n<p><a href=\"https://www.serverworks.co.jp/service/architectingandbuild/amazon_connect/\" target=\"_blank\" rel=\"noopener\">株式会社サーバーワークス</a></p> \n<p><a href=\"https://www.treasuredata.co.jp/\" target=\"_blank\" rel=\"noopener\">トレジャーデータ株式会社</a></p> \n<hr> \n<h3>「デジタルコマース」</h3> \n<p>生成 AI を利用した魅力的なサイトや、俊敏なコマース基盤など、デジタルコマースソリューションへの投資は不可欠です。デジタルコマースのイノベーションを加速し、あらゆるチャネルでカスタマーエクスペリエンスを高めるためのソリューションをご紹介します。</p> \n<p><strong>＜出展企業（アルファベット順）＞</strong></p> \n<p><a href=\"https://retail-solution.aq-dx.jp/\" target=\"_blank\" rel=\"noopener\">アジアクエスト株式会社</a></p> \n<p><a href=\"https://contentsquare.com/ja-ja/\" target=\"_blank\" rel=\"noopener\">Contentsquare Japan 合同会社</a></p> \n<hr> \n<h3>「スマート ストア」</h3> \n<p>小売業に新たな収益の柱をもたらすことが期待される店舗内の先進ソリューションや、顧客接点の可能性を広げる POS データ活用、店舗省人化に応える最新のテクノロジーなどをご紹介します。</p> \n<p><strong>＜出展企業（アルファベット順）＞</strong></p> \n<p><a href=\"https://forgevision.com/\" target=\"_blank\" rel=\"noopener\">フォージビジョン株式会社</a></p> \n<p><a href=\"https://www.fsi.co.jp/\" target=\"_blank\" rel=\"noopener\">富士ソフト株式会社</a></p> \n<p><a href=\"https://www.intec.co.jp/column/proto-01.html\" target=\"_blank\" rel=\"noopener\">株式会社インテック</a></p> \n<p><a href=\"https://www.sony.co.jp/Products/felica/navicx/\" target=\"_blank\" rel=\"noopener\">ソニー株式会社</a></p> \n<p><a href=\"https://teal-bi.com/\" target=\"_blank\" rel=\"noopener\">株式会社ティールテクノロジーズ</a></p> \n<p><a href=\"https://usen-camera.co.jp/service/\" target=\"_blank\" rel=\"noopener\">株式会社 USEN Camera Solutions</a></p> \n<hr> \n<h3>来場者特典</h3> \n<p><img loading=\"lazy\" class=\"alignright size-full wp-image-166521\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/07/aws-logo-mag.png\" alt=\"\" width=\"168\" height=\"165\">事前お申込みのうえ当日ご来場いただきましたお客様へ<span style=\"text-decoration: underline\">先着 150 名限定</span>で、イベント特製のステンレスマグカップ（AWS ロゴ入り）をプレゼントいたします！</p> \n<p>※ 画像はイメージです。実物と異なる場合がございます。</p> \n<p>当日はパートナー各社のブースにて、展示ブースで製品デモをご覧いただけるほか、ソリューションプロバイダー各社と個別にご相談できる機会も提供いたします</p> \n<h3>この特別な機会をお見逃しなく。お申し込みは<a href=\"https://pulse.aws/survey/SXMCHRFV?p=0\" target=\"_blank\" rel=\"noopener\">こちら</a>から。</h3> \n<p>皆様のご参加を楽しみにお待ちしております！</p>"
  },
  {
    "title": "MCPツール棚卸しによるClaude Codeのコンテキスト最適化",
    "date": "2025-10-09T02:29:43.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/medley/articles/optimizing-claude-code-context-with-mcp-tool-audit",
    "content": "\n はじめに\nMCP(Model Context Protocol) ツールを追加していったら、Claude Code の応答精度が落ちたと感じたことはありませんか?\nMCP は、Claude Code などの AI エージェントに外部ツールとの連携機能を提供する強力なプロトコルです。開発環境の効率化を目的として、様々な MCP ツールを追加することは一般的な運用となっています。\nしかし、MCP ツールの追加には重要なトレードオフが存在します。Anthropic 社のエンジニアリングブログでも指摘されているように、AI エージェントが一度に扱える情報量、すなわち コンテキストは「重要かつ..."
  },
  {
    "title": "google/LangExtract解剖- LLMで抽出した項目の文書内位置特定ロジックを深堀る",
    "date": "2025-10-09T01:46:54.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/gvatech_blog/articles/2d121536d81eb0",
    "content": "!\n本稿は2025/10/04時点のLangExtractのソースコードを元に記述しています。\n\n\n google/LangExtractとは\nhttps://github.com/google/langextract\nLangExtractは2025年7月にGoogleが発表したLLMを用いた項目抽出ライブラリです。\nLangExtractは単なる項目抽出ができるに留まらず、抽出した項目が抽出元テキストのどの位置に存在しているかを特定する機能を有している点が特徴的です。\nLLMを活用した項目抽出における難点として、元のテキストに忠実な抽出結果が得られない場合があることが挙げられます。以..."
  },
  {
    "title": "Amazon Q Business ブラウザ拡張機能による組織の生産性向上",
    "date": "2025-10-09T00:51:31.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/supercharge-your-organizations-productivity-with-the-amazon-q-business-browser-extension/",
    "content": "<p><em><br> 本記事は、2025 年 9 月 17 日に公開された <a href=\"https://aws.amazon.com/jp/blogs/machine-learning/supercharge-your-organizations-productivity-with-the-amazon-q-business-browser-extension/\">Supercharge your organization’s productivity with the Amazon Q Business browser extension</a> を翻訳したものです。翻訳はテクニカルアカウントマネージャーの竹林聡が担当しました。</em></p> \n<p><a href=\"https://aws.amazon.com/jp/q/business/\" rel=\"noopener noreferrer\">Amazon Q Business</a> のような生成 AI ソリューションは、従業員の働き方を変革しています。あらゆる業界の組織が、意思決定プロセスを加速するために、ますます散在するデータから価値のある洞察を引き出すことができるこれらのツールを採用しています。しかし、生成 AI ツールの導入には課題もあります。</p> \n<p>生成 AI ソリューションの実装において、2 つの障壁が浮上しています。1 つ目は、ユーザーが慣れ親しんだワークフローを放棄し、データを手動で AI アシスタントに転送して分析する必要に迫られることです。これにより、不要な手間が生じ、効果が得られるまでの時間が長くなってしまいます。2 つ目は、一般的に使用されているソフトウェアに生成 AI ツールが組み込まれていないため、従業員が AI で生産性を大幅に向上できる機会を見出すことが難しいという点です。</p> \n<p>職場向けに特化した生成 AI アシスタントの Amazon Q Business が登場し、企業データやエンタープライズシステムにシームレスに接続することで、会話を行い、複雑な問題を解決し、アクションを実行できるようになりました。Amazon Q Business は、従業員に関連情報とアドバイスへの即時アクセスを提供し、タスクを効率化し、意思決定を加速し、職場での創造性とイノベーションを促進します。最近、Amazon Q Business でブラウザ拡張機能をリリースし、現在 Amazon Q Business の購読者 (Lite および Pro) が利用できるようになりました。Amazon Q Business ブラウザ拡張機能により、Amazon Q Business の機能を直接ブラウザで利用できるようになり、コンテキストを認識した生成 AI サポートを受け、日常のタスクに対する即時のサポートを得ることができます。</p> \n<p>本ブログでは、チームが AI を活用したインサイトとサポートにスムーズにアクセスできるように、この解決策を企業に実装する方法をご紹介します。</p> \n<h2>Amazon Q Business ブラウザ拡張機能のユースケース</h2> \n<p>Amazon Q Business ブラウザ拡張機能は、すべての Amazon 社員に展開されており、毎日数万人のユーザーの生産性を向上させています。このセクションでは、Amazon 社員が生産性を向上させるために Amazon Q Business ブラウザ拡張機能を使用している、最も効果的なユースケースをいくつかご紹介します。</p> \n<h3>Web コンテンツの分析</h3> \n<p>ビジネスチームと技術チームは、企業データ外にある各種レポート、競合分析、業界文書の情報を分析・統合して、インサイトと戦略を構築する必要があります。戦略に関する提言は、検証済みのデータソースと信頼できる業界情報に基づいていることを確認しなければなりません。さらに、複数のソースにまたがるパターンの特定は、時間がかかり複雑な作業です。Amazon Q Business ブラウザ拡張機能を使用することで、戦略担当者は人間の判断を活かしながら、信頼できる社内外のデータソースから数秒で業界のインサイトを生成し、トレンドを特定することができます。</p> \n<p>以下のデモビデオをご覧ください:</p> \n<div class=\"wp-video\" style=\"width: 640px\"> \n <p>\n  <video id=\"video-115782-1\" class=\"wp-video-shortcode\" src=\"https://d2908q01vomqb2.cloudfront.net/artifacts/DBSBlogs/ML-18631/browser_extension_demo_use_case_1.mp4?_=1\" preload=\"metadata\" controls=\"controls\" width=\"640\" height=\"360\">\n   <br> \n  </video></p> \n</div> \n<h3>コンテンツ品質の向上</h3> \n<p>Amazon Q Business ブラウザ拡張機能は、生成AI アシスタントでは容易に利用できない背景情報を組み込むことができる独自の機能を提供します。Amazon Q Business ブラウザ拡張機能を使用すると、通常の生成AI アシスタントでは利用できない複数の異なるソースを問い合わせに含めることで、コンテンツの作成と品質向上が可能になります。さまざまなソースからのコンテンツをリアルタイムで確認し、Web ベースのスタイルガイドやベストプラクティスを組み込んでコンテンツ作成を加速することができます。</p> \n<p>以下のデモビデオをご覧ください:</p> \n<div class=\"wp-video\" style=\"width: 640px\">\n <video id=\"video-115782-2\" class=\"wp-video-shortcode\" src=\"https://d2908q01vomqb2.cloudfront.net/artifacts/DBSBlogs/ML-18631/browser_extension_demo_use_case_3.mp4?_=2\" preload=\"metadata\" controls=\"controls\" width=\"640\" height=\"360\">\n  <br> \n </video>\n</div> \n<h2>ソリューションの概要</h2> \n<p>以下のセクションでは、組織で Amazon Q Business をすでに有効化している場合の Amazon Q Business ブラウザ拡張機能の使用開始方法について説明します。詳細については、<a href=\"https://docs.aws.amazon.com/amazonq/latest/qbusiness-ug/configuring-browser-extension.html\" rel=\"noopener noreferrer\">Amazon Q Business ブラウザ拡張機能の使用設定</a>をご覧ください。</p> \n<h2>前提条件</h2> \n<p>ブラウザ拡張機能をデプロイする前に、このセクションの前提条件の手順を完了してください。</p> \n<h3>Amazon Q Business アプリケーションの作成とユーザーのサブスクリプション設定</h3> \n<p>Amazon Q Business ブラウザ拡張機能は Amazon Q Business の機能であり、ブラウザ拡張機能を有効にする前に、お客様は Amazon Q Business アプリケーションを作成し、ユーザーのサブスクリプション登録を行う必要があります。Amazon Q Business の使用開始方法の詳細については、<a href=\"https://aws.amazon.com/jp/q/business/getting-started/\" rel=\"noopener noreferrer\">Amazon Q Business の使用を開始する</a>をご覧ください。</p> \n<h3>Amazon Q Business のWeb機能のセットアップ</h3> \n<p>ブラウザ拡張機能は、Amazon Q Business の Web インターフェースクライアントを使用して、ユーザーの認証と Amazon Q Business の機能提供を行います。ブラウザ拡張機能を有効にする最初のステップは、Amazon Q Business の Web インターフェースを作成することです。すでにユーザー向けの Web インターフェースを作成している場合は、このステップをスキップできます。ただし、Amazon Q Business API を使用してカスタム Web インターフェースを開発している場合は、以下の手順に従って Amazon Q Business の Web インターフェースを作成してください：</p> \n<ol> \n <li>Amazon Q Business コンソールで、Amazon Q Business アプリケーションに移動します。</li> \n</ol> \n<p><strong>Web experience settings </strong>セクションには、Web エクスペリエンスがすでにデプロイされているかどうかが表示されます。Web エクスペリエンスがデプロイされていない場合、このセクションは空白で、「A web experience needs to be created before deploying.」というメッセージが表示されます。</p> \n<p><img loading=\"lazy\" class=\"alignnone wp-image-115785 size-full\" style=\"margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/09/04/image-1-6.png\" alt=\"\" width=\"1430\" height=\"689\"></p> \n<ol start=\"2\"> \n <li>アプリケーションの詳細ページの上部で、<strong>Edit</strong>を選択します。</li> \n</ol> \n<p><img loading=\"lazy\" class=\"alignnone wp-image-115786 size-full\" style=\"margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/09/04/image-2-6.png\" alt=\"\" width=\"1431\" height=\"684\"></p> \n<ol start=\"3\"> \n <li><strong>Outcome</strong> で、<strong>Web experience</strong> を選択します。</li> \n <li><strong>Update</strong> を選択します。</li> \n</ol> \n<p>この手順が完了するまでに数分かかる場合があります。</p> \n<p><img loading=\"lazy\" class=\"alignnone wp-image-115787 size-full\" style=\"margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/09/04/image-3-6.png\" alt=\"\" width=\"1430\" height=\"735\"></p> \n<p>Web エクスペリエンスをデプロイすると、Amazon Q Business アプリケーションの詳細ページに、Web エクスペリエンスがホストされている URL が表示されます。この URL は後で使用するため保存しておいてください。</p> \n<p><img loading=\"lazy\" class=\"alignnone wp-image-115788 size-full\" style=\"margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/09/04/image-4-3.png\" alt=\"\" width=\"1430\" height=\"700\"></p> \n<h3>大規模言語モデルへのクエリ送信権限の付与</h3> \n<p>Amazon Q Business ブラウザ拡張機能は、ユーザーのプロンプトと共にWebページのコンテンツをファイル添付として渡すことで、ユーザーのWebページのコンテキストをクエリに含めることができます。ファイル添付機能は一般知識モードでのみ利用可能であるため、ブラウザ拡張機能の全機能を活用するには、Amazon Q Business の管理者がユーザーに対して大規模言語モデル (LLM) に直接クエリを送信する権限を付与する必要があります。この前提条件がない場合、ユーザーはブラウザ拡張機能を通じて自社の知識にのみアクセスでき、Webページのコンテンツについて Amazon Q Business に質問することはできません。</p> \n<p>Amazon Q Business はユーザーの会話データを保存せず、クエリや会話を LLM のトレーニングに使用することはありません。会話はアプリケーション内に 30 日間のみ保存されます。以下のスクリーンショットに示すように、Amazon Q Business の Web インターフェースにアクセスし、ナビゲーションペインで <strong>Chat </strong> を選択することで、これらの会話を削除できます。</p> \n<p><img loading=\"lazy\" class=\"alignnone wp-image-115789 size-full\" style=\"margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/09/04/image-5-2.png\" alt=\"\" width=\"1430\" height=\"794\"></p> \n<p>ユーザーが Amazon Q LLM に直接クエリを送信できるようにするには、以下の手順を実行します：</p> \n<ol> \n <li>Amazon Q Business コンソールで、アプリケーションに移動します。</li> \n <li>ナビゲーションペインで <strong>Admin controls and guardrails</strong> を選択します。</li> \n</ol> \n<p><img loading=\"lazy\" class=\"alignnone wp-image-115790 size-full\" style=\"margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/09/04/image-6-1.png\" alt=\"\" width=\"1430\" height=\"730\"></p> \n<ol start=\"3\"> \n <li><strong>Global controls</strong> セクションで、<strong>Edit </strong>を選択します。</li> \n</ol> \n<p><img loading=\"lazy\" class=\"alignnone wp-image-115791 size-full\" style=\"margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/09/04/image-7-2.png\" alt=\"\" width=\"1430\" height=\"731\"></p> \n<ol start=\"4\"> \n <li><strong>&nbsp;Allow end users to send queries directly to the LLM </strong>を選択します。</li> \n <li>&nbsp;<strong>Save </strong>を選択します。</li> \n</ol> \n<p><img loading=\"lazy\" class=\"alignnone wp-image-115792 size-full\" style=\"margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/09/04/image-8-3.png\" alt=\"\" width=\"1430\" height=\"733\"></p> \n<p>これでユーザー向けにブラウザ拡張機能を有効化する準備が整いました。</p> \n<h2>Amazon Q Business ブラウザ拡張機能の設定</h2> \n<p>ブラウザ拡張機能の前提条件を完了したので、以下の手順に従ってユーザー向けにブラウザ拡張機能を有効化してください：</p> \n<ol> \n <li>Amazon Q Business コンソールで、アプリケーションに移動します。</li> \n <li>ナビゲーションペインの <strong>Enhancements</strong> から <strong>Integrations</strong> を選択します。</li> \n <li><strong>Browser extensions</strong> セクションで、<strong>Edit</strong> を選択します。</li> \n</ol> \n<p><img loading=\"lazy\" class=\"alignnone wp-image-115793 size-full\" style=\"margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/09/04/image-9-2.png\" alt=\"\" width=\"1430\" height=\"725\"></p> \n<ol start=\"4\"> \n <li>有効にしたいブラウザ拡張機能のチェックボックスを選択します: \n  <ol type=\"a\"> \n   <li><strong>Chromium</strong> チェックボックスは、Google Chrome と Microsoft Edge ブラウザをサポートする Chrome ストア拡張機能を有効にします。</li> \n   <li><strong>Firefox</strong> チェックボックスは、Firefox 向けアドオンを有効にします。</li> \n  </ol> </li> \n</ol> \n<p>それぞれの <strong>Learn more </strong>セクションにあるリンクを使用して、拡張機能の Chrome または Firefox ストアページを表示することもできます。</p> \n<ol start=\"5\"> \n <li><strong>Save</strong> を選択します。</li> \n</ol> \n<p><img loading=\"lazy\" class=\"alignnone wp-image-115794 size-full\" style=\"margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/09/04/image-10-1.png\" alt=\"\" width=\"1430\" height=\"714\"></p> \n<p>ユーザーは次回 Amazon Q Business の Web インターフェースにログインする際に、Amazon Q Business ブラウザ拡張機能のインストール手順が表示されます。まだの場合は、前のステップで取得した Web サービスの URL をユーザーと共有して、ブラウザ拡張機能をインストールするための手順に従えるようにしてください。</p> \n<h2>IAM フェデレーション認証を使用する場合の Amazon Q Business ブラウザ拡張機能の有効化</h2> \n<p>Amazon Q Business アプリケーションで外部のアイデンティティプロバイダー (IdP) を使用している場合、ユーザーがブラウザ拡張機能を使用できるようにするには、外部プロバイダーでブラウザ拡張機能を許可リストに追加する必要があります。ブラウザ拡張機能を有効にするには、IdP で以下の URL を許可リストに追加してください。</p> \n<ul> \n <li>Chromium ブラウザ拡張機能 (Google Chrome と Microsoft Edge に対応) の場合は、<code>https://feihpdljijcgnokhfoibicengfiellbp.chromiumapp.org/</code> を使用します</li> \n <li>Mozilla Firefox ブラウザ拡張機能の場合は、<code>https://ba6e8e6e4fa44c1057cf5f26fba9b2e788dfc34f.extensions.allizom.org/</code> を使用します</li> \n</ul> \n<p>Amazon Q Business アプリケーションの認証ソリューションとして <a href=\"https://aws.amazon.com/iam/identity-center/\" rel=\"noopener noreferrer\">AWS IAM Identity Center</a> を使用している場合は、前述の手順を実行する必要はありません。</p> \n<h2>ブラウザ拡張機能の使用開始</h2> \n<p>Web エクスペリエンス URL をユーザーと共有すると、ユーザーはそれを使用してブラウザ拡張機能のストアページを見つけ、ブラウザ拡張機能をインストールできます。ユーザーは以下の手順に従うことができます。</p> \n<ol> \n <li>管理者から提供された Amazon Q Business の Web インターフェースにログインします。</li> \n</ol> \n<p>管理者があなたのためにブラウザ拡張機能を有効にしたことを知らせるバナーが表示されます。</p> \n<ol start=\"2\"> \n <li><strong>Install extension</strong> を選択します。</li> \n</ol> \n<p><img loading=\"lazy\" class=\"alignnone wp-image-115795 size-full\" style=\"margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/09/04/image-11-2.png\" alt=\"\" width=\"1430\" height=\"804\"></p> \n<p>使用しているブラウザに応じて、リンクをクリックすると適切な Amazon Q Business ブラウザ拡張機能のストアページに移動します。</p> \n<ol start=\"3\"> \n <li><strong>Add to Chrome</strong> を選択するか、お使いのブラウザに応じたインストールオプションを選択します。</li> \n</ol> \n<p><img loading=\"lazy\" class=\"alignnone wp-image-115796 size-full\" style=\"margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/09/04/image-12-1.png\" alt=\"\" width=\"1430\" height=\"805\"></p> \n<p>拡張機能をインストールすると、ブラウザのツールバーの <strong>Extensions</strong> の下に表示されます。ピンアイコンを選択して、ブラウザ拡張機能をピン留めすることができます。</p> \n<p><img loading=\"lazy\" class=\"alignnone wp-image-115797 size-full\" style=\"margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/09/04/image-13-3.png\" alt=\"\" width=\"1430\" height=\"852\"></p> \n<p>ブラウザ拡張機能を開くと、次のスクリーンショットのようなサイドペインが表示されます。開いているタブから正しい Web エクスペリエンス URL を自動的に検出し、サインインをサポートします。検出されない場合は、管理者から提供された Web エクスペリエンス URL を <strong>Amazon Q URL</strong> セクションに入力し、<strong>Sign In</strong>&nbsp;を選択してください。</p> \n<p><img loading=\"lazy\" class=\"alignnone wp-image-115798 size-full\" style=\"margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/09/04/image-14-2.png\" alt=\"\" width=\"1430\" height=\"852\"></p> \n<p>サインインすれば、すぐに使用できます！生産性を向上させるためにこの拡張機能をどのように活用できるか、先ほどの Amazon のユースケースに関するセクションを参考にしてください。</p> \n<p><img loading=\"lazy\" class=\"alignnone wp-image-115799 size-full\" style=\"margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/09/04/image-15-1.png\" alt=\"\" width=\"1430\" height=\"806\"></p> \n<h2>ユーザーに代わって Amazon Q Business ブラウザ拡張機能をデプロイ</h2> \n<p>一部の管理者は、導入を効率化し加速させるために、ユーザーのブラウザに Amazon Q Business ブラウザ拡張機能を直接インストールすることを選択する場合があります。</p> \n<p>企業は、さまざまなモバイルデバイス管理ソフトウェアを使用し、ブラウザポリシーに関する要件も異なります。<br> Amazon Q Business ブラウザ拡張機能を導入するには、以下のリソースを参照してください：</p> \n<ul> \n <li><a href=\"https://mozilla.github.io/policy-templates/#extensionsettings\" rel=\"noopener noreferrer\">Mozilla Firefox ポリシー設定</a></li> \n <li><a href=\"https://chromeenterprise.google/policies/#ExtensionSettings\" rel=\"noopener noreferrer\">Google Chrome ポリシー設定</a></li> \n <li>Microsoft Edge: \n  <ul> \n   <li><a href=\"https://learn.microsoft.com/en-us/DeployEdge/microsoft-edge-policies#extensionsettings\" rel=\"noopener noreferrer\">ポリシー設定</a></li> \n   <li><a href=\"https://learn.microsoft.com/en-us/deployedge/microsoft-edge-manage-extensions-ref-guide\" rel=\"noopener noreferrer\">リファレンスガイド</a></li> \n  </ul> </li> \n</ul> \n<h2>エンタープライズ向け Amazon Q Business ブラウザ拡張機能のカスタマイズ</h2> \n<p>一部の管理者は、企業のニーズに合わせて Amazon Q Business ブラウザ拡張機能の外観と操作感をカスタマイズすることがあります。このセクションでは、拡張機能でサポートされているカスタマイズ機能と、ユーザーのブラウザで設定する対応するブラウザ拡張機能ポリシー値について説明します。</p> \n<h3>ブラウザ拡張機能のログインページにおける Amazon Q Business URL 入力の削除</h3> \n<p>ユーザーのサインイン時に Amazon Q Business Web エクスペリエンス URL の入力を求めたくない場合は、<code>Q_BIZ_BROWSER_EXTENSION_URL</code> ポリシーにユーザー向けの適切な Amazon Q Business Web エクスペリエンス URL を設定することで、ユーザーに代わってデフォルト URL を設定できます。</p> \n<p><img loading=\"lazy\" class=\"alignnone wp-image-116188 size-full\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/09/09/image-16-2-1.png\" alt=\"\" width=\"300\" height=\"654\"></p> \n<h3>ブラウザ拡張機能のツールバーアイコンの置き換え</h3> \n<p>ブラウザー拡張機能のツールバーアイコンを変更するには、ユーザーに対して以下のブラウザーポリシーキーのいずれかまたは複数の値を、PNG や SVG 画像の URL、または有効な <code>datauri</code> に設定します。</p> \n<ul> \n <li><code>Q_BIZ_BROWSER_EXTENSION_ICON_128</code> (必須)</li> \n <li><code>Q_BIZ_BROWSER_EXTENSION_ICON_16</code> (オプション)</li> \n <li><code>Q_BIZ_BROWSER_EXTENSION_ICON_32</code> (オプション)</li> \n <li><code>Q_BIZ_BROWSER_EXTENSION_ICON_48</code> (オプション)</li> \n</ul> \n<p><img loading=\"lazy\" class=\"alignnone wp-image-116187 size-full\" style=\"margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/09/09/image-17-2-1.png\" alt=\"\" width=\"920\" height=\"48\"></p> \n<h3>ブラウザ拡張機能ウィンドウのロゴまたはアイコンの置き換え</h3> \n<p>ブラウザ拡張機能のウィンドウでロゴやアイコンを変更するには、<code>Q_BIZ_BROWSER_EXTENSION_LOGO</code> ポリシーキーの値に、PNG または SVG 画像の URL、もしくはユーザー向けの有効な <code>datauri</code> を設定してください。</p> \n<p><img loading=\"lazy\" class=\"alignnone wp-image-116189 size-full\" style=\"margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/09/09/image-18-1-470x1024-1.png\" alt=\"\" width=\"300\" height=\"654\"></p> \n<h3>拡張機能のウィンドウに表示される名前の変更</h3> \n<p>ブラウザ拡張機能のウィンドウ内で「Amazon Q」、「Amazon Q Business」、「AWS」、「Amazon Web Services」への参照を任意の名前に置き換えるには、<code>Q_BIZ_BROWSER_EXTENSION_ENTERPRISE_NAME</code> ポリシーキーの値にユーザー向けの新しい名前を設定します。</p> \n<p><img loading=\"lazy\" class=\"alignnone wp-image-116190 size-full\" style=\"margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/09/09/image-19-1-464x1024-1.png\" alt=\"\" width=\"300\" height=\"662\"></p> \n<h3>ブラウザ拡張機能のマウスオーバー時のテキストのタイトル変更</h3> \n<p>ブラウザ拡張機能にマウスオーバー時に表示されるテキストのタイトル (前のスクリーンショットで示した「Amazon Q Business has access to this site」) を変更するには、<code>Q_BIZ_BROWSER_EXTENSION_TITLE_NAME</code> ポリシーをユーザーに適切な文字列に設定してください。</p> \n<p><img loading=\"lazy\" class=\"alignnone wp-image-115806 size-medium\" style=\"margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/09/04/image-20-1-290x300.png\" alt=\"\" width=\"290\" height=\"300\"></p> \n<h3>ブラウザ拡張機能のフッターにある AI ポリシーリンクの置き換え</h3> \n<p>ブラウザ拡張機能のフッターにあるリンクテキストを置き換えるには、<code>Q_BIZ_BROWSER_EXTENSION_FOOTER_POLICY_NAME</code> をユーザーに適した文字列に設定してください。</p> \n<p>ブラウザ拡張機能のフッターにある URL を置き換えるには、<code>Q_BIZ_BROWSER_EXTENSION_FOOTER_POLICY_URL</code> をユーザーにとって適切な URL に設定してください。</p> \n<p><img loading=\"lazy\" class=\"alignnone wp-image-116191 size-full\" style=\"margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/09/09/image-21-1-467x1024-1.png\" alt=\"\" width=\"300\" height=\"658\"></p> \n<p>おめでとうございます！あなたとあなたの組織は、ブラウザ上の作業に対する 生成AI による支援を受ける準備が整いました。</p> \n<h2>リソースの削除</h2> \n<p>このセクションでは、ブラウザ拡張機能を無効化または削除する手順、およびユーザーのデプロイメントとカスタマイズを元に戻す手順について説明します。</p> \n<h3>Amazon Q Business コンソールを使用した Amazon Q Business ブラウザ拡張機能の無効化</h3> \n<p>Amazon Q Business ブラウザ拡張機能は、ユーザーがブラウザから拡張機能を削除する前でも、Amazon Q Business コンソールからいつでも無効化できます。手順は以下の通りです：</p> \n<ol> \n <li>Amazon Q Business コンソールで、<strong>Applications</strong> に移動します。</li> \n <li>ナビゲーションペインの <strong>Enhancements</strong> から <strong>Integrations</strong> を選択します。</li> \n <li><strong>Browser Extensions</strong>&nbsp;セクションで、<strong>Edit</strong> を選択します。</li> \n</ol> \n<p><img loading=\"lazy\" class=\"alignnone wp-image-115808 size-full\" style=\"margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/09/04/image-22-1.png\" alt=\"\" width=\"1430\" height=\"718\"></p> \n<ol start=\"4\"> \n <li>無効にしたいブラウザ拡張機能のチェックボックスを外します: \n  <ol type=\"a\"> \n   <li><strong>Chromium</strong> チェックボックスを外すと、Google Chrome と Microsoft Edge ブラウザをサポートする Chrome ストア拡張機能が無効になります。</li> \n   <li><strong>Firefox</strong> チェックボックスを外すと、Firefox ブラウザ用のアドオンが無効になります。</li> \n  </ol> </li> \n <li><strong>Save</strong> を選択します。</li> \n</ol> \n<p><img loading=\"lazy\" class=\"alignnone wp-image-115809 size-full\" style=\"margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/09/04/image-23.png\" alt=\"\" width=\"1430\" height=\"712\"></p> \n<h3>ユーザーに代わって Amazon Q Business ブラウザ拡張機能のデプロイを元に戻す</h3> \n<p>企業は、さまざまなモバイルデバイス管理ソフトウェアを使用し、ブラウザポリシーに関する要件も異なります。<br> ブラウザポリシー設定を更新してブラウザ拡張機能をデプロイした場合は、各ブラウザのポリシー設定に関するドキュメントに従って、これらのポリシーを削除する必要があります。</p> \n<ul> \n <li><a href=\"https://mozilla.github.io/policy-templates/#extensionsettings\" rel=\"noopener noreferrer\">Mozilla Firefox ポリシー設定</a></li> \n <li><a href=\"https://chromeenterprise.google/policies/#ExtensionSettings\" rel=\"noopener noreferrer\">Google Chrome ポリシー設定</a></li> \n <li>Microsoft Edge: \n  <ul> \n   <li><a href=\"https://learn.microsoft.com/en-us/DeployEdge/microsoft-edge-policies#extensionsettings\" rel=\"noopener noreferrer\">ポリシー設定</a></li> \n   <li><a href=\"https://learn.microsoft.com/en-us/deployedge/microsoft-edge-manage-extensions-ref-guide\" rel=\"noopener noreferrer\">リファレンスガイド</a></li> \n  </ul> </li> \n</ul> \n<p>このブログで先述したように、ブラウザポリシーを変更して Amazon Q Business ブラウザ拡張機能をカスタマイズした場合、ブラウザポリシー設定から対応するポリシーエントリを削除するだけで、これらのカスタマイズを元に戻すことができます。</p> \n<h2>まとめ</h2> \n<p>このブログでは、Amazon Q Business ブラウザ拡張機能を使用して、チームに AI を活用したインサイトとサポートをスムーズに提供する方法を紹介しました。このブラウザ拡張機能は、Lite サブスクリプションの一部として、US East (N. Virginia) および US West (Oregon) の AWS リージョンで Mozilla、Google Chrome、Microsoft Edge に対応しています。ブラウザ拡張機能の使用に追加コストはかかりません。</p> \n<p>まず、Amazon Q Business コンソールにログインし、Amazon Q Business アプリケーション用のブラウザ拡張機能をセットアップします。詳細については、<a href=\"https://docs.aws.amazon.com/amazonq/latest/qbusiness-ug/configuring-browser-extension.html\" rel=\"noopener noreferrer\">Amazon Q Business ブラウザ拡張機能の使用設定</a>をご覧ください。</p> \n<hr> \n<h3>著者について</h3> \n<p style=\"clear: both\"><img loading=\"lazy\" class=\"wp-image-116480 size-thumbnail alignleft\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/09/16/firaz-100x100.png\" alt=\"\" width=\"100\" height=\"100\"><strong>Firaz Akmal</strong> は Amazon Q Business のシニアプロダクトマネージャーで、AWS に 8 年以上在籍しています。顧客の声を代弁し、AWS での検索や生成 AI のユースケースの変革を支援しています。仕事以外では、太平洋岸北西部の山々で過ごしたり、娘の視点を通して世界を体験することを楽しんでいます。</p> \n<p style=\"clear: both\"><strong><img loading=\"lazy\" class=\"size-thumbnail wp-image-116477 alignleft\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/09/16/IMG_0808-2-100x100.jpg\" alt=\"\" width=\"100\" height=\"100\">Abhinand Sukumar</strong> は、AWS の Amazon Q Business のシニアプロダクトマネージャーとして、革新的な生成 AI ソリューションのプロダクトビジョンとロードマップを推進しています。Abhinand は、ブラウザ拡張機能を含む統合を成功させるため、お客様とエンジニアリングチームと緊密に協力しています。教育、人工知能、デザイン思考に深い情熱を持ち、生成 AI エクスペリエンスと AI/ML 教育デバイスに関する専門知識を有しています。AWS に入社する前は、ネットワーク業界でエンベデッドソフトウェアエンジニアとして勤務し、テクノロジー分野で5-6年の経験があります。</p>"
  },
  {
    "title": "プロンプトエンジニアリングを終わらせるDSPy",
    "date": "2025-10-08T22:45:37.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/cybernetics/articles/39fb763aca746c",
    "content": "\n はじめに\nDSPyに夢中である。DSPyの最も重要な点は、プロンプトエンジニアリングを排除できる可能性を秘めていることだ。可能性を秘めているだけで、現状、プロンプトエンジニアリングが完全に不要になったわけではないのだが、こちらの分野を真面目に学ぶ動機として十分だ。使い心地というか、真面目にこの分野やってみようと思ったのはPFNのChainerを初めて触ってみたときの感覚に似ている。その後、PyTorchが出現し、すごいスピードで技術とツールが進歩していく中で、学んだことをまとめるためにブログを書き始めたのを思い出した。\nhttps://dspy.ai/#__tabbed_3_1\nDS..."
  },
  {
    "title": "vercel/next.js – v15.6.0-canary.53",
    "date": "2025-10-08T19:22:51.000Z",
    "source": "GitHub",
    "url": "https://github.com/vercel/next.js/releases/tag/v15.6.0-canary.53",
    "content": "### Core Changes\n\n- feat(next/image)!: deprecate and warn on `images.domains` config: #84625\n- feat(next/legacy/image)!: deprecate and warn on `next/legacy/image` usage: #84622\n- Turbopack: improve errors/warnings for turbopack messages: #84552\n- Turbopack: rename turbopackPersistentCachingForXXX to turbopackFileSystemCacheForXXX: #84632\n- [Segment Cache] Add refresh URL to reused default segments: #84627\n- [Segment Cache] Fix tests related to optimistic loading state reuse: #84498\n- Upgrade React from `a4eb2dfa-20251006` to `3025aa39-20251007`: #84613\n- [breaking]: enable clientSegmentCache by default: #84643\n- feat: Acquire a lockfile on `distDir` in `next dev` and `next build`: #84428\n- Add deprecation warning to Runtime config: #84168\n\n### Misc Changes\n\n- [create-next-app]: prompt to use recommended options: #84570\n- Update labeler: #84623\n- Turbopack: use mmap advise to help the OS preloading: #84379\n- Turbopack: skip invalidating a task on cell/output change when the dependency is outdated: #84551\n- Turbopack: follow-up changes from untracked tracing: #84629\n- Turbopack: sourcemaps for JSON modules: #84611\n- Turbopack: avoid race condition when updating cells: #84598\n\n### Credits \n\nHuge thanks to @ztanner, @samselikoff, @styfle, @sokra, @mischnic, @acdlite, @bgw, and @devjiwonchoi for helping!\n"
  },
  {
    "title": "誰でも書けるスクリプト言語は、immutable な配列を提供すればよかった",
    "date": "2025-10-08T15:32:20.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/toga/articles/immutable-vector",
    "content": "\n 突然ですが、\nPython あるある〜。\na = [1, 2, 3]\nb = a # コピー？\nc = a # コピー？\n\nb.append(4) # 追加\nc.append(5) # 追加\n\nprint(b)\n# [1, 2, 3, 4, 5]\n# c に追加したはずの 5 が\n# b にも追加されていて、ビビる\n\nprint(c)\n# [1, 2, 3, 4, 5]\n# b に追加したはずの 4 が\n# c にも追加されていて、ビビる\nJavaScript 版もありますconst a = [1, 2, 3]\nconst b = a // コピー？\nconst c = a // コ..."
  },
  {
    "title": "なぜバイブコーディングをめぐる議論は噛み合わないのか",
    "date": "2025-10-08T13:18:59.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/shintake/articles/cc4779fb80dea7",
    "content": "\n はじめに\n先日、社内で「AIだけでプロトタイプを作ってみよう」というイベントがあった。\n要件をAIに渡し、設計からコーディング、UI生成までをどこまで自動化できるかを試す——\nいわば“AI開発耐久テスト”のような企画だった。\n生成されたコードを動かしてみると、どれも意外なほどきちんと動いた。\n致命的なバグもなく、UIもAPIも一応の体裁を保っていた。\nつまり、少なくとも“動くもの”はAIだけで作れてしまった、というのが参加者全員の共通認識だった。\nだが、その後の共有会では、意見が真っ二つに分かれた。\n\n「もうAIで十分じゃない？」\n「いや、AIだけではダメだよ」\n\n最近はSNS上でも..."
  },
  {
    "title": "簡易な正規表現エンジンを実装する",
    "date": "2025-10-08T11:27:45.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/gatechnologies/articles/a1cdc8ee299c25",
    "content": "GA technologiesでソフトウェアエンジニアをしている中坂です。\n先日社内で正規表現エンジンの実装の話題で盛り上がりました。ソフトウェアエンジニアであれば普段の開発の中では当たり前のように正規表現を使っていると思いますので、記法や挙動に関する知識はある程度持っているはずです。しかしながら、具体的に我々の書いた正規表現がいかにしてテキストにマッチするのか、その内部の仕組みまで理解している人は多くないと思います。\n今回は「正規表現エンジン」の実装を実際に示しながら、普段当たり前のように書いている正規表現がどのように処理されているのかを深掘っていきます。\n!\nちなみに私自身は計算理論..."
  },
  {
    "title": "GitHub Private repo で XCFramework を配布する",
    "date": "2025-10-08T06:52:47.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/d_date/articles/8b6ded8fdd2403",
    "content": "ソースコードを開示せずにユーザーにXCFrameworkを配布する一番の方法はXCFrameworkをSwift Package Managerで配布することです。\nこの記事は、配布する側の立場で陥りやすい罠とその回避方法をまとめたものです。\nやってみたけどハマってしまった場合に読んでみたり、罠にハマる前に勉強しておきたい方は読んでみてください。\nまた、CocoaPodsからSwift Package Managerに乗り換えようとしてハマっている方は前作をまず読むのがおすすめです。\nhttps://zenn.dev/d_date/articles/cd4ce3b2b5c29d\n今回の記..."
  },
  {
    "title": "寄稿: サンエー様 基幹システムモダナイゼーションの挑戦 – 序章 –",
    "date": "2025-10-08T04:16:54.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/sana-modernization-1st/",
    "content": "<p>本稿は、沖縄県の小売企業である株式会社サンエー（以降、サンエー）様の内製によるモダナイゼーションのお取り組みをご紹介する AWS との共同寄稿です（サンエー: 丸山氏、高原氏、宮良氏、AWS: 中島）。</p> \n<h2 id=\"temp:C:PTL1374a8915de54e31a95acafe9\">はじめに</h2> \n<p>サンエーは、1950 年創業、1970 年設立の沖縄県を拠点とする総合小売企業です。食料品、衣料品、家電、日用雑貨等の住居関連用品の小売業を主力事業とし、沖縄県内で78店舗（2025 年 10 月現在）の小売店舗および外食レストラン等のフランチャイズを展開しています。2025 年 6 月にはサンエー石垣シティをリニューアルオープンするなど、ビジネス拡大を進めています。また、2024 年度は過去最高益となる売上高 2,275 億円を達成しました。ビジネスが成長する中でシステムのモダナイゼーションへの機運も高まり、基幹システムのモダナイズを始められたサンエー様のこれまでの活動と AWS の支援を紹介します。</p> \n<h2 id=\"temp:C:PTLa98c235b9d4b48bfad8592324\">モダナイゼーションのきっかけ</h2> \n<p>AWS 中島: モダナイゼーションの取り組みのきっかけを教えてください。</p> \n<p>サンエー丸山氏: そうですね、きっかけをお伝えする前に、まずは弊社の内製化の歴史を少しご紹介させてください。もともとサンエーでは IBM AS/400 というメインフレームで社内システムを内製にて構築していました。それを約 10 年ほど前から、アプリケーションをスクラッチでつくり直しながら内製で AWS に移行し続けています。利用しているプログラミング言語がシェルスクリプト形式ということもあり、移行先のアーキテクチャは EC2 と EFS をメインで利用しています。DBを使わずにファイルを量産するプログラミング言語なので、どうしてもEFSの利用料が常に膨らんでいきます。モダナイゼーションの初期の検討では RDBMS を用いた IaaS での 3 層 Web を一度経由する案もありましたが、その構成の知見が社内に多いわけでもありませんでした。そのような背景もあり、今後、内製でスクラッチ開発するシステムでは、サーバレスを採用したいと考えていました。</p> \n<p>AWS 中島: 2021 年に参加された (<a href=\"https://aws.amazon.com/jp/blogs/psa/2021-10-angel-dojo/\">ANGEL Dojo</a>) も同じような思いがあられたからでしょうか？</p> \n<p>サンエー丸山氏: そうですね。サーバレスを知識としては知っていたものの、実際に作ってみたことがほとんどなくて。このイベントに参加して手触り感が欲しかったというのもあります。ただ、当時は今回のテーマのモダナイゼーションに本腰を入れていたというよりは、サーバレスという便利なものがある、AWSは EC2 と EFS だけじゃない、というのをチームメンバーや会社に知って欲しかったという意図の方が大きかったです。</p> \n<p>AWS 中島: なるほど、ありがとうございます。では、モダナイゼーションに本腰を入れて活動を開始されたのはいつ頃からでしょうか？</p> \n<p>サンエー丸山氏: 以前より検討はしていたのですが、2023年にパートナーの支援を受けながらポイントシステムをサーバレスで内製構築した経験がきっかけとなり、徐々に本格化し始めました。実際に組織体制を変更して、目にみえるかたちで活動し始めたのは 2024 年からだと思います。前述のコストの話だけではなく、これまでの技術スタックでは、社内からの開発要望に機能的に答えられないものが出てきたり、開発体験やシステム運用の課題に気づいたり、と、そういうものが積み重なってモダナイゼーションを本気で実行しないと先がないのではないかと思うようになりました。そういう意味ではトップダウンで発令されたとか、大きな事故があったとか、そういう大きなきっかけではないんです。でも、ビジネスをさらに成長させるためには必要だと感じていました。</p> \n<h2 id=\"temp:C:PTL0abd90614d844fce9995968e8\">モダナイゼーションへの一歩目を踏み出す</h2> \n<p>AWS 中島: では、2024 年からの活動について教えてください。</p> \n<p>サンエー丸山氏: サンエーのシステムのあり方は、今まで、世の中のベストプラクティスに則ったかたちがあまり取れていませんでした。ですので、自分たちのやり方で進める前にきちんと学んでみようと思ったんです。そこで出会ったのがストリームアラインドチームという考え方でした。マイクロサービスを技術として取り入れるだけでは成功せず、組織も変える必要があることを知ったんです。AWS との打ち合わせの中でも、そういうお話をしてくださいましたよね。</p> \n<p>AWS 中島: はい、コンウェイの法則(※)などを含めてお話しさせていただきました。チームトポロジーの本を握りしめて会話したことを覚えています。その後、本当に組織を変えられたと聞いた時は正直驚きました。<br> ※<i><i>システム（広義に定義）を設計するあらゆる組織は、組織のコミュニケーション構造をコピーした構造を持つ設計を生み出す。</i></i></p> \n<p>サンエー丸山氏: モダナイゼーションに必要なことはやろうと決めていましたので、上司に掛け合ってチームを再編しました。組織を変える目処がついた後に困ったのが EC2 + EFS からどういう形に変えていこうかということでした。サーバレスがいいなとは思っていたのですが、具体的にどういうかたちが良いのかについては不透明でした。社内エンジニアのスキルセットはバニラ (素の) html, js と sh をラップした有償製品のコマンドに偏っており、いわゆる Web アプリケーションフレームワークや汎用プログラミング言語に明るい人間もいない。そんな時、AWSからご提案をいただいたんです。</p> \n<p>AWS 中島: 貴社を日々ご支援する中で、課題は広く難易度は高いが、それらが点になっており、うまく整理がついてないように感じました。そこで、1/デベロッパートランスフォーメーション (以降 DevTx) チームから Discovery ワークをご提供することによって課題の整理と短距離の目標を定義すること。2/内製メンバーで作れるようになるきっかけ作りのためにプロトタイピング (以降 Proto) チームと協業で開発してみること。3/協業の期間は短くそれだけで作れるようになるわけではないため、プロトタイピング後、実際の開発において伴走しながらスキルアップを支援してくれる AWS パートナーのご紹介。ここまでを 1 セットでご提案しました。</p> \n<p>サンエー丸山氏: どこまでやれるのか不安もありましたが AWSの提案に乗ってみようと思いました。2024 年11月のキックオフ後、Discovery ワークを進める中で、コスト以外にも、開発テスト、運用、認証、UI など幅広い課題を整理することができました。また Proto の方をテックリードとして一緒に開発してみることで、サーバレス, REST, SPA + API, フロントエンド Framework, OSS の活用などの開発方法を実際に作りながら学ぶことができました。言語を全て TypeScript で統一したのもプロトタイピングの進め方として良かったと思います。様々な体験が得られましたが、ワークショップ後にモダナイゼーションへの投資を役員と合意することができたことはとても大きな成果でした。先述のとおり、モダナイゼーションはトップダウンで降りてきたものではないため、モダナイゼーションを進めるためには役員との合意が必須だったんです。役員合意が取れたのは 2025年3月のことでした。</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/risk.png\"><img loading=\"lazy\" class=\"alignnone size-full wp-image-166570\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/risk.png\" alt=\"\" width=\"2042\" height=\"1160\"></a><br> 図は プロトタイピングの成果物に対して DevTx チームと実施したリスクストーミングの一コマ</p> \n<p>AWS 中島: ここで、Discovery ワークとプロトタイピングにご参加いただいたメンバーの高原様と宮良様にご感想を聞いてみたいと思います。高原様いかがでしたか？</p> \n<p>サンエー高原氏: 協業で開発したのは 2 週間という短期間でしたが、モダンな開発手法やツールに触れることができて非常に勉強になりました。Git の使い方や サーバレスに関する AWS のサービスについて実際に手を動かしながら学べたのは大きな収穫でした。TypeScript は フロントエンドでもバックエンドでも CDK でも使えることを体感したため、今後もしっかりと学習していく必要があると感じています。エラーメッセージを読む習慣やドキュメントを参照する姿勢は身についたので、これを継続していきたいと思います。チーム開発の楽しさも実感できました。モブプログラミングで他の人の考え方を知ることができたり、困った時にすぐに相談できる環境があったのは心強かったです。中島さんがライブラリの調査やドキュメント読みを実際にやってみせてくださったのが非常に参考になりました。本番開発に向けて、基礎的な部分をしっかりと固めて、チームにより貢献できるよう頑張りたいと思います。</p> \n<p>AWS 中島: ありがとうございます。高原様はメンバーの中で IT 経験が一番少ない中でご参加くださいました。では、続いて宮良様、いかがでしょうか？</p> \n<p>サンエー宮良氏: 2週間をとおして、一番の大きな変化は「調べる文化」が身についたことだと思います。既存の開発言語では調べても情報が少なく、誰かに聞くか、とりあえず書いてみるという文化でしたが、モダンな開発では豊富なドキュメントやコミュニティの情報があることを実感できました。技術的には、React の概念や TypeScript の型システムなど、既存の開発言語とはまったく異なる概念に苦戦し、従来の開発経験とのギャップが大きく、理解に時間がかかりました。ただ、何かを作る楽しさを久しぶりに感じることができたのは大きな収穫でした。コードの品質についても多くの気づきがありました。Proto 担当の和田さんからのレビューコメントで、命名規則や処理の順番、可読性の重要性を学びました。「動けばいい」から「他の人が読みやすいコード」を意識する必要があると強く感じました。本番開発に向けては、基礎的な概念の理解を深めることと、自分の理解を言語化する練習が必要だと思います。生成 AI に自分の理解が合っているか質問しながら学習を進めていきたいと思います。</p> \n<p>AWS 中島: 宮良様ありがとうございます。宮良様は貴社独自の生成 AI プロンプト作成アプリの開発もしていただいているので、ぜひ基幹システムのモダナイゼーションでもご活躍いただきたいです。</p> \n<h2 id=\"temp:C:PTLed6fdf0a5ba3466aa1b9a910e\">基幹システム開発に向けて</h2> \n<p>AWS 中島: それでは、Discovery ワーク・プロトタイピング後の活動について教えてください。</p> \n<p>サンエー丸山氏: 現在、システムのモダナイゼーションに向けて社内の認証認可基盤を作り直しています。これは Discovery ワークで明らかになった認証認可の課題を解決してから、アプリケーション側をモダナイズするという方針にしたためです。認証認可基盤は AWS のパートナーに伴走いただきながら進めています。</p> \n<p>AWS 中島: 今の活動において Discovery ワークやプロトタイピングの効果を感じていただけているでしょうか？</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/wb.png\"><img loading=\"lazy\" class=\"alignnone size-full wp-image-166574\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/wb.png\" alt=\"\" width=\"992\" height=\"483\"></a></p> \n<p>サンエー丸山氏: こちらを見てみてください。これは高原さんと宮良さんが パートナー企業と議論して書いたホワイトボードです。Discovery ワークやプロトタイピング後に 2 人が追加で学んだ部分もありますが、それでも EC2 と EFS の現行のアーキテクチャの説明もおぼつかなかった 2 人が、このようにホワイトボードにアーキテクチャを描き、パートナー企業と議論する姿を見ると、ご提案いただいた活動の効果を感じています。現在開発中の認証認可基盤が完成した後、アプリケーション側のモダナイズを実施する予定です。高原さんと宮良さんにはぜひこのプロジェクトを引っ張っていってもらいたいです。</p> \n<h2 id=\"temp:C:PTLddc98e6057f6431da667b8cdb\">最後に</h2> \n<p>AWS 中島: 丸山様、高原様、宮良様、本日はありがとうございました。これからも是非 AWS と一緒にモダナイゼーションジャーニーを歩ませていただければと思っております。最後に我々アカウントチームへ今後期待することをお聞かせいただけないでしょうか？</p> \n<p>サンエー丸山氏: AWSとの協業は、単なる技術導入に留まらず、私たちの開発文化そのものを変える大きなきっかけとなりました。深く感謝しています。<br> 現在進めている基幹のモダナイゼーションは、その先に見据える AI 活用によるビジネス革新のための重要な布石です。この未踏の領域への挑戦においても、AWS には戦略的パートナーとして、最先端の知見と専門的な支援で私たちの成長を力強くリードしていただけることを期待しています。</p> \n<p>AWS 中島: ありがとうございます。ちなみに今回、”序章” ということですが、次回があると思ってよろしいでしょうか？</p> \n<p>サンエー丸山氏: そうですね。次回はモダナイズしたプロダクション環境がリリースされた後にまた寄稿させていただければと思います。</p> \n<h3>サンエー様 著者</h3> \n<table style=\"width: 100%;border-collapse: collapse\"> \n <tbody>\n  <tr> \n   <td style=\"text-align: center;padding: 20px\"> <img src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/maruyama.png\" alt=\"\" style=\"width: 300px;height: 300px;object-fit: cover\"><p></p> <h3>丸山 海理 氏</h3> </td> \n   <td style=\"text-align: center;padding: 20px\"> <img src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/takahara.png\" alt=\"\" style=\"width: 300px;height: 300px;object-fit: cover\"><p></p> <h3>高原 元来 氏</h3> </td> \n   <td style=\"text-align: center;padding: 20px\"> <img src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/miyara.png\" alt=\"\" style=\"width: 300px;height: 300px;object-fit: cover\"><p></p> <h3>宮良 一輝 氏</h3> </td> \n  </tr> \n </tbody>\n</table> \n<p></p>"
  },
  {
    "title": "「OpenAIが新たに出したAIエージェント開発キットをアプリに組み込んでみた【AgentKit入門】",
    "date": "2025-10-08T04:11:02.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/forward/articles/cd0e0453822f7e",
    "content": "\n はじめに\nOpenAI公式のエージェント構築ツールAgentKitが発表されました。AgentKitはノーコード／ローコードでエージェントを視覚的に構築できるツールでn8n, difyなどをすでに使ったことがある人には馴染み深い分野ではないでしょうか？\nhttps://platform.openai.com/docs/guides/agents/agent-builder\n今回は、公式ガイドを見ながら実際にエージェント構築を行っていき、AgentKitの使い方をまとめていこうと思います。一部機能については発展の余地がありそうですが、すごく簡単に複雑なAIエージェントを組み込むことがで..."
  },
  {
    "title": "AIにリファクタリングをさせて、PRのタイトルと説明文も生成する",
    "date": "2025-10-08T02:49:39.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/noppe/articles/d637794eb7583b",
    "content": "\n Codex\nCodexを使ってリポジトリの小さなリファクタリングを自動化しながら、Pull Requestのタイトルと説明文までまとめて生成する方法を紹介します。自動化の狙いは、レビュー前に整った説明を添えることで手戻りを減らすことです。\n\n\n 背景と目的\n日常的にSwiftやObjective Cの修正を繰り返す中で、細かなリファクタリングを積み重ねる作業は単調になりがちです。生成AIに任せられる部分は任せ、開発者が判断すべき箇所に集中するためのフローを構築しました。Codexの全自動モードとJSON出力機能を組み合わせると、この狙いを達成できます。\n\n 準備した環境\nCodexの..."
  },
  {
    "title": "AWS でのデジタル資産決済の処理",
    "date": "2025-10-08T01:59:27.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/processing-digital-asset-payments-on-aws-jp/",
    "content": "<p>デジタル資産決済により、迅速かつ低コストのピアツーピア取引が可能になります。<br> ブロックチェーンベースの決済システムは、従来の決済方法で企業が直面する主要な課題に対処します。<br> これには、高い処理手数料、キャッシュフローに影響を与える決済遅延、業務に影響を及ぼす複雑な国際取引などが含まれます。</p> \n<p>この投稿では、ブロックチェーンベースのデジタル資産決済システムがどのようにコストと遅延を削減できるかを説明します。<br> <a href=\"https://www.circle.com/usdc\" target=\"_blank\" rel=\"noopener noreferrer\">USDC</a>、<a href=\"https://www.paypal.com/us/digital-wallet/manage-money/crypto/pyusd\" target=\"_blank\" rel=\"noopener noreferrer\">PYUSD</a>、<a href=\"https://globaldollar.com/\" target=\"_blank\" rel=\"noopener noreferrer\">USDG</a> などのステーブルコインを例として、AWS 上でサーバーレス決済システムを構築する方法を紹介します。<br> このソリューションは、従来の決済方法に代わる低コストでスケーラブル、かつ分散型の選択肢を提供します。<br> 実装は <a href=\"http://github.com/aws-samples/sample-serverless-digital-asset-payments\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub リポジトリ</a>で公開されています。</p> \n<p>この投稿は、デジタル資産決済ソリューションの技術的な概要を示すものであり、法的助言や規制上のガイダンスを意図したものではありません。<br> 法的コンプライアンス、検証、確認の要件は管轄区域によって異なる場合があり、読者ご自身の責任です。<br> この投稿で説明されている決済ソリューションを実装または使用する前に、ご自身でデューデリジェンスを実施してください。</p> \n<h2>ブロックチェーンベースの決済のメリット</h2> \n<p>デジタル資産決済を導入する企業には、魅力的なメリットがあります。</p> \n<p><strong>コスト管理</strong></p> \n<ul> \n <li>決済処理のオーバーヘッドの削減</li> \n</ul> \n<p><strong>決済効率</strong></p> \n<ul> \n <li>ブロックチェーンの確認後に資金にアクセスできます。正確なタイミングはネットワークによって異なります (数秒から数分)</li> \n</ul> \n<p><strong>グローバル展開</strong></p> \n<ul> \n <li>複数の仲介業者を介さずに国境を越えた取引を実行し、為替手数料を排除します</li> \n</ul> \n<p><strong>トランザクションの可視性</strong></p> \n<ul> \n <li>オンチェーン検証による完全なトランザクションの透明性により、監査の効率化</li> \n</ul> \n<p>デジタル資産決済は、さまざまなステークホルダーにメリットをもたらします。</p> \n<ul> \n <li><strong>加盟店</strong> – 高速で低手数料の決済により、EC （イーコマース）を効率化します。</li> \n <li><strong>金融機関</strong> – 決済時間を短縮し、国際送金や資金管理を促進します。</li> \n <li><strong>共通のメリット</strong> – 通貨交換と決済処理の手数料を最小化します。</li> \n</ul> \n<p>最終的に、デジタル資産決済は、マーチャントや金融機関が技術革新を進め、コストを最小化し、新たな機会を引き出すのに役立ちます。</p> \n<h2>ソリューション概要</h2> \n<p>このソリューションにより、企業は Ethereum を含む Ethereum Virtual Machine (EVM) 互換ネットワーク全体で、デジタル資産による消費者からの支払いを、完全な自動化と安全な資金処理で受け入れることができます。<br> テストネットとメインネット環境の両方に対応しています。<br> <a href=\"https://github.com/aws-samples/sample-serverless-digital-asset-payments\" target=\"_blank\" rel=\"noopener noreferrer\">リポジトリ</a>では、デジタル資産支払いソリューションをデプロイして使用する手順を順を追って説明しています。</p> \n<p>このソリューションの主な機能は以下の通りです。</p> \n<p><img loading=\"lazy\" class=\"wp-image-674 alignnone\" src=\"https://d2908q01vomqb2.cloudfront.net/d54ad009d179ae346683cfc3603979bc99339ef7/2025/09/26/digital_asset_payments_features-1-1024x355.png\" alt=\"\" width=\"800\" height=\"277\"></p> \n<p>デジタル資産決済ソリューションの 3 つのコアコンポーネントについて、さらに詳しく見ていきましょう。</p> \n<h3>請求書ジェネレーター</h3> \n<p>このコンポーネントを使用すると、請求書を生成し、顧客から直接支払いを受け付けることができます。</p> \n<p>請求書ジェネレーターは以下の機能を提供します:</p> \n<ul> \n <li><strong>確定的な請求書生成</strong> – 請求書ジェネレーターは、請求書とブロックチェーンアドレスの 1 対 1 のマッピングを容易にします。これにより、各支払いが対応する請求書に正しく紐付けられることが保証されます。このシステムは、<a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithItems.html#WorkingWithItems.AtomicCounters\" target=\"_blank\" rel=\"noopener\">アトミックカウンター</a>を <a href=\"https://aws.amazon.com/dynamodb/\" target=\"_blank\" rel=\"noopener\">Amazon DynamoDB</a> に保存してウォレットインデックスを維持し、高い同時実行シナリオでもスレッドセーフなアドレス生成を維持します。</li> \n <li><strong>効率的な鍵管理</strong> – <a href=\"https://en.bitcoin.it/wiki/BIP_0032\" target=\"_blank\" rel=\"noopener\">BIP32</a>/<a href=\"https://en.bitcoin.it/wiki/BIP_0044\" target=\"_blank\" rel=\"noopener\">BIP44</a> は、階層的決定性鍵導出関数を使用して、<a href=\"https://aws.amazon.com/secrets-manager/\" target=\"_blank\" rel=\"noopener noreferrer\">AWS Secrets Manager</a> に保存された単一のプライマリシードから多数の鍵パスを生成し、複数のアカウントとアドレスの構造化された管理を可能にします。</li> \n <li><strong>UI ですぐに使える出力</strong> – 請求書ジェネレーターは、請求書の入金アドレスと Data URL 形式の Base64 エンコードされた QR コードの両方を返します。これは HTML の <code><img></code> タグに直接埋め込むことができます。</li> \n <li><strong>セキュリティとプライバシーの強化</strong> – 各顧客は一意の 1 回限りの支払いアドレスを受け取ります。これにより、アドレスの再利用を防ぎ、パブリックブロックチェーン上でユーザーのプライバシーを保護することができます。</li> \n <li><strong>簡素化された会計処理</strong> – 合理化された追跡により、会計と監査が容易になります。</li> \n</ul> \n<p>定期支払いのシナリオでは、安定した顧客識別子から支払いアドレスを導出するようにソリューションを拡張できます。<br> これにより、各顧客に対して一貫したウォレットアドレスが作成され、定期支払いが合理化され、顧客の許可リスト登録プロセスが簡素化されます。</p> \n<h3>支払いの自動検出</h3> \n<p>「The Watcher」は、自動的な更新情報とイベント駆動型通知による支払い状況の監視を可能にします。</p> \n<p>自動支払い検出コンポーネントは、以下の機能を提供します。</p> \n<ul> \n <li><strong>最適化されたデータベースクエリ</strong> – DynamoDB グローバルセカンダリインデックス (<code>status-index</code>) を使用して、<code>pending</code> 状態の請求書のみをクエリします。これにより、請求書の総量が増加してもクエリのパフォーマンスが維持され、DynamoDB の読み取り消費量が大幅に削減されます。</li> \n <li><strong>リアルタイム残高検証</strong> – ETH および ERC-20 トークンの残高を請求書の金額と照合して検証します。</li> \n <li><strong>自動ステータス更新</strong> – 十分な支払いが検出されると、請求書を自動的に <code>paid</code> としてマークします。(デフォルトでは、このソリューションはファイナリティやリオーグを考慮しません。より強力な保証が必要な場合は、Watcher の <code>eth_getBalance</code> に <code>finalized</code> ブロックタグを渡すことができます。)</li> \n <li><strong>即時通知</strong> – 支払い確認時に Amazon SNS を通じて加盟店への通知をトリガーします。</li> \n</ul> \n<h3>資金照合</h3> \n<p>請求書の支払いを受け取った後、資金は安全な管理のために指定された財務ウォレット (できれば高度にセキュアなコールドウォレット) に自動的に移動されます。</p> \n<p>これにより、数分以内にオフラインで支払いが安全に処理され、加盟店が選択したウォレットへの資金集約のための監査可能なメカニズムがサポートされます。</p> \n<p>ファンド照合プロセスは、以下の機能を提供します。</p> \n<ul> \n <li><strong>DynamoDB Streams によるトリガー</strong> – フィルタリングされたストリームトリガーを通じて確認済みの支払いを検出します (ステータスが <code>paid</code>)。ネットワークの混雑や一時的なブロックチェーンの問題に対処するための組み込みメカニズムを備えています。</li> \n <li><strong>ガスの最適化</strong> – コスト効率の高いトランザクションのために、ネットワークのガス価格を動的に計算します。</li> \n <li><strong>ガス補充メカニズム</strong> – 専用のホットウォレット「ガスタンク」が、ネットワークのネイティブトークン (例: ETH) の準備金を保持します。これは、ERC-20 インボイスを補充するためだけに使用され、最小限のガス料金で コールドストレージの金庫に集約できるようにします。</li> \n <li><strong>安全な転送</strong> – 秘密鍵はメモリ内で決定論的に導出され、保存されません。これらは個々のインボイスからの転送を実行するために使用されます。これは Lambda 内で行われ、AWS は<a href=\"https://aws.amazon.com/trust-center/operator-access/\" target=\"_blank\" rel=\"noopener noreferrer\">オペレーターによるアクセスはありません</a>。</li> \n <li><strong>ステータスの更新</strong> – 正常に完了すると、インボイスのステータスを <code>swept</code> に更新します。</li> \n</ul> \n<p>次の図は、ソリューションのアーキテクチャを示しています。<br> このアーキテクチャは、サーバーレスなデジタル資産決済処理の PoC （ Proof of Concept ）を目的としており、本番環境で使用できる状態ではありません。<br> セキュリティ、信頼性、コンプライアンス、監査可能性に関する本番環境の基準を満たすには、追加の機能強化が必要です。</p> \n<p><img loading=\"lazy\" class=\"alignnone wp-image-682 size-full\" src=\"https://d2908q01vomqb2.cloudfront.net/d54ad009d179ae346683cfc3603979bc99339ef7/2025/09/26/Payments-Digital-Assets-with-legend-1.png\" alt=\"\" width=\"2167\" height=\"1297\"></p> \n<p>以下のフローの各ステップの番号は、Ethereum ネットワーク上でのステーブルコイン決済を示しており、上記のアーキテクチャ図の番号に対応しています。</p> \n<ol> \n <li>加盟店は、<a href=\"https://aws.amazon.com/api-gateway/\" target=\"_blank\" rel=\"noopener noreferrer\">Amazon API Gateway</a> が提供する <code>/create-invoice</code> REST API へのリクエストを通じて、ステーブルコインのインボイスを作成します。これは API キーを使用して保護されています。</li> \n <li><a href=\"https://aws.amazon.com/lambda/\" target=\"_blank\" rel=\"noopener noreferrer\">AWS Lambda</a> 関数である Invoice Generator がトリガーされ、<a href=\"https://aws.amazon.com/secrets-manager/\" target=\"_blank\" rel=\"noopener noreferrer\">AWS Secrets Manager</a> からニーモニック<a href=\"https://en.bitcoin.it/wiki/Seed_phrase\" target=\"_blank\" rel=\"noopener noreferrer\">シードフレーズ</a>を取得します。シードフレーズは、インボイスに対応するキーペアを作成 (および復元) するために必要です。</li> \n <li>Invoice Generator は Amazon DynamoDB のアトミックカウンターをインクリメントします。アトミックカウンターの値はインデックスを表します。これはシードフレーズと共に使用され、特定の支払いに対する<a href=\"https://www.investopedia.com/terms/h/hd-wallet-hierarchical-deterministic-wallet.asp\" target=\"_blank\" rel=\"noopener noreferrer\">階層的決定性 (HD)</a> ウォレットアドレスを決定論的に導出します。</li> \n <li>Invoice Generator Lambda 関数は新しいインボイスを作成し、<code>status: pending</code> として DynamoDB に保存します。データは <a href=\"https://aws.amazon.com/kms/\" target=\"_blank\" rel=\"noopener noreferrer\">AWS Key Management Service</a> (AWS KMS) を使用して保管時に自動的に暗号化されます。</li> \n <li>前のステップで生成された QR コードには、送金先アドレス、通貨、金額がエンコードされており、加盟店に返されます。加盟店は QR コードを顧客と共有します。顧客は、入金アドレスに適切な金額の資金を送信することで、ステーブルコインの支払いを行います。</li> \n <li><a href=\"https://aws.amazon.com/eventbridge/\" target=\"_blank\" rel=\"noopener noreferrer\">Amazon EventBridge</a> スケジュールを通じて、Watcher という Lambda 関数が毎分トリガーされます。Watcher は DynamoDB から保留中のインボイスを取得し、提供された RPC エンドポイントを通じて行われた支払いを確認します。支払いが到着した場合、インボイスを <code>paid</code> に更新します。</li> \n <li>Watcher Lambda 関数は、<a href=\"https://aws.amazon.com/sns/\" target=\"_blank\" rel=\"noopener noreferrer\">Amazon Simple Notification Service</a> (Amazon SNS) を使用して、加盟店に支払い確認を送信します。</li> \n <li><code>CryptoInvoices</code> データベースで支払いが検出されると (ステータスが <code>paid</code> に遷移すると)、<a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.html\" target=\"_blank\" rel=\"noopener noreferrer\">Amazon DynamoDB Streams</a> を使用してイベントが発行されます。これにより Lambda Sweeper 関数がトリガーされます。</li> \n <li>Sweeper 関数は資金の集約トランザクションに必要なガスを計算し、これが ERC20 インボイスであるため Eth をリクエストします。</li> \n <li>十分な Eth が利用可能になると、Sweeper 関数はインボイスに関連付けられたトークンをオフラインの保管用ウォレットに送信します。Sweeper 関数は、HD ウォレットのシードフレーズをリクエストし、トランザクションに署名するための秘密鍵を導出することでこれを行います。その後、インボイスは <code>CryptoInvoices</code> データベースで <code>swept</code> としてマークされます。資金の集約プロセス中にエラーが発生した場合、失敗がログに記録され、最大 3 回の再試行が行われます。</li> \n <li>加盟店は、API Gateway を使用して公開された REST エンドポイントを通じてインボイスを管理できます (インボイスの現在のステータスを表示したり、保留中のインボイスをキャンセルしたりできます)。</li> \n</ol> \n<p>支払い、支払い監視、資金の回収フローの詳細な図解については、<a href=\"https://github.com/aws-samples/sample-serverless-digital-asset-payments#technical-payment-flow\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub リポジトリ</a>を参照してください。</p> \n<h2>まとめ</h2> \n<p>このサーバーレスソリューションは、AWS 上でデジタル資産決済を処理するための安全で効率的、かつコスト効率の高いシステムを提供します。<br> AWS のサービスとブロックチェーン技術を活用することで、組織は決済処理コストを削減し、資金へのより迅速なアクセスを実現し、キャッシュフローを向上させ、グローバルに事業を展開できます。</p> \n<p>本記事は、2025 年 10 月 2 日に公開された <a href=\"https://aws.amazon.com/jp/blogs/web3/processing-digital-asset-payments-on-aws/\">Processing digital asset payments on AWS</a> を翻訳したものです。翻訳は Blockchain Prototyping Engineer の 深津颯騎 が担当しました。</p> \n<p><a href=\"http://github.com/aws-samples/sample-serverless-digital-asset-payments\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a> で完全なコードを確認し、AWS 上で安全なサーバーレスデジタル資産決済ソリューションの構築を始めましょう。</p> \n<h3>著者について</h3> \n<footer> \n <div class=\"blog-author-box\"> \n  <div class=\"blog-author-image\">\n   <img loading=\"lazy\" class=\"aligncenter size-full wp-image-29797\" src=\"https://d2908q01vomqb2.cloudfront.net/d54ad009d179ae346683cfc3603979bc99339ef7/2025/08/28/simongo.png\" alt=\"Simon Goldberg\" width=\"120\" height=\"160\">\n  </div> \n  <h3 class=\"lb-h4\">Simon Goldberg</h3> \n  <p><a href=\"https://www.linkedin.com/in/simon-go/\" target=\"_blank\" rel=\"noopener\">Simon</a> は、AWS のブロックチェーン/Web3 スペシャリストソリューションアーキテクトです。仕事以外では、音楽制作、読書、クライミング、テニス、ハイキング、コンサート鑑賞、Web3 テクノロジーの研究を楽しんでいます。</p> \n </div> \n <div class=\"blog-author-box\"> \n  <div class=\"blog-author-image\">\n   <img loading=\"lazy\" class=\"aligncenter size-full wp-image-29797\" src=\"https://d2908q01vomqb2.cloudfront.net/d54ad009d179ae346683cfc3603979bc99339ef7/2025/08/28/david.jpeg\" alt=\"David Dornseifer\" width=\"120\" height=\"160\">\n  </div> \n  <h3 class=\"lb-h4\">David Dornseifer</h3> \n  <p><a href=\"https://www.linkedin.com/in/daviddornseifer/\" target=\"_blank\" rel=\"noopener\">David</a> は、AWS のブロックチェーンおよびコンフィデンシャルコンピュートアーキテクトです。彼は、お客様がエンドツーエンドのブロックチェーンおよびコンフィデンシャルコンピュートソリューションの設計、開発、スケーリングを支援することに注力しています。主な専門分野は、デジタル資産の保管と鍵管理ソリューションです。</p> \n </div> \n</footer>"
  },
  {
    "title": "Rustでセキュリティsandboxツールを作った",
    "date": "2025-10-08T00:00:01.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/techlead/articles/2025-10-05-rust-sandbox-tool-mori",
    "content": "\n はじめに\nども\n最近、仕事場にClaude Codeを導入して、チームのパフォーマンスが爆増して仕事が減ってきたゴリラです。\nClaude Codeを導入する際に便利なMCP(serenaやcontext7、playwrightなど)をいくつか入れたんですが、セキュリティちゃんとしないとねという話しになり、それがきっかけでセキュリティsandboxツールのmoriを作った話しです。\n\nhttps://github.com/skanehira/mori\n\n mori(杜)とは\nセキュリティといっても、様々な観点で対策を打つ必要がありますが、今回開発したmoriはsandbox-exec..."
  },
  {
    "title": "vercel/next.js – v15.6.0-canary.52",
    "date": "2025-10-07T23:45:10.000Z",
    "source": "GitHub",
    "url": "https://github.com/vercel/next.js/releases/tag/v15.6.0-canary.52",
    "content": "### Core Changes\n\n- [Breaking] Bump sass-loader to v16: #84387\n- Update cases for build complete with adapters: #84361\n- Turbopack: delete .next folder before throwing due to \"pages/app directory must be in the same folder\": #84553\n- [mcp] change get-project-path to get-project-metadata: #84619\n\n### Misc Changes\n\n- Update Rspack development test manifest: #84592\n- Update Rspack production test manifest: #84593\n- Turbopack: Remove workaround in hyper for rustc miscompilation bug on macos intel: #84578\n- Turbopack: add manual worker count override: #84454\n- Turbopack: don't ignore TS parse errors: #84597\n- Add middleware to routes order doc: #84618\n\n### Credits \n\nHuge thanks to @vercel-release-bot, @bgw, @devjiwonchoi, @mischnic, @ijjk, @sokra, and @huozhi for helping!\n"
  },
  {
    "title": "AWS Common Runtime で Amazon S3 のスループットを高速化",
    "date": "2025-10-07T22:50:05.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/improving-amazon-s3-throughput-for-the-aws-cli-and-boto3-with-the-aws-common-runtime/",
    "content": "<p>このブログは 2023 年 11 月 27 日に James Bornholt、Abhinav Goyal、Jonathan Henson、Andrew Kutsy によって執筆された内容を日本語化したものです。原文は<a href=\"https://aws.amazon.com/jp/blogs/storage/improving-amazon-s3-throughput-for-the-aws-cli-and-boto3-with-the-aws-common-runtime/\" target=\"_blank\" rel=\"noopener\">こちら</a>を参照してください。</p> \n<p>データはあらゆる機械学習パイプラインの中心にあります。基盤モデル (FM) の事前トレーニング、ビジネス固有のデータによる FM のファインチューニング、推論クエリの実行など、機械学習ライフサイクルのあらゆる段階においてコンピューティングリソースを常時稼働させて有用な作業を実行できるようにするには、低コストで高性能なデータストレージが必要です。お客様はトレーニングデータやモデルチェックポイントの保存に <a href=\"https://aws.amazon.com/jp/s3/\" target=\"_blank\" rel=\"noopener\">Amazon Simple Storage Service (Amazon S3)</a> を使用することが推奨されています。理由として弾力性、複数のテラビット/秒にスケールする性能、そして S3 Intelligent-Tiering のようなストレージクラスによってアクセスパターンが変化した際に自動的にストレージコストを節約できるからです。</p> \n<p>Amazon S3 との間のデータ転送を自動的に高速化し、機械学習パイプラインの基盤をさらに強化する <a href=\"https://aws.amazon.com/jp/cli/\" target=\"_blank\" rel=\"noopener\">AWS Command Line Interface (AWS CLI)</a> と <a href=\"https://aws.amazon.com/jp/sdk-for-python/\" target=\"_blank\" rel=\"noopener\">AWS SDK for Python (Boto3)</a> の新しいアップデートを発表しました。AWS CLI と Boto3 は、Amazon S3 との間の高スループットデータ転送を提供するために特別に設計・構築された AWS Common Runtime (CRT) S3 クライアントと統合されました。この統合は現在、Amazon EC2 <a href=\"https://aws.amazon.com/jp/ec2/instance-types/trn1/\" target=\"_blank\" rel=\"noopener\">Trn1</a>、<a href=\"https://aws.amazon.com/jp/ec2/instance-types/p4/\" target=\"_blank\" rel=\"noopener\">P4d</a>、<a href=\"https://aws.amazon.com/jp/ec2/instance-types/p5/\" target=\"_blank\" rel=\"noopener\">P5</a> インスタンスタイプではデフォルトで有効化されており、他のインスタンスタイプではオプトインとして有効化することができます。</p> \n<h2>AWS Common Runtime とは何か</h2> \n<p>Amazon S3 は、どの HTTP クライアントからもアクセスできるシンプルな REST API で、お客様から好評をいただいています。ただし、大量のデータを扱うアプリケーションで最高のパフォーマンスを得るには、リクエストの並列化、タイムアウト、再試行、バックオフなどの<a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/optimizing-performance.html\" target=\"_blank\" rel=\"noopener\">パフォーマンスのベストプラクティス</a>を実装する必要があります。数年前、私たちはこれらのパターンを各 AWS SDK で再実装していて、お客様も独自のアプリケーションにこれらのパターンを実装しなければならないことに気付きました。私たちは、こうした一般的な設計パターンを再実装することなく、どのアプリケーションからでも簡単に S3 の伸縮自在なパフォーマンスにアクセスできるようにしたいと考えていました。</p> \n<p>このポータブルなパフォーマンスを実現するために、<a href=\"https://docs.aws.amazon.com/sdkref/latest/guide/common-runtime.html\" target=\"_blank\" rel=\"noopener\">AWS Common Runtime (CRT)</a> を構築しました。CRT は C で書かれたオープンソースライブラリの集合体で、高性能 HTTP クライアントや暗号化ライブラリなど、AWS サービスとやり取りするための共通機能を実装しています。CRT ライブラリは連携して AWS サービスに高速で信頼性の高いクライアントエクスペリエンスを提供します。Amazon S3 の場合、CRT にはネイティブ S3 クライアントが含まれており、自動リクエストの並列化、リクエストのタイムアウトと再試行、接続の再利用と管理を実装して、ネットワークインターフェイスの過負荷を回避します。たとえば、S3 から 1 つの巨大なオブジェクトをダウンロードする場合、CRT クライアントは複数のバイト範囲を自動的に並行してダウンロードするため、スループットが向上し、ネットワークインターフェースを上手に活用します。</p> \n<p>CRT は <a href=\"https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/crt-based-s3-client.html\" target=\"_blank\" rel=\"noopener\">Java</a> や <a href=\"https://docs.aws.amazon.com/sdk-for-cpp/v1/developer-guide/examples-s3-crt.html\" target=\"_blank\" rel=\"noopener\">C++</a> を含む複数の AWS SDK で既に本番環境で利用可能であり、以前は AWS CLI の実験的なオプションとして提供されていました。また、オープンソースファイルクライアントである <a href=\"https://aws.amazon.com/jp/s3/features/mountpoint/\" target=\"_blank\" rel=\"noopener\">Mountpoint for Amazon S3</a> の基盤でもあります。 私たちはCRTをTrn1、P4d、P5 EC2 インスタンスタイプの AWS CLI と Boto3 で提供を開始しました。これらのインスタンスタイプは大きな CPU とネットワークインターフェースを持ち、これらのパフォーマンス設計パターンから最も恩恵を受けることができます。 他のインスタンスタイプについては、AWS CLI または Boto3 アプリケーションで CRT を使用するように選択すると、多くの場合、自動的にパフォーマンス向上が得られます。</p> \n<h2>ML パイプラインのパフォーマンス向上</h2> \n<p>AWS Common Runtime で実現できる可能性のあるパフォーマンス向上を実証するために、ML ライフサイクルの各ステップを表す 4 つのベンチマークデータセットを収集しました：</p> \n<ul> \n <li>Caltech-256：<a href=\"https://data.caltech.edu/records/nyy15-4j048\" target=\"_blank\" rel=\"noopener\">画像データセット</a>で、平均 40 kB サイズの 30,607 の小さな画像ファイルを含み、総データセットサイズは 1.1 GB です。</li> \n <li>Caltech-256-WebDataset：同じ Caltech 256 の画像データセットですが、WebDataset 形式を使用して保存されており、複数の画像を 100 MB のシャードオブジェクトにまとめています。シャード化されたデータセットは、ML トレーニングで Amazon S3 を使用する際に、より高いパフォーマンスを達成できることがよくあります。</li> \n <li>C4-en：<a href=\"https://commoncrawl.org/\" target=\"_blank\" rel=\"noopener\">Common Crawl corpus</a>に基づく C4 データセットの英語サブセットで、320 MB の 1,024 ファイルを含みます。</li> \n <li>Checkpoint：単一の 7.6 GB PyTorch チェックポイントファイルで、大規模 ML モデルのシャード化されたチェックポイントを代表しています。</li> \n</ul> \n<p>AWS CLIを使用して、これらの各データセットを trn1n.32xlarge EC2 インスタンスからアップロードおよびダウンロードしました。AWS CRTが有効になっていない場合と有効になっている場合の両方です。結果は次のとおりです：</p> \n<p><img loading=\"lazy\" class=\"aligncenter size-full wp-image-19674\" src=\"https://d2908q01vomqb2.cloudfront.net/e1822db470e60d090affd0956d743cb0e7cdf113/2023/11/25/Benchmark-datasets-representative-of-ML-lifecycle-steps.png\" alt=\"Benchmark datasets representative of ML lifecycle steps\" width=\"1031\" height=\"1470\"></p> \n<p>CRT は、AWS CLI の最新リリースへの更新以外の追加作業なしで、これらのベンチマーク全体で 2 ～ 6 倍のパフォーマンス向上を実現します。CRT を有効にして Boto3 を使用する Python アプリケーションでも、同様のパフォーマンス向上が見られました。</p> \n<h2>アプリケーションで CRT を使い始める</h2> \n<p>AWS CLI で CRT を使用するには、まず <a href=\"https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html\" target=\"_blank\" rel=\"noopener\">AWS CLI の最新バージョンをインストールしてください。</a>まだ <a href=\"https://docs.aws.amazon.com/cli/latest/userguide/cliv2-migration.html\" target=\"_blank\" rel=\"noopener\">AWS CLI のバージョン 2 にアップデート</a>していない場合は絶好の機会です。CRT との統合はバージョン 2 でのみ利用可能です。Trn1、P4d、または P5 EC2 インスタンスで実行している場合はこれだけで準備完了です — aws s3 sync のような CLI コマンドを使用する際に、CRT はデフォルトで有効になります。その他のインスタンスタイプでは、次のコマンドを実行して CRT を有効にすることができます：</p> \n<pre>aws configure set s3.preferred_transfer_client crt</pre> \n<p>Boto3 で CRT を使用するには、まず追加の crt 機能を含む Boto3 をインストールしていることを確認してください。たとえば、pip を使用してインストールする場合は、以下を実行します：</p> \n<pre>pip install boto3[crt]</pre> \n<p>Trn1、P4d、および P5 インスタンスでは、Boto3 が crt 機能付きでインストールされると、upload_file と download_file の呼び出しに自動的に CRT が使用されます。たとえば、CRT を使用してファイルを S3 にアップロードするには、以下を実行します：</p> \n<pre>import boto3\ns3 = boto3.client('s3')\ns3.upload_file('/tmp/hello.txt', 'doc-example-bucket', 'hello.txt')</pre> \n<p>また、s3transfer パッケージを使用して Boto3 で CRT にアクセスできますが、このパッケージはまだ一般提供を開始されておらず、将来変更される可能性があります。</p> \n<h2>パフォーマンスチューニング</h2> \n<p>CRT は S3 を使用するアプリケーションのパフォーマンスを自動的に最適化します。デフォルト設定では多くの状況で速度が向上します。これらのデフォルトでは、CPU トポロジー、メモリ量、<a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/enhanced-networking-ena.html\" target=\"_blank\" rel=\"noopener\">Elastic Network Adapter (ENA)</a> インターフェイスの数とレイアウトなど、実行中のインスタンスタイプの仕様に基づいて CRT が自動的に設定されます。これらの詳細に基づいて、 CRTはS3リクエストの並列化戦略（並列接続の数、各リクエストのサイズ、S3 IPアドレスごとのリクエスト数など）を選択します。</p> \n<p>CRT 転送で使用されるネットワーク帯域幅の量を制限する場合など、状況によってはこれらのデフォルトをオーバーライドしたい場合があります。AWS CLI で CRT を使用する場合は、target_bandwidth パラメーターを設定することでデフォルトをオーバーライドできます。たとえば、転送を 5 ギガビット/秒に制限するには、以下を実行します：</p> \n<pre>aws configure set s3.target_bandwidth 5Gb/s</pre> \n<h2>注意事項とオプトアウト</h2> \n<p>CLI と Boto3 用の CRT の今回のリリースでは、多くの ML アプリケーションのパフォーマンスが向上しますが、注意すべき点が 3 つあります。</p> \n<h3>マルチプロセス実行</h3> \n<p>CRT は、S3 リクエストを複数のスレッドで並行して行うことで、高スループットのデータ転送を実現します。これは、一度に 1 つの S3 クライアントしか使用しないアプリケーションに最適です。これらのスレッドはインスタンスの vCPU に分散する可能性があるためです。ただし、それぞれが独自の S3 クライアントを作成する複数のプロセスを使用する場合、これらのスレッドは互いに競合して S3 のパフォーマンスを低下させる可能性があります。また、これらの複数のクライアントがネットワーク帯域幅をめぐって競合し、輻輳が発生してパフォーマンスが低下する場合もあります。</p> \n<p>AWS CLI と Boto3 の CRT 統合では、複数のプロセスが CRT ベースの S3 クライアントを作成していることを自動的に検出し、このような場合は非 CRT ベースの S3 クライアントにフォールバックします。このフォールバックにより、CRT クライアントが 1 つだけ存在するようになるため、システム上で競合が発生するリスクが軽減されますが、その結果、他のクライアントのパフォーマンスが低下する可能性があります。この制限は複数の S3 クライアントにのみ影響します。1 つの S3 クライアントを同じプロセス内の複数のスレッドで共有することも、同じ AWS CLI 呼び出し内の多数の S3 転送で共有することもできます。</p> \n<p>アプリケーションが複数のプロセスで独自の S3 クライアントを作成してしまうパターンは主に 2 つあります。1 つ目は、AWS CLI の呼び出しを複数同時に実行すると、各 CLI プロセスに独自の S3 クライアントが存在することになります。たとえば、以前に AWS CLI を parallel や xargs -P ユーティリティを実行してパフォーマンスを向上させたことがある場合は、複数の AWS CLI プロセスを使用し、それぞれに独自の S3 クライアントを用意することになります。新しい CRT 統合では、CLI プロセスを 1 つだけ使用し、CLI に転送の並列処理を任せることをお勧めします。2 つ目に、<a href=\"https://pytorch.org/\" target=\"_blank\" rel=\"noopener\">PyTorch</a> のような ML フレームワークで Boto3 を使用する場合、データをロードするために複数のワーカープロセス （たとえば、PyTorch の <a href=\"https://docs.pytorch.org/docs/stable/data.html\" target=\"_blank\" rel=\"noopener\">DataLoader</a> の num_workers 引数） を使用することになります。</p> \n<h3>マルチリージョンおよびクロスリージョンアクセス</h3> \n<p>AWS CLI と Boto3 の CRT 統合は、現在 S3 バケットの自動リージョン検出をサポートしていません。つまり、アプリケーションがインスタンスが実行されているリージョンとは異なるリージョンの S3 バケットにアクセスする場合、ターゲットリージョンを手動で指定する必要があります。これを行うには、AWS CLI の –region argument を使用するか、AWS CLI と Boto3 の両方に AWS_REGION 環境変数を設定します。Boto3 の場合、リージョンはクライアントの作成時に設定されるため、この制限により、1 つの S3 クライアントは 1 つのリージョンのバケットにしかアクセスできないことにもなります。複数のリージョンのバケットにアクセスする必要がある場合は、複数のクライアントを作成する必要があります。</p> \n<h3>Transfer コンフィグレーション</h3> \n<p>Boto3 の CRT 統合は、クライアントを転送ごとに設定するための <a href=\"https://boto3.amazonaws.com/v1/documentation/api/latest/reference/customizations/s3.html#boto3.s3.transfer.TransferConfig\" target=\"_blank\" rel=\"noopener\">TransferConfig</a> API をサポートしていません。代わりに、CRT はネットワーク帯域幅を最大化するようにクライアントを自動的に設定し、同じプロセスで同時に実行される S3 リクエストすべてでその帯域幅を共有します。</p> \n<h3>CRT からのオプトアウト</h3> \n<p>これらの制限のいずれかを回避する必要がある場合は、CRT をオプトアウトできます。AWS CLI の CRT 統合を無効にするには、以下を実行します：</p> \n<pre>aws configure set s3.preferred_transfer_client classic</pre> \n<p>同様に、Boto3 の CRT S3 統合を無効にするには、boto3 転送コールで使用するときに TransferConfig の preferred_transfer_client を classic に設定してください。</p> \n<pre><code class=\"lang-python\">from boto3.s3.transfer import TransferConfig\nconfig = TransferConfig(preferred_transfer_client='classic')\nclient = boto3.client('s3', region_name='us-west-2')\nclient.upload_file('/tmp/file', Bucket='doc-example-bucket',\nKey='test_file', Config=config)</code></pre> \n<h2>まとめと今後の改善点</h2> \n<p>Amazon S3 は伸縮自在でパフォーマンスが高いため、ML トレーニングデータやモデルチェックポイントを保存するのに最適です。AWS CLI と Boto3 の改善により、ML パイプラインで S3 にアクセスする際のパフォーマンスをさらに簡単に最適化できるようになり、ジョブをより早く完了し、コストを削減できるようになりました。将来的には、AWS Common Runtime をデフォルトでより多くのインスタンスタイプで有効にし、よりきめ細かな調整機能を公開して、ワークロードのパフォーマンスをさらに最適化できるようにする予定です。<a href=\"https://github.com/aws/aws-cli/tree/v2\">AWS CLI</a>、<a href=\"https://github.com/boto/boto3\" target=\"_blank\" rel=\"noopener\">Boto3</a>、<a href=\"https://github.com/awslabs/aws-c-s3\" target=\"_blank\" rel=\"noopener\">AWS Common Runtime</a> はすべてオープンソースプロジェクトであり、それぞれの GitHub リポジトリに関するフィードバックをお待ちしています。</p> \n<footer> \n <div class=\"blog-tag-list\">\n  TAGS:\n  <br> \n  <a href=\"https://aws.amazon.com/blogs/storage/tag/amazon-simple-storage-service-amazon-s3/\" rel=\"tag\">Amazon Simple Storage Service (Amazon S3)</a>, \n  <a href=\"https://aws.amazon.com/blogs/storage/tag/aws-cloud-storage/\" rel=\"tag\">AWS Cloud Storage</a>, \n  <a href=\"https://aws.amazon.com/blogs/storage/tag/aws-open-source/\" rel=\"tag\">AWS Open Source</a>, \n  <a href=\"https://aws.amazon.com/blogs/storage/tag/aws-reinvent/\" rel=\"tag\">AWS re:Invent</a>, \n  <a href=\"https://aws.amazon.com/blogs/storage/tag/machine-learning/\" rel=\"tag\">machine learning</a>\n </div> \n <div class=\"blog-author-box\"> \n  <div class=\"blog-author-image\">\n   <img src=\"https://d2908q01vomqb2.cloudfront.net/e1822db470e60d090affd0956d743cb0e7cdf113/2021/10/20/image-28.png\" alt=\"James Bornholt\" width=\"125\">\n  </div> \n  <h3 class=\"lb-h4\">James Bornholt</h3> \n  <p>James Bornholt は、Amazon S3 の自動推論に取り組んでいます。</p> \n </div> \n <div class=\"blog-author-box\"> \n  <div class=\"blog-author-image\">\n   <img src=\"https://d2908q01vomqb2.cloudfront.net/e1822db470e60d090affd0956d743cb0e7cdf113/2023/11/26/Abhinav-Goyal-1024x1020.jpg\" alt=\"Abhinav Goyal\" width=\"125\">\n  </div> \n  <h3 class=\"lb-h4\">Abhinav Goyal</h3> \n  <p>Abhinav Goyal は、AWS の SDK およびツールチームのエンジニアリングマネージャーで、Common Runtime Tools、AWS Rust SDK、AWS C++ SDK を担当しています。AWS に入社する前は、さまざまな銀行アプリケーション向けの大規模分散システムを構築した 20 年以上の技術リーダーシップの経験があります。余暇には、Abhinav は読書をしたり、卓球をしたり、長い散歩をしたりするのが好きです。彼はデリーのインド工科大学（インド）で学士号を取得しています。</p> \n </div> \n <div class=\"blog-author-box\"> \n  <div class=\"blog-author-image\">\n   <img src=\"https://d2908q01vomqb2.cloudfront.net/e1822db470e60d090affd0956d743cb0e7cdf113/2023/11/27/henso.jpeg\" alt=\"Jonathan Henson\" width=\"125\">\n  </div> \n  <h3 class=\"lb-h4\">Jonathan Henson</h3> \n  <p>Jonathan Henson は AWS の主任ソフトウェアエンジニアで、AWS SDK のランタイムとアーキテクチャを専門としています。</p> \n </div> \n <div class=\"blog-author-box\"> \n  <div class=\"blog-author-image\">\n   <img src=\"https://d2908q01vomqb2.cloudfront.net/e1822db470e60d090affd0956d743cb0e7cdf113/2021/11/30/Andrew-Kutsy.jpg\" alt=\"Andrew Kutsy\" width=\"125\">\n  </div> \n  <h3 class=\"lb-h4\">Andrew Kutsy</h3> \n  <p>Andrew は Amazon S3 のプロダクトマネージャーです。彼は 2016 年に Amazon に入社し、ユーザーがAWS を使用する革新的な方法について学ぶためにユーザーと話すのが大好きです。彼はコーヒーに夢中で、旅行が好きで、現在、世界で最高のクロワッサンを探しています。</p> \n </div> \n</footer>"
  },
  {
    "title": "vercel/next.js – v15.6.0-canary.51",
    "date": "2025-10-07T17:39:59.000Z",
    "source": "GitHub",
    "url": "https://github.com/vercel/next.js/releases/tag/v15.6.0-canary.51",
    "content": "### Core Changes\n\n- Build: Highlight TypeScript and ESLint being run clearer: #84606\n\n### Credits \n\nHuge thanks to @timneutkens for helping!\n"
  },
  {
    "title": "【Zenn最速！？】OpenAIのAgent Builder・Chatkitのデプロイを試してみた！",
    "date": "2025-10-07T12:55:01.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/atoy0m0/articles/7b3d7d99a6bb33",
    "content": "\n はじめに\n日本時間の10月7日、朝起きたらOpenAIから衝撃の数々が発表されましたね。\n今回はZenn最速(！？)で、Agent BuilderおよびChatkitのデプロイを試してみた！と書きたい想いが先行した、検証記事でございます。\n結論だけ書きますと、Agent Builderで発行するWORKFLOW_IDをChatkitに埋め込んでアプリを実行するという感じでした。\n\n OpenAI公式ドキュメント\nAgent Builder\nhttps://platform.openai.com/docs/guides/agent-builder\nChatKit\nhttps://pla..."
  },
  {
    "title": "Required<Partial<A>>とAって、どんなAでも同じ型になるの??",
    "date": "2025-10-07T11:17:08.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/y_ta/articles/required-partial-equals-a",
    "content": "\n はじめに\nPartial&lt;T&gt;はTの各キーをオプショナルにする型、Required&lt;T&gt;はオプショナルを除去してすべてのプロパティを必須にする型です。つまり、Required&lt;Partial&lt;A&gt;&gt;は一見すると、元のAと同じになるように思えます。しかし、これは必ずしもなりたたず、例外パターンが存在します。\n\n オプショナル（プロパティ）とは\nそもそもオプショナルとはどのような状態かおさらいしましょう。\n次のようなAを考えます。\ntype A = ｛ z?: string ｝\n\nconst a1: A = {}; //OK\nconst a..."
  },
  {
    "title": "2600億回のモンテカルロを14秒で：Rust×rayon×SIMDで並列化してみた",
    "date": "2025-10-07T11:00:01.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/yua134/articles/montecarlo-pi",
    "content": "\n 1. 導入 🦀\nモンテカルロ法はシンプルながらも膨大な試行回数を必要とするアルゴリズムです。数十億、数百億といった規模になると、素朴な実装では到底現実的な時間で終わりません。\n今回はこのモンテカルロ法で円周率を推定しようと試みました。\n今回取り組んだ末に得たものは「2600億回の試行を14秒で終わらせる」でした。Rustの安全性と低レベル最適化の両立、そして並列化のためのrayon、さらにCPUの演算能力を引き出すSIMDを組み合わせることで、CPUフレンドリーかつの余力を使い切る実装を目指しました。\n\n\n 2. モンテカルロ法による円周率推定\nモンテカルロ法で円周率を推定するために..."
  },
  {
    "title": "GitHubの依存アップデートPRをまとめて捌くCLI拡張「gh-dep」を作りました",
    "date": "2025-10-07T10:59:33.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/jackchuka/articles/65592ccfb8c548",
    "content": "\n TL;DR\n\n依存アップデート PR のレビューを効率化する GitHub CLI 拡張を作りました\nInstall は簡単 gh extension install jackchuka/gh-dep\n\n使い方は gh dep --owner &lt;owner&gt; と打つだけ\n検索機能でまとめて Approve (&amp; merge) できます\nGitHub Star ⭐ 記事 ♥️ もらえると喜びます！\n\nhttps://github.com/jackchuka/gh-dep\n\n\n 背景\nDependabot や Renovate で大量に発生する依存アップデート PR。..."
  },
  {
    "title": "RAGの精度向上手法、がっつりまとめ【2025年】",
    "date": "2025-10-07T00:01:05.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/knowledgesense/articles/148dfe2ca1d146",
    "content": "\n この記事は何\nナレッジセンスでは、エンタープライズ向けにRAGサービスを提供しています。その中で「RAGは簡単に作れるけど、精度を上げるのは難しい」という課題に日々向き合っています。本記事は、2024~2025年に公開された研究や事例をもとに、RAGの回答精度を高める代表的なアプローチを ざっくりまとめたものです。\n\n ざっくりサマリー\nこの記事では、企業の社内データを利用したRAG、特に大企業で「エンタープライズRAG」での実装手法についてざっくり理解します。まず、エンタープライズRAGでのよくある課題をお伝えします。その上で、2025年現在の最新動向を踏まえ、評価手法のような基本..."
  },
  {
    "title": "20周年記念にGitを嫌いになろう",
    "date": "2025-10-06T22:59:31.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/mokume1shine/articles/434cd1ff53803e",
    "content": "!\nGitに対して（理不尽に）キレてみることがこの記事のコンセプトです。\nそのため、考察が甘い・過剰な言い切り表現になっている部分があります。ご了承ください。\nコメントありがとうございます。追加検討の材料にさせていただきます。\n\n\n 20周年記念にGitを嫌いになろう\n\nGitは最悪のバージョン管理システムである、ほかに使われたバージョン管理システムを除いては。\n\nというのはチャーチルの言ってない名言です。\nバージョン管理から逃れることはできません、逃げた先には約束された破滅が待っています。\nバージョン管理システムは、誰が何をどう変更したのかを記録し、誰かがやらかしたときに巻き戻し、誰か..."
  },
  {
    "title": "OpenAI DevDay 2025 発表まとめ",
    "date": "2025-10-06T18:01:44.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/schroneko/articles/openai-devday-2025",
    "content": "!\nこの記事は人力で書きました。\n\n\n tl;dr\n\nOpenAI DevDay 2025 がサンフランシスコで開催されたよ\nサンフランシスコ現地から情報をお送りするよ\nChatGPT 上で使える Apps SDK が公開されたよ（収益化の話も）\nAI Agent ワークフローを構築するための AgentKit が公開されたよ\n合わせてノーコードライクに操作できる Agent Builder も公開されたよ\nCodex が正式リリース、Slack から使えるようになったよ\n動画生成の Sora 2 の API が公開されたよ\n\n\n サムアルトマン CEO のキーノート\nhttps://w..."
  },
  {
    "title": "Claude Code入門 - AI駆動開発の基礎を1日で身につけよう",
    "date": "2025-10-06T15:41:50.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/tmasuyama1114/books/claude_code_basic",
    "content": "こんにちは、とまだです。\n\n「Claude Codeって何？」「AIで本当にコードが書けるの？」と思ったことはありませんか？\n\nこの本では Claued Code を使ったAI駆動開発の基本を 1日で身につけることができます。\n\n【こんな方におすすめ】\n・AI開発ツールに興味はあるけど、どこから始めていいかわからない\n・Claude Codeをインストールしたけど、使い方がよくわからない\n・開発作業を効率化して、もっと創造的な仕事に時間を使いたい\n・AIアシスタントと協働する次世代の開発スタイルを体験したい\n\n【本書で身につくスキル】\n■ Claude Codeの基礎理解\n- ターミナルで動く自律的なAIアシスタントの仕組み\n- 従来の開発ツールとの違い\n- Claude Codeが得意なこと・不得意なこと\n\n■ 確実なセットアップ\n- Node.jsのインストールから認証まで\n- つまずきやすいポイントを丁寧に解説\n- 最適な開発環境の構築方法\n\n■ 効率的な操作方法\n- 起動オプションの使い分け\n- インタラクティブモードでの快適な操作\n- 便利なスラッシュコマンドの活用法\n\n■ メモリシステムの活用\n- CLAUDE.mdによるプロジェクト知識の蓄積\n- 効率的なメモリ管理のコツ\n- settings.jsonでの詳細な設定\n- カスタムコマンドで開発を自動化\n\n【学習の流れ】\n本書は段階的なアプローチでClaude Codeを学ぶことができます。\n\nまず「Claude Codeとは何か」から始まり、確実にセットアップを完了させます。\n\nそして基本的な操作方法を身につけ、最後はメモリシステムやカスタムコマンドなど、実践的な活用法まで学習します。\n\n各チャプターは初心者がつまずきやすいポイントを丁寧に解説しているので、安心して進められます。\n\n【技術スタック】\n- Claude Code（ターミナルで動くAI開発アシスタント）\n- Node.js（実行環境）\n- VS Code（推奨エディタ）\n- CLAUDE.md（プロジェクトメモリシステム）\n\n【最後に】\nClaude Codeを学ぶことで、AIアシスタントと協働する新しい開発スタイルを体験できます。\n\nまた、効率的なメモリ管理やカスタムコマンドの活用は、開発効率を劇的に向上させてくれるはずです！\n\nそしてこの本で学んだあと、私の動画講座も試してみてはいかがでしょうか？\nClaude Code や Codex など、AI駆動開発分野のベストセラー講座で実践レベルにスキルアップしましょう！\nhttps://school.learning-next.app/coupons?topic=claude-code"
  },
  {
    "title": "全プロセスが一秒止まる不具合続編: カーネル内部で何が起きたか？",
    "date": "2025-10-06T08:00:01.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/turing_motors/articles/fdfb70b7a9d90b",
    "content": "\n はじめに\n完全自動運転の実現を目指すスタートアップ「チューリング」でエンジニアをしています、鈴木勝博です。私が所属しているDrivingSystemチームでは、自動運転向けのシステム開発を担当しています。\nLinuxを用いたシステム開発を行っていると、カーネルの挙動、周辺デバイスとの組み合わせ等によって、思いがけない問題に遭遇することが少なくありません。この記事では、実際にシステム開発中に遭遇した「再現が難しく、原因の切り分けに時間を要した問題」について深堀りしてご紹介します。\n概要編はこちらのテックブログにてご紹介しています。\nhttps://zenn.dev/turing_mot..."
  },
  {
    "title": "【TypeScript】カスタムエラーのすすめ",
    "date": "2025-10-06T04:40:36.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/praha/articles/a8b72ba36294fe",
    "content": "TypeScriptで開発をしていると、APIエラーやバリデーションエラーなど、さまざまなエラーを扱う場面があります。\nそんなときに、標準のErrorクラスだけで対応していませんか。\nこの記事では、カスタムエラーを導入するメリットと、ボイラープレートを減らしてカスタムエラーを楽に定義出来るライブラリを紹介します。\n\n カスタムエラーを作る理由\n標準のErrorクラスを使用することで楽にエラーを作成できますが、次のような問題があります。\n\nエラーの種類を区別しづらい\n追加の情報（HTTPステータスやエラーコードなど）を持たせづらい\nメッセージが一貫しない\n\nたとえば次のような例を考えてみま..."
  },
  {
    "title": "vitejs/vite – v7.1.9",
    "date": "2025-10-03T00:41:51.000Z",
    "source": "GitHub",
    "url": "https://github.com/vitejs/vite/releases/tag/v7.1.9",
    "content": "Please refer to [CHANGELOG.md](https://github.com/vitejs/vite/blob/v7.1.9/packages/vite/CHANGELOG.md) for details."
  },
  {
    "title": "vitejs/vite – v7.1.8",
    "date": "2025-10-02T06:15:47.000Z",
    "source": "GitHub",
    "url": "https://github.com/vitejs/vite/releases/tag/v7.1.8",
    "content": "Please refer to [CHANGELOG.md](https://github.com/vitejs/vite/blob/v7.1.8/packages/vite/CHANGELOG.md) for details."
  },
  {
    "title": "vitejs/vite – create-vite@8.0.2",
    "date": "2025-10-02T05:51:22.000Z",
    "source": "GitHub",
    "url": "https://github.com/vitejs/vite/releases/tag/create-vite%408.0.2",
    "content": "Please refer to [CHANGELOG.md](https://github.com/vitejs/vite/blob/create-vite@8.0.2/packages/create-vite/CHANGELOG.md) for details."
  },
  {
    "title": "facebook/react – 19.2.0 (Oct 1, 2025)",
    "date": "2025-10-01T21:50:48.000Z",
    "source": "GitHub",
    "url": "https://github.com/facebook/react/releases/tag/v19.2.0",
    "content": "Below is a list of all new features, APIs, and bug fixes.\r\n\r\nRead the [React 19.2 release post](https://react.dev/blog/2025/10/01/react-19-2) for more information.\r\n\r\n## New React Features\r\n\r\n- [`<Activity>`](https://react.dev/reference/react/Activity): A new API to hide and restore the UI and internal state of its children.\r\n- [`useEffectEvent`](https://react.dev/reference/react/useEffectEvent) is a React Hook that lets you extract non-reactive logic into an [Effect Event](https://react.dev/learn/separating-events-from-effects#declaring-an-effect-event).\r\n- [`cacheSignal`](https://react.dev/reference/react/cacheSignal) (for RSCs) lets your know when the `cache()` lifetime is over.\r\n- [React Performance tracks](https://react.dev/reference/developer-tooling/react-performance-tracks) appear on the Performance panel’s timeline in your browser developer tools\r\n\r\n## New React DOM Features\r\n\r\n- Added resume APIs for partial pre-rendering with Web Streams:\r\n  - [`resume`](https://react.dev/reference/react-dom/server/resume): to resume a prerender to a stream.\r\n  - [`resumeAndPrerender`](https://react.dev/reference/react-dom/static/resumeAndPrerender): to resume a prerender to HTML.\r\n- Added resume APIs for partial pre-rendering with Node Streams:\r\n  - [`resumeToPipeableStream`](https://react.dev/reference/react-dom/server/resumeToPipeableStream): to resume a prerender to a stream.\r\n  - [`resumeAndPrerenderToNodeStream`](https://react.dev/reference/react-dom/static/resumeAndPrerenderToNodeStream): to resume a prerender to HTML.\r\n- Updated [`prerender`](https://react.dev/reference/react-dom/static/prerender) APIs to return a `postponed` state that can be passed to the `resume` APIs.\r\n\r\n## Notable changes\r\n\r\n- React DOM now batches suspense boundary reveals, matching the behavior of client side rendering. This change is especially noticeable when animating the reveal of Suspense boundaries e.g. with the upcoming `<ViewTransition>` Component. React will batch as much reveals as possible before the first paint while trying to hit popular first-contentful paint metrics.\r\n- Add Node Web Streams (`prerender`, `renderToReadableStream`) to server-side-rendering APIs for Node.js\r\n- Use underscore instead of `:` IDs generated by useId\r\n\r\n## All Changes\r\n\r\n### React\r\n\r\n- `<Activity />` was developed over many years, starting before `ClassComponent.setState` (@acdlite @sebmarkbage and many others)\r\n- Stringify context as \"SomeContext\" instead of \"SomeContext.Provider\" (@kassens [#33507](https://github.com/facebook/react/pull/33507))\r\n- Include stack of cause of React instrumentation errors with `%o` placeholder (@eps1lon [#34198](https://github.com/facebook/react/pull/34198))\r\n- Fix infinite `useDeferredValue` loop in popstate event (@acdlite [#32821](https://github.com/facebook/react/pull/32821))\r\n- Fix a bug when an initial value was passed to `useDeferredValue` (@acdlite [#34376](https://github.com/facebook/react/pull/34376))\r\n- Fix a crash when submitting forms with Client Actions (@sebmarkbage [#33055](https://github.com/facebook/react/pull/33055))\r\n- Hide/unhide the content of dehydrated suspense boundaries if they resuspend (@sebmarkbage [#32900](https://github.com/facebook/react/pull/32900))\r\n- Avoid stack overflow on wide trees during Hot Reload (@sophiebits [#34145](https://github.com/facebook/react/pull/34145))\r\n- Improve Owner and Component stacks in various places (@sebmarkbage, @eps1lon: [#33629](https://github.com/facebook/react/pull/33629), [#33724](https://github.com/facebook/react/pull/33724), [#32735](https://github.com/facebook/react/pull/32735), [#33723](https://github.com/facebook/react/pull/33723))\r\n- Add `cacheSignal` (@sebmarkbage [#33557](https://github.com/facebook/react/pull/33557))\r\n\r\n### React DOM\r\n\r\n- Block on Suspensey Fonts during reveal of server-side-rendered content (@sebmarkbage [#33342](https://github.com/facebook/react/pull/33342))\r\n- Use underscore instead of `:` for IDs generated by `useId` (@sebmarkbage, @eps1lon: [#32001](https://github.com/facebook/react/pull/32001), [https://github.com/facebook/react/pull/33342](https://github.com/facebook/react/pull/33342)[#33099](https://github.com/facebook/react/pull/33099), [#33422](https://github.com/facebook/react/pull/33422))\r\n- Stop warning when ARIA 1.3 attributes are used (@Abdul-Omira [#34264](https://github.com/facebook/react/pull/34264))\r\n- Allow `nonce` to be used on hoistable styles (@Andarist [#32461](https://github.com/facebook/react/pull/32461))\r\n- Warn for using a React owned node as a Container if it also has text content (@sebmarkbage [#32774](https://github.com/facebook/react/pull/32774))\r\n- s/HTML/text for for error messages if text hydration mismatches (@rickhanlonii [#32763](https://github.com/facebook/react/pull/32763))\r\n- Fix a bug with `React.use` inside `React.lazy`\\-ed Component (@hi-ogawa [#33941](https://github.com/facebook/react/pull/33941))\r\n- Enable the `progressiveChunkSize` option for server-side-rendering APIs (@sebmarkbage [#33027](https://github.com/facebook/react/pull/33027))\r\n- Fix a bug with deeply nested Suspense inside Suspense fallback when server-side-rendering (@gnoff [#33467](https://github.com/facebook/react/pull/33467))\r\n- Avoid hanging when suspending after aborting while rendering (@gnoff [#34192](https://github.com/facebook/react/pull/34192))\r\n- Add Node Web Streams to server-side-rendering APIs for Node.js (@sebmarkbage [#33475](https://github.com/facebook/react/pull/33475))\r\n\r\n### React Server Components\r\n\r\n- Preload `<img>` and `<link>` using hints before they're rendered (@sebmarkbage [#34604](https://github.com/facebook/react/pull/34604))\r\n- Log error if production elements are rendered during development (@eps1lon [#34189](https://github.com/facebook/react/pull/34189))\r\n- Fix a bug when returning a Temporary reference (e.g. a Client Reference) from Server Functions (@sebmarkbage [#34084](https://github.com/facebook/react/pull/34084), @denk0403 [#33761](https://github.com/facebook/react/pull/33761))\r\n- Pass line/column to `filterStackFrame` (@eps1lon [#33707](https://github.com/facebook/react/pull/33707))\r\n- Support Async Modules in Turbopack Server References (@lubieowoce [#34531](https://github.com/facebook/react/pull/34531))\r\n- Add support for .mjs file extension in Webpack (@jennyscript [#33028](https://github.com/facebook/react/pull/33028))\r\n- Fix a wrong missing key warning (@unstubbable [#34350](https://github.com/facebook/react/pull/34350))\r\n- Make console log resolve in predictable order (@sebmarkbage [#33665](https://github.com/facebook/react/pull/33665))\r\n\r\n### React Reconciler\r\n\r\n- [createContainer](https://github.com/facebook/react/blob/v19.2.0/packages/react-reconciler/src/ReactFiberReconciler.js#L255-L261) and [createHydrationContainer](https://github.com/facebook/react/blob/v19.2.0/packages/react-reconciler/src/ReactFiberReconciler.js#L305-L312) had their parameter order adjusted after `on*` handlers to account for upcoming experimental APIs\r\n\r\n## eslint-plugin-react-hooks@6.1.0\r\n\r\n**Note:** Version 6.0.0 was mistakenly released and immediately deprecated and untagged on npm. This is the first official 6.x major release and includes breaking changes. \r\n\r\n- **Breaking:** Require Node.js 18 or newer. ([@michaelfaith](https://github.com/michaelfaith) in [#32458](https://github.com/facebook/react/pull/32458))\r\n- **Breaking:** Flat config is now the default `recommended` preset. Legacy config moved to `recommended-legacy`. ([@michaelfaith](https://github.com/michaelfaith) in [#32457](https://github.com/facebook/react/pull/32457))\r\n- **New Violations:** Disallow calling `use` within try/catch blocks. ([@poteto](https://github.com/poteto) in [#34040](https://github.com/facebook/react/pull/34040))\r\n- **New Violations:** Disallow calling `useEffectEvent` functions in arbitrary closures. ([@jbrown215](https://github.com/jbrown215) in [#33544](https://github.com/facebook/react/pull/33544))\r\n- Handle `React.useEffect` in addition to `useEffect` in rules-of-hooks. ([@Ayc0](https://github.com/Ayc0) in [#34076](https://github.com/facebook/react/pull/34076))\r\n- Added `react-hooks` settings config option that to accept `additionalEffectHooks` that are used across exhaustive-deps and rules-of-hooks rules. ([@jbrown215](https://github.com/jbrown215)) in [#34497](https://github.com/facebook/react/pull/34497)"
  },
  {
    "title": "microsoft/TypeScript – TypeScript 5.9",
    "date": "2025-10-01T20:37:10.000Z",
    "source": "GitHub",
    "url": "https://github.com/microsoft/TypeScript/releases/tag/v5.9.2",
    "content": "Note: this tag was recreated to point at the correct commit. The npm package contained the correct content.\r\n\r\nFor release notes, check out the [release announcement](https://devblogs.microsoft.com/typescript/announcing-typescript-5-9/)\r\n\r\n* [fixed issues query for Typescript 5.9.0 (Beta)](https://github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93&q=milestone%3A%22TypeScript+5.9.0%22+is%3Aclosed+).\r\n* [fixed issues query for Typescript 5.9.1 (RC)](https://github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93&q=milestone%3A%22TypeScript+5.9.1%22+is%3Aclosed+).\r\n* *No specific changes for TypeScript 5.9.2 (Stable)*\r\n\r\n\r\nDownloads are available on:\r\n* [npm](https://www.npmjs.com/package/typescript)"
  }
]
[
  {
    "title": "vercel/next.js – v15.5.5",
    "date": "2025-10-13T17:15:14.000Z",
    "source": "GitHub",
    "url": "https://github.com/vercel/next.js/releases/tag/v15.5.5",
    "content": "> [!NOTE]  \r\n> This release is backporting bug fixes. It does **not** include all pending features/changes on canary.\r\n\r\n### Core Changes\r\n- Split code-frame into separate compiled package (#84238)\r\n- Add deprecation warning to Runtime config (#84650)\r\n- fix: unstable_cache should perform blocking revalidation during ISR revalidation (#84716)\r\n- feat: `experimental.middlewareClientMaxBodySize` body cloning limit  (#84722)\r\n- fix: missing next/link types with typedRoutes (#84779)\r\n\r\n### Misc Changes\r\n- docs: early October improvements and fixes (#84334)\r\n\r\n### Credits\r\n\r\nHuge thanks to @devjiwonchoi, @ztanner, and @icyJoseph for helping!"
  },
  {
    "title": "IaCを活用して最速でAzure × RAGを概念検証",
    "date": "2025-10-13T05:04:02.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/kinosh/articles/iac-azure-rag-fastest-poc",
    "content": "Azure × RAGシステムの概念検証（PoC）を1-2時間で完了させる、IaC（Infrastructure as Code）を活用した最速デプロイ手法を紹介します。\n\n TL;DR(要約)\n1-2時間でAzure × RAGシステムをデプロイ。手動構築（数日）に比べ、IaCテンプレート活用により時間を大幅に短縮できます。\nこの記事で得られる価値:\n\n✅ Azure Portal操作不要（すべてCLI完結）\n✅ 再現性の高いデプロイ（何度でも同じ環境を構築）\n✅ 本番移行を想定したPoC基盤（Chat with your data = カスタマイズ前提設計）\n\nすぐに実践したい方:\n..."
  },
  {
    "title": "[先取り] Tanstack Start によるクライアントファーストな RSC のアプローチ",
    "date": "2025-10-13T03:35:58.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/tsuboi/articles/0d2d63b584aa2c",
    "content": "\n はじめに 🚀\nReact Server Components（RSC）は、Next.js App Router での採用を機に広く普及しました。一方で、RSC の採用方法については、フレームワークごとに異なる考え方が存在します。\nTanStack の作者である Tanner Linsley 氏は、インタビュー[1]にて「RSC をバンドルサイズの削減や静的コンテンツの最適化に役立つツールと見ているが、万能な解決策とは考えていない」と述べています。TanStack Start は、Next.js とは異なるアプローチで RSC をサポートする予定であり、その背景にはクライアントファース..."
  },
  {
    "title": "Anthropicが公開しているClaude Codeのベストプラクティスを初心者向けに解説",
    "date": "2025-10-13T02:42:53.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/tmasuyama1114/articles/claude_code_best_practice_guide",
    "content": "こんにちは、とまだです。\n「AIツールを使ってコーディングを効率化したい！」\nそう思ってClaude Codeを始めてみたものの、思うような結果が出なくて悩んでいませんか？\n今回は、Anthropic社が公開しているClaude Codeのベストプラクティスから抜粋し、初心者にもわかりやすく解説します！\nこれを読めば、Claude Codeをもっと効果的に使いこなせるようになるはずです。\nちなみに私は本業ではフリーランスエンジニア、ならびにAI駆動開発の導入支援を行っています。\nまた、Udemy で AI 駆動開発講座を複数開講しており、いくつかベストセラーもいただいています。\nその経験..."
  },
  {
    "title": "vercel/next.js – v16.0.0-canary.3",
    "date": "2025-10-12T23:46:44.000Z",
    "source": "GitHub",
    "url": "https://github.com/vercel/next.js/releases/tag/v16.0.0-canary.3",
    "content": "### Core Changes\n\n- Upgrade React from `3025aa39-20251007` to `9724e3e6-20251008`: #84642\n- Remove unused `eslint-disable` directives: #84797\n\n### Misc Changes\n\n- [cna] Preserve existing config option when enabling React Compiler: #84663\n- Prevent failing `types-and-precompiled` from corrupting terminal output: #84799\n\n### Credits \n\nHuge thanks to @eps1lon for helping!\n"
  },
  {
    "title": "necordとbullmqで、ジョブキューCLI併用Discord botの構築",
    "date": "2025-10-12T15:58:02.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/andhisan/articles/02d50c7e2340d7",
    "content": "Discord.jsによるbotの構築は、ある程度のベストプラクティスがGuideで解説されているものの、ディレクトリ構造や開発環境の構築は開発者の選択に委ねられています。\nこの記事では、necordを活用し、NestJSのモジュールとしてbotを起動します。また、ジョブキューを挟むことで、非同期処理を実現し、イベント処理の肥大化を防ぎます。\n※necordに関する日本語の情報は、おそらく当記事が初出です。ここでは全てをカバーできていません。あくまで簡単なイベント反応の例のみ掲載します。\n\n サンプルリポジトリ\nサンプルではヘルスチェックやE2Eテストの定義も含んでいますが、記事では割愛..."
  },
  {
    "title": "未経験から2年働いたエンジニアの本紹介",
    "date": "2025-10-12T13:30:01.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/enkazu/articles/347f2bf59cb903",
    "content": "\n 目的\n未経験で現職に入社して2年が経ちました。\n入社1年目は、仕事の成果が上がらず、毎週の進捗会議で詰められていることが多かったです。その現状を変えるためにひたすら勉強に打ち込んでいました😭\nもしまた0から始めるとしたら、今ならこの本を読む！というのをまとめます。\n\n\n Java編\n\n 1冊目\n私はJavaから始めたので、この入門書が一番わかりやすかったです！\n実践編もあるのでそれと合わせると、実務で使える知識が増えて役立てました。\n他に読んだ本としては、やさしいJava入門があります。\nそちらも良い本でしたが、私はスッキリわかるシリーズの方が頭に入ったのでこちらを薦めます👌\nスッキ..."
  },
  {
    "title": "PKSHA Technologyエンジニア サマーインターン 体験記",
    "date": "2025-10-12T12:35:16.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/pkmiya/articles/e183c44ba94ea3",
    "content": "みなさんこんにちは！みーやと申します。\nこの度、2025 年 9 月に 株式会社 PKSHA Technology（以下 PKSHA）にて 2 weeks ソフトウェア・エンジニア サマーインターン（以下インターン）に参加させていただきました。\nこの記事では、インターン参加のきっかけからインターンの内容と開発エピソード、参加して感じたことまで、可能な限り幅広く深くご紹介します。エンジニア、特にフルスタックとしてのキャリアに興味がある学生、 PKSHA のインターンに参加してみたい学生にぜひ読んでいただければと思います。\n\nチームメンバーとの写真\n\n 自己紹介\nみーや（Miyata Yus..."
  },
  {
    "title": "Remix 3 発表まとめ - React を捨て、Web標準で新しい世界へ",
    "date": "2025-10-12T12:03:26.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/coji/articles/remix3-introduction",
    "content": "\n はじめに\n2025年10月10日、カナダのトロントで開催されたイベント \"Remix Jam 2025\" で Ryan Florence と Michael Jackson が Remix 3 を発表しました。このセッションは、React Router の生みの親たちが、なぜ React から離れ、独自のフレームワークを作ることにしたのか、その理由と新しいビジョンを語った歴史的な発表です。\nhttps://www.youtube.com/live/xt_iEOn2a6Y?t=11764s\n本記事では、1時間47分に及ぶセッションの内容を詳しく解説します。\n!\n注意事項\n\nこの記事は、..."
  },
  {
    "title": "大規模計算時代におけるパラメータ推定自動化の歴史",
    "date": "2025-10-12T10:41:01.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/cybernetics/articles/083cb782b4099c",
    "content": "\n はじめに\nこれはポエムに近い。ので、技術的にすぐ使える情報を求めている人には合わない。しかし、技術的な教養とか文化みたいなものを使って文章を楽しむ分には良い記事だと思う。\nテーマはタイトルの通りであるが、特にLLMのコンテキスト適応方法がハンドチューニングからオートマチック方面へ本格的に変わりつつある状況を思い浮かべてつけたタイトルだ。本記事のキーワードとしてはMIPROv2やGEPAなどの最近のプロンプト最適化手法から、コンテキスト適応自体をAgenticに実施するACEなどが挙げられる。これらの出現と、伝統的な機械学習、はたまた統計推論にまで遡り、計算機を利用したパラメータ調整技..."
  },
  {
    "title": "Error Boundary/Suspenseはどこに置く？ テスト・Storybook・UXのためのReactコンポーネント設計",
    "date": "2025-10-12T09:58:23.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/mkt_engr/articles/20251012_error-boundary-suspense-storybook",
    "content": "\n はじめに\nError Boundary と Suspense をどこに置くか悩みませんか？かつての自分はこの設計をうまくできず、テストが書きづらい、1 つのエラーで全体が落ちる といった問題に苦しみました。\n本記事では、その設計が\n\nテストの書きやすさ\nStorybook の書きやすさ\nユーザー体験（UX）\n\nにどう影響するかを、実装例を通じて紹介します。\n「全体を 1 つの Error Boundary でラップ」という私がよくやってしまっていたよくないパターンと、「セクションごとに個別にラップ」するパターンを比較しながら、適切な配置について説明していきます。\n\n 対象読者\nErr..."
  },
  {
    "title": "TinyGoはどのように \"Tiny\" を実現している？",
    "date": "2025-10-12T06:00:05.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/uji/articles/how-tinygo-tiny",
    "content": "!\nこの資料は TinyGo Conference 2025 in Japan の登壇資料です。\n\n\n 自己紹介\n\n名前: uji\n\n神戸市在住\nNOT A HOTEL のソフトウェアエンジニア\nGopher 7年生、TinyGo は 3年くらい前に初めて触りました\nKOBE.go, Kyoto.go 運営\n\n\nKOBE.go TinyGo Keebイベントの様子\n\n作ったもの\n\nhttps://x.com/uji_rb/status/1964242879175327748\nhttps://x.com/uji_rb/status/1975770765812527488\nhttps://z..."
  },
  {
    "title": "LLMのコーディングエージェント(主にCodex)を効率よく使うために",
    "date": "2025-10-12T04:48:29.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/takeshy/articles/ffe23204d1d326",
    "content": "\n 前提\n私が現在使っているLLMコーディングエージェントは下記です。\n\nCodex（proプラン $200）\nCursor（proプラン $20）\nGemini（workspace Business）\n\n1年前にclineを使いはじめ、今年の春ごろにmaxプラン($100)でClaude Codeが使えるようになったタイミングでClaude Codeに乗り換えました。\nその後、gpt-5-codexが登場し、maxプランの残期間があったClaude Codeと併用していましたが、同じ不具合でもCodexはすんなり不具合を解決できるのに、Claude Codeだといつまでたっても解決しな..."
  },
  {
    "title": "ROS 2のパッケージを公開してみた",
    "date": "2025-10-12T03:40:28.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/for/articles/1947c6e0c693bd",
    "content": "こんやっぴ〜、ForteFibreのインフラ担当マンゴーさんです！\n今回は、parameter_expressionというちょっとしたROS 2のパッケージを実際にROSのレポジトリに公開してみたので、その記録を書いていこうと思います。\n\n parameter_expressionについて\nパラメータに文字列で数式を指定したときに、それをうまく解釈するためのパッケージです。\nくわしく\nForteFibreでは、自律移動系からデバイスドライバまで多くの場所でROS 2を使っています。そして、ROSの特徴の一つであるパラメータファイルも大量に作成されます。\n特に、デバイスドライバの周辺では、..."
  },
  {
    "title": "モダンフロントエンドはJSON APIが鬱陶しいので、無くしていきたい",
    "date": "2025-10-12T00:44:01.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/naofumik/articles/0714f7237a493c",
    "content": "\n はじめに\nKaigi on Rails 2025で発表し、何人かの人といろいろ話しているうちに、モダンフロントエンドが面倒臭いのはJSON APIのせいではないかと考えるようになりました。そしてJSON APIそのものが悪いというよりは、JSON APIを必要以上に使う原因となっているSPAが問題ではないかと思っています。まだ考えは固まっていないのですが、まずは部分的に紹介したいと思います。\n\n モダンフロントエンドはJSON基礎工事が大変\n\nSPAのReactフロントエンドを作る場合、Hotwireなら不要だった多大な工数が新しく発生します。\nAPIエンドポイントのルータおよびコン..."
  },
  {
    "title": "vercel/next.js – v16.0.0-canary.2",
    "date": "2025-10-11T23:45:58.000Z",
    "source": "GitHub",
    "url": "https://github.com/vercel/next.js/releases/tag/v16.0.0-canary.2",
    "content": "### Misc Changes\n\n- Update Rspack production test manifest: #84729\n- Update Rspack development test manifest: #84730\n- fix: release next-rspack ci: #84673\n\n### Credits \n\nHuge thanks to @vercel-release-bot and @SyMind for helping!\n"
  },
  {
    "title": "Claude・Codex・Kombaiを使ったFigma to Codeの比較",
    "date": "2025-10-11T22:02:02.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/oikon/articles/frontend-ai-tools",
    "content": "Oikonです。\n先日AIツールでどこまでデザインを忠実に実装できるのかというテーマで登壇する機会がありました。\nその際に、以下の３つのツールについてFigmaからコードを生成してみて比較する実験を行いました。\n\nClaude Code + Figma MCP\nCodex CLI + Figma MCP\nKombai\n\n\nこの記事では、それぞれの手法について詳しく比較していきたいと思います。\n\n UI/UXデザイン実装の現状と課題\n最近はAIツールもデザイン力が高くなってきましたが、それでもバックエンドほど上手く実装することができない印象です。フロントエンド開発において、デザインからコー..."
  },
  {
    "title": "nodejs/node – 2025-10-08, Version 24.10.0 (Current), @RafaelGSS",
    "date": "2025-10-11T16:18:16.000Z",
    "source": "GitHub",
    "url": "https://github.com/nodejs/node/releases/tag/v24.10.0",
    "content": "### Notable Changes\r\n\r\n* \\[[`31bb476895`](https://github.com/nodejs/node/commit/31bb476895)] - **(SEMVER-MINOR)** **console**: allow per-stream `inspectOptions` option (Anna Henningsen) [#60082](https://github.com/nodejs/node/pull/60082)\r\n* \\[[`3b92be2fb8`](https://github.com/nodejs/node/commit/3b92be2fb8)] - **(SEMVER-MINOR)** **lib**: remove util.getCallSite (Rafael Gonzaga) [#59980](https://github.com/nodejs/node/pull/59980)\r\n* \\[[`18c79d9e1c`](https://github.com/nodejs/node/commit/18c79d9e1c)] - **(SEMVER-MINOR)** **sqlite**: create authorization api (Guilherme Araújo) [#59928](https://github.com/nodejs/node/pull/59928)\r\n\r\n### Commits\r\n\r\n* \\[[`e8cff3d51e`](https://github.com/nodejs/node/commit/e8cff3d51e)] - **benchmark**: remove unused variable from util/priority-queue (Bruno Rodrigues) [#59872](https://github.com/nodejs/node/pull/59872)\r\n* \\[[`03294252ab`](https://github.com/nodejs/node/commit/03294252ab)] - **benchmark**: update count to n in permission startup (Bruno Rodrigues) [#59872](https://github.com/nodejs/node/pull/59872)\r\n* \\[[`3c8a609d9b`](https://github.com/nodejs/node/commit/3c8a609d9b)] - **benchmark**: update num to n in dgram offset-length (Bruno Rodrigues) [#59872](https://github.com/nodejs/node/pull/59872)\r\n* \\[[`7b2032b13e`](https://github.com/nodejs/node/commit/7b2032b13e)] - **benchmark**: adjust dgram offset-length len values (Bruno Rodrigues) [#59708](https://github.com/nodejs/node/pull/59708)\r\n* \\[[`552d887aee`](https://github.com/nodejs/node/commit/552d887aee)] - **benchmark**: update num to n in dgram offset-length (Bruno Rodrigues) [#59708](https://github.com/nodejs/node/pull/59708)\r\n* \\[[`31bb476895`](https://github.com/nodejs/node/commit/31bb476895)] - **(SEMVER-MINOR)** **console**: allow per-stream `inspectOptions` option (Anna Henningsen) [#60082](https://github.com/nodejs/node/pull/60082)\r\n* \\[[`0bf022d4c0`](https://github.com/nodejs/node/commit/0bf022d4c0)] - **console,util**: improve array inspection performance (Ruben Bridgewater) [#60037](https://github.com/nodejs/node/pull/60037)\r\n* \\[[`04d568e591`](https://github.com/nodejs/node/commit/04d568e591)] - **deps**: V8: cherry-pick f93055fbd5aa (Olivier Flückiger) [#60105](https://github.com/nodejs/node/pull/60105)\r\n* \\[[`621058b3bf`](https://github.com/nodejs/node/commit/621058b3bf)] - **deps**: update archs files for openssl-3.5.4 (Node.js GitHub Bot) [#60101](https://github.com/nodejs/node/pull/60101)\r\n* \\[[`81b3009fe6`](https://github.com/nodejs/node/commit/81b3009fe6)] - **deps**: upgrade openssl sources to openssl-3.5.4 (Node.js GitHub Bot) [#60101](https://github.com/nodejs/node/pull/60101)\r\n* \\[[`dc44c9f349`](https://github.com/nodejs/node/commit/dc44c9f349)] - **deps**: upgrade npm to 11.6.1 (npm team) [#60012](https://github.com/nodejs/node/pull/60012)\r\n* \\[[`ec0f137198`](https://github.com/nodejs/node/commit/ec0f137198)] - **deps**: update ada to 3.3.0 (Node.js GitHub Bot) [#60045](https://github.com/nodejs/node/pull/60045)\r\n* \\[[`f490f91874`](https://github.com/nodejs/node/commit/f490f91874)] - **deps**: update amaro to 1.1.4 (pmarchini) [#60044](https://github.com/nodejs/node/pull/60044)\r\n* \\[[`de7a7cd0d7`](https://github.com/nodejs/node/commit/de7a7cd0d7)] - **deps**: update ada to 3.2.9 (Node.js GitHub Bot) [#59987](https://github.com/nodejs/node/pull/59987)\r\n* \\[[`a533e5b5db`](https://github.com/nodejs/node/commit/a533e5b5db)] - **doc**: add automated migration info to deprecations (Augustin Mauroy) [#60022](https://github.com/nodejs/node/pull/60022)\r\n* \\[[`7fb8fe4875`](https://github.com/nodejs/node/commit/7fb8fe4875)] - **doc**: fix typo on child\\_process.md (Angelo Gazzola) [#60114](https://github.com/nodejs/node/pull/60114)\r\n* \\[[`24c1ef9846`](https://github.com/nodejs/node/commit/24c1ef9846)] - **doc**: remove optional title prefixes (Aviv Keller) [#60087](https://github.com/nodejs/node/pull/60087)\r\n* \\[[`08b9eb8e19`](https://github.com/nodejs/node/commit/08b9eb8e19)] - **doc**: mark `.env` files support as stable (Santeri Hiltunen) [#59925](https://github.com/nodejs/node/pull/59925)\r\n* \\[[`66d90b8063`](https://github.com/nodejs/node/commit/66d90b8063)] - **doc**: mention reverse proxy and include simple example (Steven) [#59736](https://github.com/nodejs/node/pull/59736)\r\n* \\[[`14aa1119cb`](https://github.com/nodejs/node/commit/14aa1119cb)] - **doc**: provide alternative to `url.parse()` using WHATWG URL (Steven) [#59736](https://github.com/nodejs/node/pull/59736)\r\n* \\[[`f9412324f6`](https://github.com/nodejs/node/commit/f9412324f6)] - **doc**: fix typo of built-in module specifier in worker\\_threads (Deokjin Kim) [#59992](https://github.com/nodejs/node/pull/59992)\r\n* \\[[`64e738a342`](https://github.com/nodejs/node/commit/64e738a342)] - **doc,crypto**: reorder ML-KEM in the asymmetric key types table (Filip Skokan) [#60067](https://github.com/nodejs/node/pull/60067)\r\n* \\[[`1b25008b41`](https://github.com/nodejs/node/commit/1b25008b41)] - **http**: improve writeEarlyHints by avoiding for-of loop (Haram Jeong) [#59958](https://github.com/nodejs/node/pull/59958)\r\n* \\[[`35f9b6b28f`](https://github.com/nodejs/node/commit/35f9b6b28f)] - **inspector**: improve batch diagnostic channel subscriptions (Chengzhong Wu) [#60009](https://github.com/nodejs/node/pull/60009)\r\n* \\[[`3b92be2fb8`](https://github.com/nodejs/node/commit/3b92be2fb8)] - **(SEMVER-MINOR)** **lib**: remove util.getCallSite (Rafael Gonzaga) [#59980](https://github.com/nodejs/node/pull/59980)\r\n* \\[[`c495e1fe57`](https://github.com/nodejs/node/commit/c495e1fe57)] - **lib**: optimize priority queue (Gürgün Dayıoğlu) [#60039](https://github.com/nodejs/node/pull/60039)\r\n* \\[[`6be31fb9f3`](https://github.com/nodejs/node/commit/6be31fb9f3)] - **lib**: implement passive listener behavior per spec (BCD1me) [#59995](https://github.com/nodejs/node/pull/59995)\r\n* \\[[`c5e4aa763b`](https://github.com/nodejs/node/commit/c5e4aa763b)] - **meta**: bump actions/setup-python from 5.6.0 to 6.0.0 (dependabot\\[bot]) [#60090](https://github.com/nodejs/node/pull/60090)\r\n* \\[[`50fa1f4a76`](https://github.com/nodejs/node/commit/50fa1f4a76)] - **meta**: bump ossf/scorecard-action from 2.4.2 to 2.4.3 (dependabot\\[bot]) [#60096](https://github.com/nodejs/node/pull/60096)\r\n* \\[[`def4ce976c`](https://github.com/nodejs/node/commit/def4ce976c)] - **meta**: bump actions/cache from 4.2.4 to 4.3.0 (dependabot\\[bot]) [#60095](https://github.com/nodejs/node/pull/60095)\r\n* \\[[`24b5abc0e9`](https://github.com/nodejs/node/commit/24b5abc0e9)] - **meta**: bump step-security/harden-runner from 2.12.2 to 2.13.1 (dependabot\\[bot]) [#60094](https://github.com/nodejs/node/pull/60094)\r\n* \\[[`8ccf2b0b34`](https://github.com/nodejs/node/commit/8ccf2b0b34)] - **meta**: bump actions/setup-node from 4.4.0 to 5.0.0 (dependabot\\[bot]) [#60093](https://github.com/nodejs/node/pull/60093)\r\n* \\[[`78580147ef`](https://github.com/nodejs/node/commit/78580147ef)] - **meta**: bump actions/stale from 9.1.0 to 10.0.0 (dependabot\\[bot]) [#60092](https://github.com/nodejs/node/pull/60092)\r\n* \\[[`705686b5c4`](https://github.com/nodejs/node/commit/705686b5c4)] - **meta**: bump codecov/codecov-action from 5.5.0 to 5.5.1 (dependabot\\[bot]) [#60091](https://github.com/nodejs/node/pull/60091)\r\n* \\[[`423a6bc744`](https://github.com/nodejs/node/commit/423a6bc744)] - **meta**: bump github/codeql-action from 3.30.0 to 3.30.5 (dependabot\\[bot]) [#60089](https://github.com/nodejs/node/pull/60089)\r\n* \\[[`9d9bd0fb4f`](https://github.com/nodejs/node/commit/9d9bd0fb4f)] - **meta**: move Michael to emeritus (Michael Dawson) [#60070](https://github.com/nodejs/node/pull/60070)\r\n* \\[[`dbeee55824`](https://github.com/nodejs/node/commit/dbeee55824)] - **module**: use sync cjs when importing cts (Marco Ippolito) [#60072](https://github.com/nodejs/node/pull/60072)\r\n* \\[[`a722f677ac`](https://github.com/nodejs/node/commit/a722f677ac)] - **perf\\_hooks**: fix histogram fast call signatures (Renegade334) [#59600](https://github.com/nodejs/node/pull/59600)\r\n* \\[[`b3295b8353`](https://github.com/nodejs/node/commit/b3295b8353)] - **process**: fix wrong asyncContext under unhandled-rejections=strict (Shima Ryuhei) [#60103](https://github.com/nodejs/node/pull/60103)\r\n* \\[[`cff4a7608a`](https://github.com/nodejs/node/commit/cff4a7608a)] - **process**: fix default `env` for `process.execve` (Richard Lau) [#60029](https://github.com/nodejs/node/pull/60029)\r\n* \\[[`cd034e927f`](https://github.com/nodejs/node/commit/cd034e927f)] - **process**: fix hrtime fast call signatures (Renegade334) [#59600](https://github.com/nodejs/node/pull/59600)\r\n* \\[[`18c79d9e1c`](https://github.com/nodejs/node/commit/18c79d9e1c)] - **(SEMVER-MINOR)** **sqlite**: create authorization api (Guilherme Araújo) [#59928](https://github.com/nodejs/node/pull/59928)\r\n* \\[[`d949222043`](https://github.com/nodejs/node/commit/d949222043)] - **sqlite**: replace `ToLocalChecked` and improve filter error handling (Edy Silva) [#60028](https://github.com/nodejs/node/pull/60028)\r\n* \\[[`6417dc879e`](https://github.com/nodejs/node/commit/6417dc879e)] - **src**: bring permissions macros in line with general C/C++ standards (Anna Henningsen) [#60053](https://github.com/nodejs/node/pull/60053)\r\n* \\[[`e273c2020c`](https://github.com/nodejs/node/commit/e273c2020c)] - **src**: update contextify to use DictionaryTemplate (James M Snell) [#60059](https://github.com/nodejs/node/pull/60059)\r\n* \\[[`5f9ff60664`](https://github.com/nodejs/node/commit/5f9ff60664)] - **src**: remove `AnalyzeTemporaryDtors` option from .clang-tidy (iknoom) [#60008](https://github.com/nodejs/node/pull/60008)\r\n* \\[[`9db54adccc`](https://github.com/nodejs/node/commit/9db54adccc)] - **src**: update cares\\_wrap to use DictionaryTemplates (James M Snell) [#60033](https://github.com/nodejs/node/pull/60033)\r\n* \\[[`fc0ceb7b82`](https://github.com/nodejs/node/commit/fc0ceb7b82)] - **src**: correct the error handling in StatementExecutionHelper (James M Snell) [#60040](https://github.com/nodejs/node/pull/60040)\r\n* \\[[`3e8fdc1d8d`](https://github.com/nodejs/node/commit/3e8fdc1d8d)] - **src**: remove unused variables from report (Moonki Choi) [#60047](https://github.com/nodejs/node/pull/60047)\r\n* \\[[`d744324d8e`](https://github.com/nodejs/node/commit/d744324d8e)] - **src**: avoid unnecessary string allocations in SPrintF impl (Anna Henningsen) [#60052](https://github.com/nodejs/node/pull/60052)\r\n* \\[[`de65a5c719`](https://github.com/nodejs/node/commit/de65a5c719)] - **src**: make ToLower/ToUpper input args more flexible (Anna Henningsen) [#60052](https://github.com/nodejs/node/pull/60052)\r\n* \\[[`354026df5a`](https://github.com/nodejs/node/commit/354026df5a)] - **src**: allow `std::string_view` arguments to `SPrintF()` and friends (Anna Henningsen) [#60058](https://github.com/nodejs/node/pull/60058)\r\n* \\[[`42f7d7cb20`](https://github.com/nodejs/node/commit/42f7d7cb20)] - **src**: remove unnecessary `std::string` error messages (Anna Henningsen) [#60057](https://github.com/nodejs/node/pull/60057)\r\n* \\[[`30c2c0fedd`](https://github.com/nodejs/node/commit/30c2c0fedd)] - **src**: remove unnecessary shadowed functions on Utf8Value & BufferValue (Anna Henningsen) [#60056](https://github.com/nodejs/node/pull/60056)\r\n* \\[[`eb99eec09b`](https://github.com/nodejs/node/commit/eb99eec09b)] - **src**: avoid unnecessary string -> `char*` -> string round trips (Anna Henningsen) [#60055](https://github.com/nodejs/node/pull/60055)\r\n* \\[[`c1f1dbdce2`](https://github.com/nodejs/node/commit/c1f1dbdce2)] - **src**: remove useless dereferencing in `THROW_...` (Anna Henningsen) [#60054](https://github.com/nodejs/node/pull/60054)\r\n* \\[[`ea0f5e575d`](https://github.com/nodejs/node/commit/ea0f5e575d)] - **src**: fill `options_args`, `options_env` after vectors are finalized (iknoom) [#59945](https://github.com/nodejs/node/pull/59945)\r\n* \\[[`415fff217a`](https://github.com/nodejs/node/commit/415fff217a)] - **src**: use RAII for uv\\_process\\_options\\_t (iknoom) [#59945](https://github.com/nodejs/node/pull/59945)\r\n* \\[[`982b03ecbd`](https://github.com/nodejs/node/commit/982b03ecbd)] - **test**: mark `test-runner-run-watch` flaky on macOS (Richard Lau) [#60115](https://github.com/nodejs/node/pull/60115)\r\n* \\[[`831a0d3d28`](https://github.com/nodejs/node/commit/831a0d3d28)] - **test**: ensure that the message event is fired (Luigi Pinca) [#59952](https://github.com/nodejs/node/pull/59952)\r\n* \\[[`5538cfc1e8`](https://github.com/nodejs/node/commit/5538cfc1e8)] - **test**: replace diagnostics\\_channel stackframe in output snapshots (Chengzhong Wu) [#60024](https://github.com/nodejs/node/pull/60024)\r\n* \\[[`77ec400d90`](https://github.com/nodejs/node/commit/77ec400d90)] - **test**: mark test-web-locks skip on IBM i (SRAVANI GUNDEPALLI) [#59996](https://github.com/nodejs/node/pull/59996)\r\n* \\[[`1aaadb9e31`](https://github.com/nodejs/node/commit/1aaadb9e31)] - **test**: ensure message event fires in worker message port test (Jarred Sumner) [#59885](https://github.com/nodejs/node/pull/59885)\r\n* \\[[`1d5cc5e57a`](https://github.com/nodejs/node/commit/1d5cc5e57a)] - **test**: mark sea tests flaky on macOS x64 (Richard Lau) [#60068](https://github.com/nodejs/node/pull/60068)\r\n* \\[[`c412b1855d`](https://github.com/nodejs/node/commit/c412b1855d)] - **test**: expand tls-check-server-identity coverage (Diango Gavidia) [#60002](https://github.com/nodejs/node/pull/60002)\r\n* \\[[`ad87975029`](https://github.com/nodejs/node/commit/ad87975029)] - **test**: fix typo of test-benchmark-readline.js (Deokjin Kim) [#59993](https://github.com/nodejs/node/pull/59993)\r\n* \\[[`bad4b9b878`](https://github.com/nodejs/node/commit/bad4b9b878)] - **test**: add new `startNewREPLSever` testing utility (Dario Piotrowicz) [#59964](https://github.com/nodejs/node/pull/59964)\r\n* \\[[`ef90b0f456`](https://github.com/nodejs/node/commit/ef90b0f456)] - **test**: verify tracing channel doesn't swallow unhandledRejection (Gerhard Stöbich) [#59974](https://github.com/nodejs/node/pull/59974)\r\n* \\[[`d7285459fe`](https://github.com/nodejs/node/commit/d7285459fe)] - **timers**: fix binding fast call signatures (Renegade334) [#59600](https://github.com/nodejs/node/pull/59600)\r\n* \\[[`6529ae9b0c`](https://github.com/nodejs/node/commit/6529ae9b0c)] - **tools**: add message on auto-fixing js lint issues in gh workflow (Dario Piotrowicz) [#59128](https://github.com/nodejs/node/pull/59128)\r\n* \\[[`1ca116a6ea`](https://github.com/nodejs/node/commit/1ca116a6ea)] - **tools**: verify signatures when updating nghttp\\* (Antoine du Hamel) [#60113](https://github.com/nodejs/node/pull/60113)\r\n* \\[[`20d10a2398`](https://github.com/nodejs/node/commit/20d10a2398)] - **tools**: use dependabot cooldown and move tools/doc (Rafael Gonzaga) [#59978](https://github.com/nodejs/node/pull/59978)\r\n* \\[[`275c07064c`](https://github.com/nodejs/node/commit/275c07064c)] - **typings**: update 'types' binding (René) [#59692](https://github.com/nodejs/node/pull/59692)\r\n* \\[[`8c21c4b286`](https://github.com/nodejs/node/commit/8c21c4b286)] - **wasi**: fix WasiFunction fast call signature (Renegade334) [#59600](https://github.com/nodejs/node/pull/59600)\r\n* \\[[`b865074641`](https://github.com/nodejs/node/commit/b865074641)] - **win,tools**: add description to signature (Martin Costello) [#59877](https://github.com/nodejs/node/pull/59877)\r\n"
  },
  {
    "title": "もうprintlnデバッグは卒業。VSCodeで始めるRust実践デバッグ",
    "date": "2025-10-11T12:12:56.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/dokusy/articles/b3c34eee18afbb",
    "content": "\n はじめに\n突然ですが、Rustでプログラムを書いていて、こんな経験はありませんか?\nprintln!(\"ここまで到達\");\nprintln!(\"変数xの値: {:?}\", x);\nprintln!(\"デバッグ1\");\nprintln!(\"デバッグ2\");\n// ...あとでこれ消さないと...\nprintln!でのデバッグは手軽ですが、コードが散らかり、デバッグ後に削除し忘れることも。\nというか削除が面倒ですよね。\nそんな時はVSCodeのデバッガーを使えば、コードを一切変更せずに変数の値を確認でき、問題を素早く解決できます。\nこの記事では、VSCodeを使ってRustプログラムを効..."
  },
  {
    "title": "Go&Ebitengineで3D描画をする",
    "date": "2025-10-11T10:40:08.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/mirichi/articles/93624c7269f56a",
    "content": "\n はじめに\nEbitengineは2Dゲームエンジンであり、3D用の機能は持ち合わせていないが、なぜか世の中にはガチな人がいてガチな3Dライブラリを作っていたりする。\nhttps://github.com/SolarLune/tetra3d\nでもこれは使わず、座標計算から自前でやってみたのでそんな感じのお話。\n\n Githubに置く\nこちらで実行できる。\nhttps://mirichi.github.io/Ebiten3DTest/001/\nこのような感じのものが動く。マウスやタッチでぐるぐるできる。\n\nコードはこちらに置いてある。\nhttps://github.com/mirichi..."
  },
  {
    "title": "【TypeScript / ハンズオン】ゼロからはじめるクリーンアーキテクチャAPI開発",
    "date": "2025-10-11T08:36:24.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/yuta_ooo/books/clean-architecture",
    "content": "TypeScriptとクリーンアーキテクチャを組み合わせ、変更に強いAPIを構築するハンズオンガイドです。\n この本では、クリーンアーキテクチャとは何かという基礎的なところから、ヘキサゴナルアーキテクチャの考え方、依存性逆転の原則まで、実践的な知識を提供します。\n\n 第1章では、クリーンアーキテクチャの本質とよくある誤解を整理し、ポートとアダプタによる疎結合な設計を学びます。\n 第2章では、具体的なハンズオンを通じて、ドメイン層からインフラ層までの各層の責務と実装方法を習得します。また、実際に永続化先を差し替える実践を通して、「変更に強い設計」がどのように実現されるのかを体感します。\n 新人研修やチーム学習にもぜひご活用ください。\n\n もしこの本が少しでもお役に立てたなら、いいねやバッジで応援していただけると嬉しいです。 いただいた反応は、今後の改訂や新章執筆の励みになります。 "
  },
  {
    "title": "DDDとクリーンアーキテクチャをはじめよう-Rust編",
    "date": "2025-10-11T03:12:47.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/poporo/articles/20251011_1_start_ddd_and_clean_architecture_rust",
    "content": "\n 背景\nども！池田(ikedadada)です！\nシリーズもいよいよRust編です。これまでNode.js、Go、Python、Javaの実装を紹介してきましたが、今回は同じTodo\nAPIの要件をRust（Axum + SQLx + MySQL）で実装するときの構成とキーポイントを整理します。\nソースコード:\nhttps://github.com/ikedadada/start-ddd-and-clean-architecture/tree/main/backend_rust\n!\nRustは所有権と非同期ランタイムが独特なので、「トランザクション境界」と「コンテキスト共有」をどう表現す..."
  },
  {
    "title": "vercel/next.js – v16.0.0-canary.1",
    "date": "2025-10-10T23:43:12.000Z",
    "source": "GitHub",
    "url": "https://github.com/vercel/next.js/releases/tag/v16.0.0-canary.1",
    "content": "### Core Changes\n\n- Version gate migration docs link: #84740\n- [Cache Components] Allow hiding logs after abort: #84579\n- Log `Compiled proxy in ...`: #84746\n\n### Misc Changes\n\n- [next-upgrade] misc: update comment: #84727\n- Turbopack: use vector instead of hash map: #84696\n- Revert \"docs: nav_title for long unbroken words (#84233)\": #84346\n- [turbopack] tweak the doc on the inner graph optimization: #84752\n- [turbopack] Fix a few references to caching configuration as it is no longer canary guarded: #84761\n- Add 16.0.0-beta.0 to next/third-parties peerDeps: #84741\n- [eslint-plugin] Remove `eslint-v8` testing: #84721\n\n### Credits \n\nHuge thanks to @devjiwonchoi, @mischnic, @icyJoseph, @gnoff, and @lukesandberg for helping!\n"
  },
  {
    "title": "ビジネスインテリジェンスの再解釈 : Amazon QuickSight から Amazon Quick Suite への進化",
    "date": "2025-10-10T09:11:37.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/reimagine-business-intelligence-amazon-quicksight-evolves-to-amazon-quick-suite/",
    "content": "<p>本記事は、2025 年 10 月 9 日に公開された <a href=\"https://aws.amazon.com/jp/blogs/business-intelligence/reimagine-business-intelligence-amazon-quicksight-evolves-to-amazon-quick-suite/\">Reimagine business intelligence: Amazon QuickSight evolves to Amazon Quick Suite</a> を翻訳したものです。翻訳は Solutions Architect の守田凜々佳が担当しました。</p> \n<p>ビジネスインテリジェンス (BI) の領域は、変革期を迎えています。データ活用が進み、AI が日常生活におけるデータとの関わり方を大きく変えている今、顧客は重要な岐路に立っています。つまり、ビジネスを加速させるために AI の可能性を受け入れる必要がありますが、それを慎重かつ安全に行わなければなりません。多くの顧客が、いかに実質的な価値を生み出す形で AI を業務に統合するか、という課題に直面しています。構造化データの可視化とレポート作成を主な目的とした従来の BI ソリューションは、もはやこの新時代には十分ではありません。</p> \n<p>顧客は 3 つの課題に直面しています。データの発見、分析、アクションの間で広がりつつあるギャップを埋めることができるソリューション、具体的なビジネス成果をもたらす形での AI 活用、さらにエンタープライズレベルのセキュリティとガバナンスを維持しながら組織全体のユーザーがアクセスできるソリューション、が必要です。多くの組織は、強力な AI 機能と、既存のデータやプロセスに適合する実用的で安全な実装との間で、適切なバランスを見つけることに苦闘しています。</p> \n<p>本日、Amazon QuickSight が <a href=\"https://aws.amazon.com/quicksuite/\" rel=\"noopener noreferrer\" target=\"_blank\">Amazon Quick Suite</a> へと進化することを発表できることを嬉しく思います。これは、組織内の全メンバーが包括的なビジネスインサイトを容易に利用できるようにする大きな前進です。この進化は、BI の可能性を広げ、AI エージェントがユーザーと協働しながら複雑な質問への回答、詳細な調査、定型業務の自動化を行う統合された体験を実現します。またその際に企業が期待するセキュリティ、信頼性、ガバナンスを維持します。Quick Suite は、AI 時代における BI の再解釈を行う私たちのビジョンを表しており、組織がより良い意思決定をより迅速に行い、それに基づいて行動できるように支援します。</p> \n<p>従来の BI 機能 (現在は <strong>Quick Sight</strong> と呼ばれています) に加えて、Quick Suite は複数の AI を活用した機能を導入しています：</p> \n<ul> \n <li><strong>Quick Research</strong> – 企業内外のデータソースから、引用付きの包括的なインサイトを提供します</li> \n <li><strong>Quick Flows</strong> – 自然言語でワークフローオートメーションを作成および共有します</li> \n <li><strong>Quick Automate</strong> – 複雑な多段階のビジネスプロセスを処理します</li> \n <li><strong>Quick Index</strong> – 企業のすべてのドキュメントとデータを共有ナレッジベースとして提供します</li> \n</ul> \n<p>これらの機能は、自然言語インターフェースの Quick chat を通じてアクセスでき、Quick spaces を通じて各チーム向けにカスタマイズすることができます。この統合環境では、ユーザーはデータ分析、詳細な調査、プロセスの自動化まで、全ての作業を同一アプリケーション内でシームレスに実行することができ、さらにエンタープライズレベルのセキュリティとガバナンスを維持できます。</p> \n<h2>なぜこの進化が重要なのか</h2> \n<p>冒頭で述べた企業が直面する 3 つの重要な課題 (データとアクションのギャップの解消、AI の実用的な活用、セキュリティの維持) に対して、Quick Suite は、企業がデータと AI を活用する方法を変革する包括的なソリューションを提供します。</p> \n<ul> \n <li><strong>あらゆるデータを統合するインテリジェンス </strong>– 従来の BI ソリューションは、指標と数値の活用に限定されており、ドキュメント、メール、エンタープライズアプリケーションに含まれる価値あるインサイトが活用できていませんでした。これにより、データの発見と有意義なインサイトの間に大きなギャップが生じていました。Quick Suite は、エンタープライズシステム、データベース、データレイク、チームの知見、リアルタイムのウェブインサイトなど、意思決定に必要なすべてのソースからのデータアクセスを統合することで、このギャップを解消します。経営者は、財務データベース、カスタマーフィードバックのメール、サポートチケット、市場調査文書にまたがる質問を行い、数秒で完全な回答を得ることができます。データの専門家は、利用可能なソースからコンテキストを取り込んだ高度な可視化と分析を作成し、より豊かで実用的なインサイトをステークホルダーに提供できます。</li> \n <li><strong>実用的な AI イノベーション </strong>– 企業が必要としているのは、単なる技術的な目新しさではなく、具体的なビジネス成果をもたらす AI です。Quick Suite は、強力な調査、分析、自動化エージェントを通じてこれを実現します。Quick Research は、社内データ、公開情報、専門データセットから情報を統合し、これまで数週間かかっていた包括的で引用付きのインサイト提供を数時間で実現します。Quick Flows を活用すると、議事録からアクション可能なタスクを作成する、最新のインサイトを含む週次レポートを自動で生成する、カスタマーサポートプロセスを効率化するなど、自然言語を使用して AI を活用したワークフローを作成できます。これらのワークフローを素早く共有することで、組織全体の生産性向上を実現できます。</li> \n <li><strong>セキュアでアクセスしやすい自然言語での体験 </strong>– Quick Suite は、エンタープライズレベルのセキュリティとガバナンスを維持しながら、AI へのアクセスを民主化します。強力なチャットインターフェースにより、自然言語での会話を通じて各機能にアクセスできます。組織は、技術的な質問に対応するトラブルシューティングアシスタントや、従業員に社内手続きをナビゲートするためのポリシーガイドなど、特定のニーズに合わせたカスタム AI エージェントを作成できます。これらのエージェントは、ドメインの専門知識と関連データソースを組み合わせ、必要とするすべての人が専門知識にアクセスできるようにします。各エージェントは、特定のペルソナ、データアクセス権、行動ガイドラインでカスタマイズでき、組織全体で一貫性のある、コンプライアンスに準拠した対話を実現します。</li> \n</ul> \n<h2>変更されない点</h2> \n<p> Quick Suite は強力な新機能を導入しますが、既存の BI 機能は変更なく維持されます。この進化は、現在の運用を妨げることなく、お客様が信頼する基盤の上に構築されています。</p> \n<p> 従来の QuickSight 環境は、ダッシュボード、データセット、分析を含めて、すべてがそのまま維持されます。データ接続、セキュリティ管理、ユーザー権限もすべて変更なく継続されます。既存の API 連携も以前と同様に機能し、データの移行も必要ありません。重要な点として、SOC、HIPAA、ISO 27001、ISO 27019、ISO 27018、ISO 9001、GDPR、FedRAMP を含む既存のコンプライアンス認証と認定が、引き続き有効です。Quick Suite は QuickSight の既存のコンプライアンス体制を継承します。また、データのプライバシーとセキュリティに対する AWS のコミットメントを強調したいと思います。私たちは、お客様のコンテンツをモデルのトレーニングに使用することはなく、新しいモデルプロバイダーも導入していません。お客様のデータは、信頼できるエンタープライズグレードのセキュリティとガバナンス管理により、お客様のものとして維持されます。このシームレスな移行により、ビジネスの継続性を維持しながら、お客様のペースで新機能を採用することができます。</p> \n<h2>リージョンの提供状況</h2> \n<p> Quick Suite は、すべてのお客様にスムーズな移行を提供するよう、段階的なアプローチで展開します。2025 年 10 月 9 日より、世界中の QuickSight のお客様は、新しい Quick Suite UI とブランディングが表示されます。新機能は、US East (N. Virginia)、US West (Oregon)、Europe (Dublin)、Asia Pacific (Sydney) でご利用いただけます。その他の AWS リージョンのお客様は、新しい Quick Suite インターフェイスが表示されますが、既存の BI 機能のみにアクセス可能な状態が維持されます。</p> \n<h2>新しいエクスペリエンスの操作方法</h2> \n<p> Quick Suite のインターフェースは、使い慣れた操作性を維持しながら強力な新機能を導入できるよう、慎重に再設計されました。このセクションでは、Pro ユーザー (Admin Pro、Author Pro、Reader Pro) と Author (Admin 含む) 向けの主要な変更点について説明します。</p> \n<p>Quick chat が Quick Suite のホームページに目立つように配置され、Quick Suite の機能にすぐにアクセスできるようになっています。また、ダッシュボードから主要なビジュアルをホームページにピン留めできる新機能が追加され、パーソナライズされたレコメンデーションや最近アクセスしたアイテムにも引き続き簡単にアクセスできます。基本的な Reader ($3) の体験は変更されていませんが、重要なメトリクスをホームページにピン留めできる機能が追加され、最も重要な情報を追跡しやすくなりました。</p> \n<p><img alt=\"\" class=\"alignnone size-full wp-image-5662\" height=\"750\" src=\"https://d2908q01vomqb2.cloudfront.net/d02560dd9d7db4467627745bd6701e809ffca6e3/2025/10/09/bi-7091-1.png\" style=\"margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC\" width=\"1536\"></p> \n<p>従来の BI 機能は、ナビゲーションペインの <strong>Quick Sight</strong> の下に整理されています。コンテンツへの整理されたアクセスのための <strong>マイフォルダ</strong> と <strong>共有フォルダ</strong>、<strong>ダッシュボード</strong>、<strong>ストーリー</strong> (旧 <strong>データストーリー</strong>)、<strong>分析</strong>、<strong>データセット</strong> などです。<strong>お気に入り</strong> は、素早くアクセスできるようにトップレベルに残され、グローバル検索は左上に配置されました。また、<strong>Quick Research</strong>、<strong>Quick Flows</strong>、<strong>Quick Automate</strong>、<strong>Connections</strong> は、ナビゲーションペインの専用セクションからアクセスできます。</p> \n<p>以下のスクリーンショットは、以前の QuickSight ナビゲーションペインと強化された Quick Suite ナビゲーションペインを比較したものです。</p> \n<table> \n <tbody> \n  <tr> \n   <td><img alt=\"\" class=\"alignnone size-full wp-image-5666\" height=\"772\" loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/d02560dd9d7db4467627745bd6701e809ffca6e3/2025/10/09/bi-7091-2-1.png\" style=\"margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC\" width=\"275\"></td> \n   <td><img alt=\"\" class=\"alignnone size-full wp-image-5664\" height=\"772\" loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/d02560dd9d7db4467627745bd6701e809ffca6e3/2025/10/09/bi-7091-3.png\" style=\"margin: 10px 0px 10px 0px;border: 1px solid #CCCCCC\" width=\"252\"></td> \n  </tr> \n </tbody> \n</table> \n<h2>価値の向上</h2> \n<p>既存のお客様にとってのシンプルさを維持しながら、より多くの価値を提供するため、料金体系が変更されます。</p> \n<p>お客様は、価格の引き下げと機能アクセスの拡充のメリットを得ることができます:</p> \n<ul> \n <li>Author Pro の料金が月額 50 ドルから 40 ドルに値下げされ、Author Pro ユーザーは <a href=\"https://aws.amazon.com/quicksuite/pricing/\" rel=\"noopener noreferrer\" target=\"_blank\">Quick Suite の Enterprise ユーザーの機能</a>にアクセスできるようになりました</li> \n <li>Reader Pro (月額 20 ドル) ユーザーは <a href=\"https://aws.amazon.com/quicksuite/pricing/\" rel=\"noopener noreferrer\" target=\"_blank\">Quick Suite の Professional ユーザーの機能</a>にアクセスできるようになりました</li> \n <li>現在の Author および Admin ユーザーは、2026 年 4 月 30 日までプロモーションとして Quick Suite の Enterprise ユーザーの機能にアクセスできます</li> \n <li>Reader (3 ドル) および Author (24 ドル) の料金は変更ありません</li> \n</ul> \n<p>専用インフラストラクチャ料金:</p> \n<ul> \n <li>既存の月額 250 ドルのインフラストラクチャ料金は、引き続き以下のアカウントにのみ適用されます： \n  <ul> \n   <li>Pro ユーザー (20 ドル/40 ドルプラン) が 1 つ以上存在</li> \n   <li>Topics または Dashboard Q&amp;A がアクティブ</li> \n  </ul> </li> \n <li>2025 年 10 月 9 日以降の新規 Pro ユーザーまたは Q&amp;A 有効化を行ったアカウントについては、2025 年 12 月 31 日までプロモーションとして本料金が免除されます</li> \n</ul> \n<h2>機能導入の完全なコントロール</h2> \n<p>組織が AI 機能の採用を正確にコントロールする必要があることを理解しています。管理者は、カスタムアクセス許可を使用してアカウント、ロール、ユーザーレベルで機能の有効化や無効化を行い、新機能を導入しながら既存のセキュリティポリシーを維持し、API を通じて複数のアカウントに一貫したコントロールを適用できます。</p> \n<p> Quick Suite は、お客様のペースで導入を管理できる柔軟性を提供します。すべての機能を直ちに有効化することも、異なるユーザーグループに段階的に導入するかを選択することも可能です。</p> \n<h2>埋め込み分析</h2> \n<p> BI の埋め込み機能をご利用の場合、主要な機能は変更されません。埋め込み機能、API、および統合機能は、これまでと同様に動作し、既存の実装に変更を加える必要はありません。ただし Quick Suite に合わせて、フッターが「Powered by Amazon Quick Suite」に更新、カラースキームが青色から紫色に変更、標準的な配置に Quick Suite ロゴが表示されるというビジュアルの更新が行われます。</p> \n<p>ブランドカスタマイズ機能をご利用の場合、カスタムスタイルは引き続き製品のデフォルトの外観を上書きします。Quick Sight アプリケーション要素について現在の青色のカラースキームを維持したい場合は、アカウントレベルで設定されたブランドカスタマイズ、公開時のテーマカスタマイズの適用、SDK を使用した埋め込み呼び出しでの動的な適用、のいずれかの方法で実現できます。これにより、埋め込み分析においてエンドユーザーに一貫した体験を継続して提供できます。</p> \n<h2>リソースとサポート</h2> \n<p>お客様がスムーズに移行できるよう、私たちは全力でサポートいたします。以下のリソースをご利用いただけます：</p> \n<ul> \n <li><a href=\"https://docs.aws.amazon.com/quicksuite/latest/userguide/what-is.html\" rel=\"noopener noreferrer\" target=\"_blank\">Amazon Quick Suite User Guide</a>における詳細なドキュメント</li> \n <li><a href=\"https://aws.amazon.com/support\" rel=\"noopener noreferrer\" target=\"_blank\">AWS Support</a> を通じたテクニカルサポート</li> \n <li>AWS アカウントチームによるコンサルテーション</li> \n</ul> \n<h2>今後の展望</h2> \n<p> Quick Suite への進化は、意思決定とビジネス成果を導くために必要なコンテキストを提供する、新しい働き方を実現します。AI が組織でのインサイト発見と戦略的な意思決定の方法を変革し続ける中、Quick Suite は安全で実用的な前進の道筋を提供します。私たちは、お客様とこの旅を共にし、これらの機能を活用して組織全体の価値を引き出していく様子を見ることを楽しみにしています。</p> \n<p> BI の未来を体験する準備はできましたか？ Quick Suite の 30 日間無料トライアルを利用して、最大 25 ユーザーまでその機能を試すことができます。機能や料金について詳しく知るには <a href=\"https://aws.amazon.com/quicksuite/\" rel=\"noopener noreferrer\" target=\"_blank\">Amazon Quick Suite</a> をご覧いただくか、Quick Suite がお客様の組織のデータドリブンな意思決定をどのように変革できるかについて、AWS アカウントチームにお問い合わせください。</p> \n<h3>著者について</h3> \n<p><img alt=\"\" class=\"wp-image-4362 size-full alignleft\" height=\"133\" loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/d02560dd9d7db4467627745bd6701e809ffca6e3/2025/03/20/sinkoo-1.jpg\" width=\"100\"><strong>Sindhu Chandra</strong> は、AWS の Amazon Quick Suite のシニアプロダクトマーケティングマネージャーで、マーケティングとテクノロジーの分野で 10 年以上の経験を持っています。現職に就く前は、Amazon、Uber、Google などのテクノロジー企業でマーケティングの職務を歴任し、クロスチャネルマーケティング戦略を主導してきました。B2B マーケティングをより親しみやすくし、インクルーシブなマーケティング施策を推進することに情熱を注いでいます。仕事以外では、愛犬と遊んだり、さまざまな産地のコーヒーを淹れたりすることを楽しんでいます。</p>"
  },
  {
    "title": "1時間でCodexとLINE Bot(WIP)",
    "date": "2025-10-10T09:07:57.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/n0bisuke/books/codex-linebot",
    "content": "1時間でCodexでLINE Botチャレンジ"
  },
  {
    "title": "3年目のプロダクトでコアデータの構造を作り直す",
    "date": "2025-10-10T08:00:01.000Z",
    "source": "Zennのトレンド",
    "url": "https://zenn.dev/nstock/articles/5409e32a0c78c3",
    "content": "\n これはなに\nNstock株式会社の祖業である株式報酬SaaSは、サービスローンチから数えて3年目になり、100社以上の企業様にご導入いただいています。その一方でコア機能である ストックオプションの個数/状態管理 の方法に課題が出てきていました。\nここまでは運用してこられたし次の2年もおそらくやっていけそうですが、その先の拡張も自信を持って乗り越えられるとは言いづらくなりつつありました。そういう状況の中で、次の10年を戦えるデータを生み出し続けるためにコア機能を作り直しました。\nそんな話をします。\n\n 書いてる人\nNstock株式会社で株式報酬SaaSのソフトウェアエンジニアをしている..."
  },
  {
    "title": "新しい汎用 Amazon EC2 M8a インスタンスが利用可能になりました",
    "date": "2025-10-10T07:51:03.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/new-general-purpose-amazon-ec2-m8a-instances-are-now-available/",
    "content": "<p>10 月 8 日は、汎用 M インスタンスファミリーに最近追加された <a href=\"https://aws.amazon.com/ec2/\">Amazon Elastic Compute Cloud (Amazon EC2)</a> M8a インスタンスの提供開始についてお知らせしたいと思います。これらのインスタンスは、<a href=\"https://www.amd.com/en/products/processors/server/epyc/9005-series.html\">第 5 世代 AMD EPYC (コードネーム「Turin」) プロセッサ</a>を搭載しており、最大周波数は 4.5 GHz です。お客様は、M7a インスタンスよりも最大 30% 高いパフォーマンスと最大 19% 優れたコストパフォーマンスを期待できます。これらのインスタンスは、より広いメモリ帯域幅、改善されたネットワークスループットとストレージスループット、幅広い汎用ワークロードに対応する柔軟な設定オプションも提供します。</p> \n<p><strong><u>M8a の改善点<br> </u></strong>M8a インスタンスは、vCPU あたりのパフォーマンスが M7a インスタンスよりも最大 30% 優れているため、金融アプリケーション、ゲーム、レンダリング、アプリケーションサーバー、シミュレーションモデリング、中規模のデータストア、アプリケーション開発環境、キャッシュフリートなど、高パフォーマンスと高スループットのメリットを活用する必要がある用途に最適です。</p> \n<p>M7a インスタンスよりも 45% 広いメモリ帯域幅を提供し、インメモリデータベース、分散キャッシュ、リアルタイム分析を高速化します。</p> \n<p>I/O 要件の高いワークロードには、M8a インスタンスが最大 75 Gbps のネットワーク帯域幅と 60 Gbps の <a href=\"https://aws.amazon.com/ebs/\">Amazon Elastic Block Store (Amazon EBS)</a> 帯域幅を提供します。これは、前世代から 50% の向上です。これらの機能強化は、迅速なデータ転送と低レイテンシーのネットワーク通信が不可欠な最新のアプリケーションをサポートします。</p> \n<p>M8a インスタンスの各 vCPU は物理的な CPU コアに対応するものです。つまり、同時マルチスレッディング (SMT) は行われません。アプリケーションベンチマークでは、M7a インスタンスと比較した M8a インスタンスのパフォーマンスが、<a href=\"https://groovy-lang.org/\">GroovyJVM</a> の場合に最大 60%、<a href=\"https://cassandra.apache.org/_/index.html\">Cassandra</a> の場合に最大 39% 高速になっています。</p> \n<p>M8a インスタンスは、ネットワーク帯域幅と EBS 帯域幅間でリソースを割り当てる柔軟性を提供する<a href=\"https://docs.aws.amazon.com/ebs/latest/userguide/instance-bandwidth-configuration.html\">インスタンス帯域幅設定 (IBC)</a> をサポートしています。IBC は、ネットワーク帯域幅または EBS 帯域幅を最大 25% スケールし、データベースパフォーマンス、クエリ処理、ロギングの速度を向上させる柔軟性をお客様に提供します。</p> \n<p>M8a は、10 個の仮想化サイズと 2 つのベアメタルオプション (<strong>metal-24xl</strong> と <strong>metal-48xl</strong>) で利用でき、小規模なアプリケーションから大規模なエンタープライズワークロードにスケールするデプロイ選択肢を提供します。これらすべての改善は、すべてのインスタンスサイズ全体で低い仮想化オーバーヘッド、一貫的なパフォーマンス、高度なセキュリティを実現する <a href=\"https://aws.amazon.com/ec2/nitro/\"> AWS Nitro System</a> を基盤としています。&nbsp;これらのインスタンスは、機能の I/O をオフロードして加速する最新の第 6 世代 AWS Nitro Card を使用して構築されており、全体的なシステムパフォーマンスを向上させます。</p> \n<p>M8a インスタンスには複数のサイズがあり、最大で 192 個の vCPU と 768 GiB の RAM を備えています。詳しい仕様は次のとおりです。</p> \n<table style=\"border: 2px solid black;border-collapse: collapse;margin-left: auto;margin-right: auto\"> \n <tbody> \n  <tr style=\"border-bottom: 1px solid black;background-color: #e0e0e0\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>M8a</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px\"><strong>vCPU</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px\"><strong>メモリ (GiB)</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px\"><strong>ネットワーク帯域幅 (Gbps)</strong></td> \n   <td><strong>EBS 帯域幅 (Gbps)</strong></td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>medium</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">1</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">4</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 12.5</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 10</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>large</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">2</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">8</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 12.5</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 10</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">4</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">16</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 12.5</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 10</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>2xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">8</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">32</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 15</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 10</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>4xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">16</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">64</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 15</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 10</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>8xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">32</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">128</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">15</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">10</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>12xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">48</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">192</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">22.5</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">15</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>16xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">64</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">256</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">30</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">20</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>24xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">96</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">384</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">40</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">30</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>48xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">192</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">768</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">75</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">60</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>metal-24xl</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">96</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">384</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">40</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">30</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>metal-48xl</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">192</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">768</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">75</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">60</td> \n  </tr> \n </tbody> \n</table> \n<p>インスタンスのサイズと仕様の完全なリストについては、<a href=\"https://aws.amazon.com/ec2/instance-types/m8a\">Amazon EC2 M8a インスタンスページ</a>を参照してください。</p> \n<p><strong><u>M8a インスタンスを使用する状況<br> </u></strong>M8a は、コンピューティング、メモリ、ネットワークのバランスを取る必要がある汎用アプリケーションに最適です。M8a インスタンスは、予測可能なパフォーマンスと効率的なスケーリングが重要となる、ウェブやアプリケーションのホスティング、マイクロサービスアーキテクチャ、データベースに理想的なインスタンスです。</p> \n<p>これらのインスタンスは SAP 認定を受けており、金融アプリケーションやエンタープライズリソースプランニング (ERP) システムなどのエンタープライズワークロードにも最適です。コスト効率性と柔軟性が求められる開発環境やテスト環境に加えて、インメモリキャッシュや顧客関係管理 (CRM) でも同様の効果を発揮します。こうした汎用性を備えた M8a は、お客様がコストパフォーマンスを向上できるように支援しながら、幅広いワークロードをサポートします。</p> \n<p><strong><u>今すぐご利用いただけます<br> </u></strong>Amazon EC2 M8a インスタンスは、米国東部 (オハイオ)、米国西部 (オレゴン)、欧州 (スペイン) の各 <a href=\"https://docs.aws.amazon.com/glossary/latest/reference/glos-chap.html#region\">AWS リージョン</a>で 10 月 8 日からご利用いただけます。 M8a インスタンスは、<a href=\"https://aws.amazon.com/ec2/pricing/on-demand/\">オンデマンド</a>、<a href=\"https://aws.amazon.com/savingsplans/\">Savings Plans</a>、<a href=\"https://aws.amazon.com/ec2/spot/pricing/\">スポットインスタンス</a>としての購入が可能です。M8a インスタンスは<a href=\"https://aws.amazon.com/ec2/dedicated-hosts/pricing/\">専有ホスト</a>でも利用できます。詳細については、<a href=\"https://aws.amazon.com/ec2/pricing\">Amazon EC2 の料金ページ</a>をご覧ください。</p> \n<p>詳細については、<a href=\"https://aws.amazon.com/ec2/instance-types/m8a\">Amazon EC2 M8i インスタンスページ</a>をご覧ください。フィードバックは、<a href=\"https://repost.aws/tags/TAO-wqN9fYRoyrpdULLa5y7g/amazon-ec-2/\">AWS re:Post for EC2</a> に送信するか、通常の AWS サポート連絡先経由でお寄せください。</p> \n<p>– <a href=\"https://www.linkedin.com/in/zhengyubin714/\">Betty</a></p> \n<p>原文は<a href=\"https://aws.amazon.com/jp/blogs/aws/new-general-purpose-amazon-ec2-m8a-instances-are-now-available/\">こちら</a>です。</p>"
  },
  {
    "title": "新しいコンピューティング最適化 Amazon EC2 C8i および C8i-flex インスタンスのご紹介",
    "date": "2025-10-10T07:29:25.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/introducing-new-compute-optimized-amazon-ec2-c8i-and-c8i-flex-instances/",
    "content": "<p><a href=\"https://aws.amazon.com/pm/ec2/?trk=7c8639c6-87c6-47d6-9bd0-a5812eecb848&amp;sc_channel=el\">Amazon Elastic Compute Cloud (Amazon EC2)</a> メモリ最適化 <a href=\"https://aws.amazon.com/blogs/aws/best-performance-and-fastest-memory-with-the-new-amazon-ec2-r8i-and-r8i-flex-instances/\">R8i および R8i-flex インスタンス</a>、ならびに汎用 <a href=\"https://aws.amazon.com/blogs/aws/new-general-purpose-amazon-ec2-m8i-and-m8i-flex-instances-are-now-available/\">M8i および M8i-flex インスタンス</a>のリリースに続き、カスタムインテル Xeon 6 プロセッサを搭載し、持続的なオールコア 3.9 GHz ターボ周波数と 2:1 のメモリ対 vCPU 比を備えた、AWS でのみ利用可能なコンピューティング最適化 <a href=\"https://aws.amazon.com/ec2/instance-types/c8i/\">C8i および C8i-flex インスタンス</a>の一般提供の開始をお知らせします。これらのインスタンスは、クラウドにおける同等の Intel プロセッサの中でも最高のパフォーマンスと最速のメモリ帯域幅を提供します。</p> \n<p>C8i および C8i-flex インスタンスは、<a href=\"https://aws.amazon.com/ec2/instance-types/c7i/\">C7i および C7i-flex インスタンス</a>と比較して、最大 15% 優れた料金パフォーマンスと 2.5 倍のメモリ帯域幅を提供します。C8i および C8i-flex インスタンスは、C7i および C7i-flex インスタンスと比較して、NGINX ウェブアプリケーションで最大 60%、AI 深層学習レコメンデーションモデルで最大 40%、Memcached ストアで 35% 高速です。</p> \n<p>C8i および C8i-flex インスタンスは、ウェブサーバー、キャッシュ、Apache.Kafka、ElasticSearch、バッチ処理、分散分析、ハイパフォーマンスコンピューティング (HPC)、広告配信、高度にスケーラブルなマルチプレイヤーゲーム、動画エンコーディングなど、コンピューティングを多用するワークロードの実行に最適です。</p> \n<p>他の第 8 世代インスタンスと同様、これらのインスタンスは新しい第 6 世代 <a href=\"https://aws.amazon.com/ec2/nitro/\">AWS Nitro Card</a> を使用しており、前世代のインスタンスと比較してネットワークと <a href=\"https://aws.amazon.com/ebs/\">Amazon Elastic Block Storage (Amazon EBS)</a> の帯域幅が最大 2 倍増加しています。また、ネットワークと Amazon EBS 帯域幅の間で 25% の割り当て調整を行う帯域幅設定にも対応しており、データベースのパフォーマンス、クエリ処理、ログ記録速度が向上します。</p> \n<p><strong><u>C8i インスタンス</u></strong><br> C8i インスタンスは、基盤となる物理ハードウェアへの専用アクセスを提供するベアメタルインスタンスを含め、最大 384 個の vCPU と 768 TB のメモリを提供します。これらのインスタンスは、CPU ベースの推論や、継続的に最大インスタンスサイズまたは高い CPU を必要とする動画ストリーミングなど、コンピューティングを多用するワークロードの実行に役立ちます。</p> \n<p>C8i インスタンスの仕様は次のとおりです。</p> \n<table style=\"border: 2px solid black;border-collapse: collapse;margin-left: auto;margin-right: auto\"> \n <tbody> \n  <tr style=\"border-bottom: 1px solid black;background-color: #e0e0e0\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>インスタンスサイズ</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>vCPU</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>メモリ (GiB)</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>ネットワーク帯域幅 (Gbps)</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>EBS 帯域幅 (Gbps)</strong></td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i.large</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">2</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">4</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 12.5</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 10</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i.xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">4</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">8</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 12.5</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 10</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i.2xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">8</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">16</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 15</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 10</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i.4xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">16</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">32</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 15</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 10</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i.8xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">32</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">64</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">15</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">10</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i.12xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">48</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">96</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">22.5</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">15</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i.16xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">64</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">128</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">30</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">20</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i.24xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">96</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">192</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">40</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">30</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i.32xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">128</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">256</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">50</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">40</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i.48xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">192</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">384</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">75</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">60</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i.96xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">384</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">768</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">100</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">80</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i.metal-48xl</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">192</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">384</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">75</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">60</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i.metal-96xl</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">384</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">768</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">100</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">80</td> \n  </tr> \n </tbody> \n</table> \n<p><strong><u>C8i-flex インスタンス</u></strong><br> C8i-flex インスタンスは、C8i インスタンスの低コスト版であり、5% 低い料金で 5% 優れた料金パフォーマンスを実現しています。これらのインスタンスは、最新世代のパフォーマンスから恩恵を享受できるにかかわらず、すべてのコンピューティングリソースを完全に活用していないワークロード向けに設計されています。これらのインスタンスは、95% の確率で最大 CPU パフォーマンスを発揮できます。</p> \n<p>C8i-flex インスタンスの仕様は次のとおりです。</p> \n<table style=\"border: 2px solid black;border-collapse: collapse;margin-left: auto;margin-right: auto\"> \n <tbody> \n  <tr style=\"border-bottom: 1px solid black;background-color: #e0e0e0\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>インスタンスサイズ</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>vCPU</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>メモリ (GiB)</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>ネットワーク帯域幅 (Gbps)</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>EBS 帯域幅 (Gbps)</strong></td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i-flex.large</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">2</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">4</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 12.5</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 10</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i-flex.xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">4</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">8</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 12.5</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 10</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i-flex.2xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">8</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">16</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 15</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 10</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i-flex.4xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">16</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">32</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 15</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 10</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i-flex.8xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">32</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">64</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 15</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 10</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i-flex.12xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">48</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">96</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 22.5</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 15</td> \n  </tr> \n  <tr style=\"border-bottom: 1px solid black\"> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\"><strong>c8i-flex.16xlarge</strong></td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">64</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">128</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 30</td> \n   <td style=\"border-right: 1px solid black;padding: 4px;text-align: center\">最大 20</td> \n  </tr> \n </tbody> \n</table> \n<p>現在、旧世代のコンピューティング最適化インスタンスを使用している場合は、アプリケーションやワークロードに変更を加えることなく、C8i-flex インスタンスを採用できます。</p> \n<p><strong><u>今すぐご利用いただけます</u></strong><br> Amazon EC2 C8i および C8i-flex インスタンスは、現在、米国東部 (バージニア北部)、米国東部 (オハイオ)、米国西部 (オレゴン)、欧州 (スペイン) の <a href=\"https://docs.aws.amazon.com/glossary/latest/reference/glos-chap.html#region\">AWS リージョン</a>でご利用いただけます。C8i および C8i-flex インスタンスは、<a href=\"https://aws.amazon.com/ec2/pricing/on-demand/?trk=cf96f8ec-de40-4ee0-8b64-3f7cf7660da2&amp;sc_channel=el\">オンデマンド</a>、<a href=\"https://aws.amazon.com/savingsplans/?trk=cc9e0036-98c5-4fa8-8df0-5281f75284ca&amp;sc_channel=el\">Savings Plan</a>、<a href=\"https://aws.amazon.com/ec2/spot/pricing/?trk=307341f6-3463-47d5-ba81-0957847a9b73&amp;sc_channel=el\">スポットインスタンス</a>として購入できます。C8i インスタンスは、<a href=\"https://aws.amazon.com/ec2/pricing/dedicated-instances/\">ハードウェア専有インスタンス</a>および<a href=\"https://aws.amazon.com/ec2/dedicated-hosts/pricing/\">専有ホスト</a>での利用も可能です。詳細については、<a href=\"https://aws.amazon.com/ec2/pricing\">Amazon EC2 の料金ページ</a>をご覧ください。</p> \n<p><a href=\"https://console.aws.amazon.com/ec2/?trk=769a1a2b-8c19-4976-9c45-b6b1226c7d20&amp;sc_channel=el\">Amazon EC2 コンソール</a>で C8i および C8i-flex インスタンスをお試しください。詳細については、<a href=\"https://aws.amazon.com/ec2/instance-types/c8i/\">Amazon EC2 C8i インスタンスのページ</a>をご覧ください。また、<a href=\"https://repost.aws/tags/TAO-wqN9fYRoyrpdULLa5y7g/amazon-ec-2\">AWS re:Post for EC2</a> に、または通常の AWS サポートの連絡先を通じて、ぜひフィードバックをお寄せください。</p> \n<p>– <a href=\"https://linkedin.com/in/channy/\">Channy</a></p> \n<p>原文は<a href=\"https://aws.amazon.com/jp/blogs/aws/introducing-new-compute-optimized-amazon-ec2-c8i-and-c8i-flex-instances/\">こちら</a>です。</p>"
  },
  {
    "title": "AWS IAM アイデンティティセンターが、保管中の暗号化のためにカスタマーマネージド KMS キーのサポートを開始",
    "date": "2025-10-10T07:20:22.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/aws-iam-identity-center-now-supports-customer-managed-kms-keys-for-encryption-at-rest/",
    "content": "<p>10 月 6 日より、独自の <a href=\"https://aws.amazon.com/kms/\">AWS Key Management Service (AWS KMS)</a> キーを使用して、<a href=\"https://aws.amazon.com/iam/identity-center/\">AWS IAM アイデンティティセンター</a>の組織インスタンスに保存されているユーザー属性やグループ属性などの ID データを暗号化できるようになりました。</p> \n<p>規制の厳しい業界で事業を展開している多くの組織は、暗号化キー管理を完全に制御する必要があります。アイデンティティセンターでは既に AWS 所有キーを使用して保管中のデータを暗号化していますが、監査やコンプライアンスのために独自の暗号化キーを管理する必要があるお客様もいます。</p> \n<p>このリリースにより、<a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html\">カスタマーマネージド KMS キー</a> (CMK) を使用して、アイデンティティセンターの保管中の ID データを暗号化できるようになりました。CMK を使用すると、作成、ローテーション、削除など、キーのライフサイクルを完全に制御できます。<a href=\"https://aws.amazon.com/kms/\">AWS Key Management Service (AWS KMS)</a> キーポリシーと IAM ポリシーを使用して、キーへのきめ細かなアクセスコントロールを設定できるため、認可されたプリンシパルのみが暗号化されたデータにアクセスできるようにするのに役立ちます。起動時には、CMK は IAM アイデンティティセンターインスタンスと同じ AWS アカウントおよびリージョンに存在する必要があります。アイデンティティセンターと KMS の統合により、キーの使用状況を監査するための詳細な <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-user-guide.html\">AWS CloudTrail</a> ログが提供され、規制コンプライアンス要件を遵守するのに役立ちます。</p> \n<p>アイデンティティセンターは、デプロイのニーズに合わせて、単一リージョンキーとマルチリージョンキーの両方をサポートしています。アイデンティティセンターインスタンスは現在単一のリージョンにのみデプロイできますが、会社のポリシーで単一リージョンキーに制限されていない限り、マルチリージョン AWS KMS キーを使用することをお勧めします。マルチリージョンキーは、各リージョンで独立したキーインフラストラクチャを維持しながら、リージョン間で一貫したキーマテリアルを提供します。これにより、暗号化戦略の柔軟性が高まり、デプロイが将来の変化にも対応できるようにするのに役立ちます。</p> \n<p><span style=\"text-decoration: underline\"><strong>始めましょう<br> </strong></span>CMK を使用してアイデンティティセンターの組織インスタンスの ID データを暗号化するとします。私の組織では、アイデンティティセンターを使用して、<a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/awsapps.html\">AWS マネージドアプリケーション</a> (<a href=\"https://aws.amazon.com/q/business/\">Amazon Q Business</a> や <a href=\"https://aws.amazon.com/athena\">Amazon Athena</a> など) へのアクセスを従業員に付与しています。</p> \n<p>現時点では、一部の AWS マネージドアプリケーションは、カスタマーマネージド KMS キーで設定されたアイデンティティセンターでは使用できません。互換性のあるアプリケーションのリストは常に更新されるため、「<a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/awsapps-that-work-with-identity-center.html\">AWS managed applications that you can use with Identity Center</a>」で最新情報をご覧ください。</p> \n<p>大まかなプロセスでは、まず AWS KMS で対称カスタマーマネージドキー (CMK) を作成する必要があります。このキーは、暗号化および復号オペレーション用に設定する必要があります。次に、アイデンティティセンター、AWS マネージドアプリケーション、管理者、およびアイデンティティセンターと IAM アイデンティティセンターサービス API にアクセスする必要がある他のプリンシパルにアクセスを付与するキーポリシーを設定します。キーにはポリシーを、IAM プリンシパルには IAM ポリシーを、それぞれアイデンティティセンターの使用方法に応じて定義する必要があります。<a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/identity-center-customer-managed-keys.html\">サービスドキュメントには、極めて一般的なユースケースをカバーするのに役立つ詳細が記載されています</a>。</p> \n<p>このデモは 3 つのパートに分かれています。まず、AWS KMS でカスタマーマネージドキーを作成し、アイデンティティセンターと AWS マネージドアプリケーションがそのキーを使用することを認可する許可を設定します。次に、AWS アプリケーション管理者など、別の AWS アカウントのキーを使用するプリンシパルの IAM ポリシーを更新します。最後に、アイデンティティセンターがそのキーを使用するように設定します。</p> \n<p><strong>パート 1: キーを作成して、許可を定義する</strong></p> \n<p>まず、AWS KMS で新しい CMK を作成しましょう。</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/07/04/2025-07-04_11-01-01.png\"><img loading=\"lazy\" class=\"aligncenter wp-image-97759\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/07/04/2025-07-04_11-01-01.png\" alt=\"AWS KMS、キーを作成する、パート 1\" width=\"800\" height=\"550\"></a></p> \n<p>キーは、アイデンティティセンターインスタンスと同じ AWS リージョンおよび AWS アカウントに存在する必要があります。AWS Organizations 内の組織の管理アカウントに、アイデンティティセンターインスタンスとキーを作成する必要があります。</p> \n<p>アイデンティティセンターインスタンスと同じリージョンで AWS Key Management Service (AWS KMS) コンソールに移動し、<strong>[キーを作成]</strong> を選択します。これでキー作成ウィザードが起動します。</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/07/04/2025-07-04_11-01-52.png\"><img loading=\"lazy\" class=\"aligncenter wp-image-97760\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/07/04/2025-07-04_11-01-52.png\" alt=\"AWS KMS、キーを作成する、パート 2\" width=\"800\" height=\"511\"></a></p> \n<p><strong>[ステップ 1 – キーを設定する]</strong> で、キータイプとして、[対称] (暗号化と復号の両方に使用される単一のキー) または [非対称] (暗号化/復号と署名/検証用のパブリックキーとプライベートキーのペア) を選択します。アイデンティティセンターでは、保管中の暗号化に対称キーが必要です。私は <strong>[対称]</strong> を選択します。</p> \n<p>キーの使用方法については、<strong>[暗号化および復号]</strong> を選択します。これにより、キーはデータの暗号化と復号にのみ使用されます。</p> \n<p><strong>[高度なオプション]</strong> の <strong>[キーマテリアルのオリジン]</strong> で <strong>[KMS – 推奨]</strong> を選択し、AWS KMS がキーマテリアルを作成および管理するようにします。</p> \n<p><strong>[リージョン]</strong> で、[シングルリージョンキー] または [マルチリージョンキー] を選択します。<strong>[マルチリージョンキー]</strong> を選択すると、キー管理者は、キーを他のリージョンにレプリケートできます。既に説明したように、アイデンティティセンターでは現時点ではこれは必要ありませんが、設定が将来の変化に対応できるようにするのに役立ちます。なお、シングルリージョンキーを作成した後で、マルチリージョンキーに変換することはできません (ただし、アイデンティティセンターによって使用されるキーを変更することは可能です)。</p> \n<p>その後、<strong>[次へ]</strong> を選択して、ラベルの追加、管理許可の定義、使用許可の設定、キー作成前の最終設定の確認などの追加の設定ステップに進みます。</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/07/04/2025-07-04_11-11-35.png\"><img loading=\"lazy\" class=\"aligncenter wp-image-97761\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/07/04/2025-07-04_11-11-35.png\" alt=\"AWS KMS、キーを作成する、パート 3\" width=\"800\" height=\"484\"></a></p> \n<p><strong>[ステップ 2 – ラベルを追加する]</strong> で、キーの <strong>[エイリアス]</strong> 名を入力し、<strong>[次へ]</strong> を選択します。</p> \n<p>このデモでは、<a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/identity-center-customer-managed-keys.html#choose-kms-key-policy-statements\">ドキュメント</a>で提供されているテンプレートを使用してポリシーステートメントを追加することで、キーポリシーを編集します。&nbsp;ステップ 3 とステップ 4 はスキップし、<strong>[ステップ 5 – キーポリシーを編集する]</strong> に進みます。</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/07/04/2025-07-04_11-47-58.png\"><img loading=\"lazy\" class=\"aligncenter wp-image-97786\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/07/04/2025-07-04_11-47-58.png\" alt=\"AWS KMS、キーを作成する、パート 5\" width=\"800\" height=\"517\"></a></p> \n<p>アイデンティティセンターでは、少なくともアイデンティティセンターとその管理者がキーを使用できるようにする許可が必要です。そのため、3 つのポリシーステートメントを追加します。1 つ目と 2 つ目はサービスの管理者を認可し、3 つ目はアイデンティティセンターサービス自体を認可します。</p> \n<pre><code class=\"lang-json\">{\n\t\"Version\": \"2012-10-17\",\n\t\"Id\": \"key-consolepolicy-3\",\n\t\"Statement\": [\n\t\t{\n\t\t\t\"Sid\": \"Allow_IAMIdentityCenter_Admin_to_use_the_KMS_key_via_IdentityCenter_and_IdentityStore\",\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Principal\": {\n\t\t\t\t\"AWS\": \"ARN_OF_YOUR_IDENTITY_CENTER_ADMIN_IAM_ROLE\"\n\t\t\t},\n\t\t\t\"Action\": [\n\t\t\t\t\"kms:Decrypt\",\n\t\t\t\t\"kms:Encrypt\",\n\t\t\t\t\"kms:GenerateDataKeyWithoutPlaintext\"\n\t\t\t],\n\t\t\t\"Resource\": \"*\",\n\t\t\t\"Condition\": {\n\t\t\t\t\"StringLike\": {\n\t\t\t\t\t\"kms:ViaService\": [\n\t\t\t\t\t\t\"sso.*.amazonaws.com\",\n\t\t\t\t\t\t\"identitystore.*.amazonaws.com\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"Sid\": \"Allow_IdentityCenter_admin_to_describe_the_KMS_key\",\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Principal\": {\n\t\t\t\t\"AWS\": \"ARN_OF_YOUR_IDENTITY_CENTER_ADMIN_IAM_ROLE\"\n\t\t\t},\n\t\t\t\"Action\": \"kms:DescribeKey\",\n\t\t\t\"Resource\": \"*\"\n\t\t},\n\t\t{\n\t\t\t\"Sid\": \"Allow_IdentityCenter_and_IdentityStore_to_use_the_KMS_key\",\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Principal\": {\n\t\t\t\t\"Service\": [\n\t\t\t\t\t\"sso.amazonaws.com\",\n\t\t\t\t\t\"identitystore.amazonaws.com\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t\"Action\": [\n\t\t\t\t\"kms:Decrypt\",\n\t\t\t\t\"kms:ReEncryptTo\",\n\t\t\t\t\"kms:ReEncryptFrom\",\n\t\t\t\t\"kms:GenerateDataKeyWithoutPlaintext\"\n\t\t\t],\n\t\t\t\"Resource\": \"*\",\n            \"Condition\": {\n    \t       \"StringEquals\": { \n                      \"aws:SourceAccount\": \"&lt;Identity Center Account ID&gt;\" \n\t           }\n            }\t\t\n\t\t},\n\t\t{\n\t\t\t\"Sid\": \"Allow_IdentityCenter_and_IdentityStore_to_describe_the_KMS_key\",\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Principal\": {\n\t\t\t\t\"Service\": [\n\t\t\t\t\t\"sso.amazonaws.com\",\n\t\t\t\t\t\"identitystore.amazonaws.com\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t\"Action\": [\n\t\t\t\t\"kms:DescribeKey\"\n\t\t\t],\n\t\t\t\"Resource\": \"*\"\n\t\t}\t\t\n\t]\n}</code></pre> \n<p>また、AWS マネージドアプリケーションの使用という私のユースケースを許可するために、ポリシーステートメントをさらに追加する必要があります。これらの 2 つのポリシーステートメントを追加して、AWS マネージドアプリケーションとその管理者が KMS キーを使用することを認可します。<a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/identity-center-customer-managed-keys.html#choose-kms-key-policy-statements\">このドキュメントには、追加のユースケースとそれぞれのポリシーがリストされています</a>。</p> \n<pre><code class=\"lang-json\">{\n    \"Sid\": \"Allow_AWS_app_admins_in_the_same_AWS_organization_to_use_the_KMS_key\",\n    \"Effect\": \"Allow\",\n    \"Principal\": \"*\",\n    \"Action\": [\n        \"kms:Decrypt\"\n    ],\n    \"Resource\": \"*\",\n    \"Condition\": {\n        \"StringEquals\" : {\n           \"aws:PrincipalOrgID\": \"MY_ORG_ID (format: o-xxxxxxxx)\"\n        },\n        \"StringLike\": {\n            \"kms:ViaService\": [\n                \"sso.*.amazonaws.com\", \"identitystore.*.amazonaws.com\"\n            ]\n        }\n    }\n},\n{\n   \"Sid\": \"Allow_managed_apps_to_use_the_KMS_Key\",\n   \"Effect\": \"Allow\",\n   \"Principal\": \"*\",\n   \"Action\": [\n      \"kms:Decrypt\"\n    ],\n   \"Resource\": \"*\",\n   \"Condition\": {\n      \"Bool\": { \"aws:PrincipalIsAWSService\": \"true\" },\n      \"StringLike\": {\n         \"kms:ViaService\": [\n             \"sso.*.amazonaws.com\", \"identitystore.*.amazonaws.com\"\n         ]\n      },\n      \"StringEquals\": { \"aws:SourceOrgID\": \"MY_ORG_ID (format: o-xxxxxxxx)\" }\n   }\n}</code></pre> \n<p>キーの使用を特定のアイデンティティセンターインスタンス、特定のアプリケーションインスタンス、または特定のアプリケーション管理者にさらに制限することもできます。<a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/advanced-kms-policy.html\">このドキュメントには、お客様のユースケース向けの高度なキーポリシーの例が記載されています</a>。</p> \n<p>許可セットの再作成時に IAM ロール名が変更されないようにするには、「<a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/referencingpermissionsets.html#custom-trust-policy-example\">Custom trust policy example</a>」で説明されている方法を使用します。</p> \n<p><strong>パート 2: IAM ポリシーを更新して、別の AWS アカウントからの KMS キーの使用を許可する</strong></p> \n<p>アイデンティティセンターの委任された管理者や AWS アプリケーション管理者など、別の AWS アカウントからアイデンティティセンターサービス API を使用するすべての IAM プリンシパルには、これらの API 経由での KMS キーの使用を許可する IAM ポリシーステートメントが必要です。</p> \n<p>新しいポリシーを作成し、ユースケースに関連する IAM ロールにそのポリシーをアタッチすることで、キーにアクセスするための許可を付与します。これらのステートメントを IAM ロールの既存の ID ベースのポリシーに追加することもできます。</p> \n<p>これを行うには、キーを作成した後、その ARN を見つけて、以下のテンプレートの <code>key_ARN</code> を置き換えます。その後、そのポリシーをマネージドアプリケーション管理者の IAM プリンシパルにアタッチします。このドキュメントでは、<a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/baseline-KMS-key-policy.html#baseline-kms-key-policy-statements-for-use-of-iam-identity-center-mandatory\">キーにアクセスするための許可をアイデンティティセンターの委任された管理者に付与する IAM ポリシー</a>についても説明しています。</p> \n<p>マネージドアプリケーション管理者向けの例を次に示します:</p> \n<pre><code class=\"lang-json\">{\n      \"Sid\": \"Allow_app_admins_to_use_the_KMS_key_via_IdentityCenter_and_IdentityStore\",\n      \"Effect\": \"Allow\",\n      \"Action\": \n        \"kms:Decrypt\",\n      \"Resource\": \"&lt;key_ARN&gt;\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"kms:ViaService\": [\n            \"sso.*.amazonaws.com\",\n            \"identitystore.*.amazonaws.com\"\n          ]\n        }\n      }\n    }</code></pre> \n<p><a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/baseline-KMS-key-policy.html\">ドキュメントでは、最も一般的なユースケース向けの IAM ポリシーテンプレートを共有しています</a>。</p> \n<p><strong>パート 3: キーを使用するように IAM アイデンティティセンターを設定する</strong></p> \n<p>CMK は、アイデンティティセンターの組織インスタンスを有効にする際に、または既存のインスタンスで設定できます。また、CMK を切り替えたり、AWS 所有キーに戻したりすることで、いつでも暗号化設定を変更できます。</p> \n<p>KMS キーの許可を正しく設定しないと、アイデンティティセンターの運用が中断され、アイデンティティセンターを通じた AWS マネージドアプリケーションおよびアカウントへのアクセスが中断される可能性があることにご留意ください。この最後のステップに慎重に進み、ドキュメントをよく読み、理解するようにしてください。</p> \n<p>CMK を作成して設定したら、アイデンティティセンターを有効にする際に <strong>[高度な設定]</strong> でその CMK を選択できます。</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/06/25/2025-06-25_10-39-53.png\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-97502\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/06/25/2025-06-25_10-39-53.png\" alt=\"CMK 設定を使用した IDC\" width=\"800\" height=\"583\"></a></p> \n<p>AWS マネジメントコンソールを使用して既存のアイデンティティセンターインスタンスで CMK を設定するには、まず <a href=\"https://console.aws.amazon.com\">AWS マネジメントコンソール</a>のアイデンティティセンターのセクションに移動します。そこで、ナビゲーションペインから <strong>[設定]</strong> を選択し、<strong>[管理]</strong> タブを選択して、<strong>[IAM アイデンティティセンターの保管中のデータの暗号化用のキー]</strong> セクションで <strong>[暗号化を管理]</strong> を選択します。</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/06/25/2025-06-25_15-04-27.png\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-97503\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/06/25/2025-06-25_15-04-27.png\" alt=\"既存の IDC 上のキーの変更\" width=\"800\" height=\"545\"></a></p> \n<p>いつでも、同じ AWS アカウントから別の CMK を選択したり、AWS マネージドキーに切り替えて戻したりできます。</p> \n<p><strong>[保存]</strong> を選択すると、キーの変更プロセスが完了するまで数秒かかります。移行中もすべてのサービス機能は中断なく使用できます。何らかの理由でアイデンティティセンターが新しいキーにアクセスできない場合は、エラーメッセージが返され、アイデンティティセンターは引き続き現在のキーを使用し、既に暗号化で使用されている暗号化メカニズムで ID データを暗号化し続けます。</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/06/25/2025-06-25_15-04-43.png\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-97504\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/06/25/2025-06-25_15-04-43.png\" alt=\"IDC 上の CMK、新しいキーを選択\" width=\"400\" height=\"246\"></a></p> \n<p><span style=\"text-decoration: underline\"><strong>留意事項<br> </strong></span>作成した暗号化キーは、アイデンティティセンターの重要なコンポーネントとなります。保管中の ID 属性を暗号化するために独自のマネージドキーを使用することを選択する場合は、次の点を確認する必要があります。</p> \n<ul> \n <li>KMS キーを使用するために<a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/baseline-KMS-key-policy.html\">必要な許可</a>を設定しましたか? 適切な許可がない場合、CMK を有効にすると失敗したり、IAM アイデンティティセンターの管理や AWS マネージドアプリケーションが中断したりする可能性があります。</li> \n <li>AWS マネージドアプリケーションが CMK キーと互換性があることを確認しましたか? 互換性のあるアプリケーションの一覧については、「<a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/awsapps-that-work-with-identity-center.html\">AWS managed applications that you can use with IAM Identity Center</a>」をご覧ください。 CMK と互換性のない AWS マネージドアプリケーションによって使用されるアイデンティティセンターのために CMK を有効にすると、それらのアプリケーションの運用が中断されます。互換性のないアプリケーションがある場合は、続行しないでください。</li> \n <li>組織は、アイデンティティセンターおよび Identity Store API を利用するために追加の IAM ロール設定を必要とする AWS マネージドアプリケーションを使用していますか? 既にデプロイされているこのような各 AWS マネージドアプリケーションについて、マネージドアプリケーションのユーザーガイドを読み、IAM アイデンティティセンターの使用のための、更新された KMS キーの許可を確認し、指示に従ってそれらの許可を更新して、アプリケーションが中断しないようにしてください。</li> \n <li>簡潔にするために、この記事の KMS キーポリシーステートメントでは、<a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/encryption-at-rest.html#iam-identity-center-encryption-context\">暗号化コンテキスト</a>を省略しています。暗号化コンテキストを使用すると、<a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/advanced-kms-policy.html#using-encryption-context-to-restrict-access\">特定のインスタンスを含むアイデンティティセンターへの KMS キーの使用を制限</a>できます。本番のシナリオでは、アイデンティティセンターに次のような条件を追加できます: <pre><code class=\"lang-json\">\"Condition\": {\n   \"StringLike\": {\n      \"kms:EncryptionContext:aws:sso:instance-arn\": \"${identity_center_arn}\",\n      \"kms:ViaService\": \"sso.*.amazonaws.com\"\n    }\n}</code></pre> <p>あるいは、Identity Store に次のような条件を追加できます:</p> <pre><code class=\"lang-json\">\"Condition\": {\n   \"StringLike\": {\n      \"kms:EncryptionContext:aws:identitystore:identitystore-arn\": \"${identity_store_arn}\",\n      \"kms:ViaService\": \"identitystore.*.amazonaws.com\"\n    }\n}</code></pre> </li> \n</ul> \n<p><span style=\"text-decoration: underline\"><strong>料金と利用可能なリージョン<br> </strong></span>キーストレージと API の使用には、AWS KMS の標準料金が適用されます。アイデンティティセンターは引き続き追加料金なしでご利用いただけます。</p> \n<p>この機能は、すべての AWS 商用リージョン、AWS GovCloud (米国)、および AWS 中国リージョンでご利用いただけます。詳細については、「<a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/encryption-at-rest.html\">IAM アイデンティティセンターユーザーガイド</a>」にアクセスしてください。</p> \n<p>セキュリティとコンプライアンスの要件を満たすために、この新しい機能をどのように使用するのかについて、ぜひお聞かせください。</p> \n<p><a href=\"https://linktr.ee/sebsto\">– seb</a></p> \n<p>原文は<a href=\"https://aws.amazon.com/jp/blogs/aws/aws-iam-identity-center-now-supports-customer-managed-kms-keys-for-encryption-at-rest/\">こちら</a>です。</p>"
  },
  {
    "title": "vercel/next.js – v16.0.0-canary.0",
    "date": "2025-10-10T05:02:08.000Z",
    "source": "GitHub",
    "url": "https://github.com/vercel/next.js/releases/tag/v16.0.0-canary.0",
    "content": "### Core Changes\n\n- docs: Add more details to `useLightningcss` docs: #84581\n\n### Misc Changes\n\n- Rspack: Fix lockfile test on rspack: #84707\n- [turbopack] Emit a warning when there are too many matches from a FileSourceReference: #84701\n- Update beta tag: #84725\n- [next-codemod] fix: Set codemod version to the first introduced version: #84726\n\n### Credits \n\nHuge thanks to @bgw, @lukesandberg, @ijjk, and @devjiwonchoi for helping!\n"
  },
  {
    "title": "Amazon Bedrockを活用したAWS サポート問い合わせ内容の自動集約ソリューションの実装",
    "date": "2025-10-09T09:55:26.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/jaldx-solutions-awssupport-bedrock/",
    "content": "<p>本稿は、JALデジタル株式会社システムマネジメント本部ハイブリッドクラウド基盤部クラウド基盤運営グループの梅本様、北様からご寄稿いただきました。</p> \n<h2>はじめに</h2> \n<p>JALデジタル株式会社のプラットフォームチームでは、JALグループのITシステムとして必要な設計・運用を満たすためのAWSアカウントを「<a href=\"https://d1.awsstatic.com/case-studies/jp/pdf/JAL.pdf\" target=\"brank\" rel=\"noopener\">CIEL/S</a>」(※1)として提供しています。<br> 今回私たちのチームでは、複数のAWSアカウントにおける AWS サポートとのやり取りを組織全体で効率的に活用するため、Amazon Bedrock を活用したナレッジ集約のソリューションを開発しました。<br> 本記事では、AWS サポート問い合わせ内容の自動収集、AI要約、ServiceNow（※2）への連携を実現したアーキテクチャについて解説します。<br> ※1：リンク先の資料内におけるJALインフォテックは2025年4月、JALデジタルに社名変更しています。<br> ※2：JALグループではITSMツールとしてServiceNowを利用しています。</p> \n<h2>導入背景</h2> \n<p>現在JALグループで利用しているAWSアカウント数は数百アカウントあり、エンタープライズサポートを活用して24時間365日の運用を実現しています。しかし、利用していく中でいくつかの課題が発生しました。</p> \n<ul> \n <li>アカウントの制約<br> 各アカウントから行った問い合わせ内容は、そのアカウントでしか閲覧もできません。そのため、複数のAWSアカウントでのサポート問い合わせ内容が分散することになり、組織全体での知見共有が困難となっていました。また、私たちのチームに「○○という内容で過去に問い合わせしているアカウントはいないか」と質問があっても、一元管理できていないため探すのが困難でした。 </li> \n <li>ナレッジ共有の壁<br> 問い合わせした内容をドキュメント化して共有する場合、CIEL/SのAWSアカウント全体で平均60件/月の問い合わせが発生しており、それらを手動でナレッジとして作成することはコストがかかりすぎてしまいます。また問い合わせ履歴が多くなってしまったサポートケースをそのまま転記するだけでは、読み手の負担も大きいためある程度要約をする必要がありますが、要約作成もナレッジ化のハードルとなっていました。 </li> \n <li>AWS サポートケース保管期限の制約<br> 解決から２年経過した問い合わせはAWSコンソール上から削除されるため、それ以上過去に遡って探すことができませんでした。 </li> \n</ul> \n<h2>ソリューション概要</h2> \n<p>上記課題を解決するために、自動的にAWS サポートケース の集約と Amazon Bedrock を活用した問い合わせ内容の要約作成を行うソリューションの開発を行いました。開発したソリューションは、2種類のAWSアカウントと、3つの主要なコンポーネントで構成されています。</p> \n<h3>AWSアカウントの種類</h3> \n<ol> \n <li>集約実行アカウント<br> 問い合わせ内容を集約し、ServiceNowに連携するAWSアカウント </li> \n <li>集約対象アカウント<br> 問い合わせを集約させたいAWSアカウント </li> \n</ol> \n<h3>コンポーネント</h3> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/08/29/jaldx-solutions-awssupport-bedrock1.png\" alt=\"コンポーネント\"></p> \n<ol> \n <li>既存の AWS サポートケース の集約（集約実行アカウント） \n  <ul> \n   <li>本ソリューション導入前に解決済みとなっている AWS サポートケース を集約させるための処理</li> \n   <li>Amazon Bedrockを利用して問い合わせ内容の要約を作成</li> \n  </ul> </li> \n <li>新規の AWS サポートケース の集約（集約実行アカウント） \n  <ul> \n   <li>本ソリューション導入後に解決済みとなった AWS サポートケース を自動で集約させるための処理</li> \n   <li>Amazon Bedrockを利用して問い合わせ内容の要約を作成</li> \n   <li>集約した問い合わせをServiceNowに連携する処理</li> \n  </ul> </li> \n <li>AWS サポートケース の ResolveCase を検知（集約対象アカウント） \n  <ul> \n   <li>集約対象AWSアカウントで解決済みとなった AWS サポートケース を集約実行アカウントに連携する処理</li> \n   <li>AWS Cloudformation StackSets を利用して複数AWSアカウントに Amazon EventBridge Rule を展開</li> \n  </ul> </li> \n <li>AWS サポートケースの検索と表示（ServiceNow） \n  <ul> \n   <li>集約実行アカウントから連携された問い合わせの表示</li> \n   <li>AWSサポートケースの内容検索</li> \n  </ul> </li> \n</ol> \n<h3>アーキテクチャ詳細</h3> \n<p>既存の AWS サポートケース の集約の処理については、一度のみの処理となるため、メインとなる新規の AWS サポートケース の集約について詳細を解説します。</p> \n<p>Step 1: サポートケースが解決したイベント検知（集約対象AWSアカウント）</p> \n<ul> \n <li>集約実行アカウントの Event Bus をターゲットとした Amazon EventBrige Rule を作成します</li> \n <li>AWS サポートの解決処理をトリガーとして、Amazon EventBridge Ruleのイベントパターンに定義します</li> \n</ul> \n<pre>\n\t<code>\n{\n  \"detail-type\": [\"Support Case Update\"],\n  \"source\": [\"aws.support\"],\n  \"detail\": {\n    \"communication-id\": [\"\"],\n    \"event-name\": [\"ResolveCase\"]\n  }\n}\n\t</code>\n</pre> \n<p>Step 2: Step 1 の検知を元にLambdaを実行（集約実行AWSアカウント）</p> \n<ul> \n <li>集約対象AWSアカウントに対して、AWS Support API (<a href=\"https://docs.aws.amazon.com/ja_jp/awssupport/latest/APIReference/API_DescribeCases.html\" target=\"brank\" rel=\"noopener\">DescribeCases</a>、<a href=\"https://docs.aws.amazon.com/ja_jp/awssupport/latest/APIReference/API_DescribeSeverityLevels.html\" target=\"brank\" rel=\"noopener\">DescribeSeverityLevels</a>、<a href=\"https://docs.aws.amazon.com/ja_jp/awssupport/latest/APIReference/API_DescribeServices.html\" target=\"brank\" rel=\"noopener\">DescribeServices</a>、<a href=\"https://docs.aws.amazon.com/ja_jp/awssupport/latest/APIReference/API_DescribeCommunications.html\" target=\"brank\" rel=\"noopener\">DescribeCommunications</a>)を実行してサポートケース情報を取得</li> \n <li>Amazon Bedrock API (<a href=\"https://docs.aws.amazon.com/ja_jp/bedrock/latest/APIReference/API_runtime_Converse.html\" target=\"brank\" rel=\"noopener\">Converse</a>) を実行し サポートケース会話情報を要約</li> \n <li>Amazon DynamoDB に登録</li> \n</ul> \n<p>Step 3: ServiceNow連携（集約実行AWSアカウント）</p> \n<ul> \n <li>DynamoDB Stream から AWS Lambda 関数を実行 \n  <ul> \n   <li>ServiceNow への認証処理</li> \n   <li>ServiceNow への記事の登録処理の実行</li> \n  </ul> </li> \n</ul> \n<p>①AWS サポートケースとServiceNow上のナレッジとのマッピング<br> <img src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/08/29/jaldx-solutions-awssupport-bedrock3.png\" alt=\"AWS サポートケースとServiceNow上のナレッジとのマッピング\"></p> \n<p>②ServiceNow上でナレッジ検索する際イメージ<br> <img src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/08/29/jaldx-solutions-awssupport-bedrock2.png\" alt=\"ServiceNow上でナレッジ検索する際イメージ\"></p> \n<h2>実装ポイント</h2> \n<ul> \n <li>Amazon EventBridgeのリージョン制約対応<br> AWS サポートは us-east-1 リージョンのグローバルリソースであるため、EventBridge Rule の配置および Lambda 関数のデプロイも us-east-1 にまとめることが推奨されます。 </li> \n <li>セキュリティ権限の最小化<br> 各AWSアカウントに必要な IAMロール・ポリシーは最小権限の原則に従い、AWS サポートケースの読み取り権限や EventBridge Rule の作成権限だけに限定することで安全性を確保してください。 </li> \n <li>システムプロンプトの設計<br> 読み手が短時間で問題の本質と解決策を把握できるよう、要約生成のためのプロンプトは、以下のポイントを押さえて設計しています。<p></p> \n  <ul> \n   <li>ユーザーが直面した問題、サポートの具体的な解決策、成功のための考慮事項を明確に区別して要約させる</li> \n   <li>日本語で簡潔に300文字以内に収める文字数制限を設定し、不要な情報を排除</li> \n   <li>「問い合わせ内容」「解決策」「考慮事項」という出力フォーマットを厳格に指定し、一貫性のある要約を実現</li> \n  </ul> </li> \n <li>ナレッジ格納先にServiceNowを選定 \n  <ul> \n   <li>本ソリューション実装前から、プラットフォームに関するナレッジを ServiceNow 上に乗せていた</li> \n   <li>標準となるナレッジの型があり、UI を一から作成する必要が無い</li> \n   <li>検索機能も ServiceNow 標準のものを利用できる(AIを用いた検索等は今後実装予定)</li> \n  </ul> </li> \n <p> ※AWS Support APIの利用条件<br> AWS Support APIの利用にはビジネスサポート以上のサポートプラン（ビジネス、エンタープライズ On-Ramp、エンタープライズ）が必要です。JALグループではエンタープライズサポートを利用しているため、本ソリューションで必要となるAWS Support APIの全機能を活用することができます。 </p>\n</ul> \n<h2>導入効果</h2> \n<p>本ソリューションの導入により、以下の効果を実現しました。</p> \n<ol> \n <li>ナレッジ共有の効率化<br> 複数アカウントの問い合わせ内容を一元管理することで、組織全体の知見を活用できるようになりました。またAI要約を入れることで、すべてのやり取りを読む前に自分たちが探している情報かどうか判断することができるようになりました。 </li> \n <li>運用工数の削減<br> 手動でのドキュメントや要約作成が不要になることで、ナレッジ作成に伴う運用コストを大幅に削減させることができました。また ServiceNow への自動連携により転記作業を削減した上で、解決済みになった問い合わせをリアルタイムでナレッジ化することが可能になりました。 </li> \n <li>問題解決の迅速化<br> 一元管理により、各アカウントの担当者が組織全体の知見を活用して、調べたい情報や類似事例を直接検索-閲覧できるようになりました。これにより、プラットフォームチームやAWSサポートに問い合わせて回答を待つ時間を省略し、素早い問題解決が可能になりました。 </li> \n</ol> \n<h2>まとめ</h2> \n<p>AWS Support APIを利用した問い合わせ内容の取得と、Amazon Bedrock を活用した問い合わせ内容の要約作成を組み合わせることで、組織全体のナレッジマネジメントを大幅に改善することができました。AWS Lambda、 Amazon EventBridge、Amazon DynamoDB などAWSのマネージドサービスを最大限に活用、AWS利用料を最小限に抑えるアーキテクチャを実現しました。<br> 今後は、要約精度の向上や、より高度な分析機能の追加を検討しており、継続的な改善を進めていく予定です。</p> \n<hr> \n<h2>著者略歴</h2> \n<div class=\"blog-author-box\"> \n <div class=\"blog-author-image\"> \n  <img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/09/19/jaldx-solutions-awssupport-bedrock_writer1.png\" alt=\"著者\" width=\"195\" height=\"197\"> \n </div> \n <p> <strong><a href=\"https://www.jaldx.co.jp/\">JALデジタル株式会社</a></strong><br> <strong>システムマネジメント本部ハイブリッドクラウド基盤部クラウド基盤運営グループ</strong><br> <strong>梅本征宏</strong><br> 2019年入社　旅客系システムの開発・維持管理業務を担当。<br> 2022年に現部署に異動して以降、Platform Engineeringを推進。 </p>\n</div> \n<div class=\"blog-author-box\"> \n <div class=\"blog-author-image\"> \n  <img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/09/19/jaldx-solutions-awssupport-bedrock_writer2.png\" alt=\"著者\" width=\"195\" height=\"197\"> \n </div> \n <p> <strong><a href=\"https://www.jaldx.co.jp/\">JALデジタル株式会社</a></strong><br> <strong>システムマネジメント本部ハイブリッドクラウド基盤部クラウド基盤運営グループ</strong><br> <strong>北修哉</strong><br> 2022年入社　顧客系システムの開発を担当。<br> 2024年に現部署に異動し、プラットフォームチームの運用高度化を推進。 </p>\n</div>"
  },
  {
    "title": "AWS PrivateLink を使用したセキュアな SAP HANA Cloud 接続",
    "date": "2025-10-09T09:38:04.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/secure-sap-hanacloud-connectivity-using-aws-privatelink/",
    "content": "<h2><strong>はじめに</strong></h2> \n<p>データドリブンエンタープライズの環境では、組織は 2 つの重要な要件を満たすデータベースソリューションを必要としています。1 つは、トランザクション処理と分析処理の両方のワークロードを扱える高性能性、もう 1 つはセキュリティとコンプライアンス要件への適合です。AWS 上で運用される <a href=\"https://www.sap.com/sea/products/data-cloud/hana.html\">SAP HANA Cloud</a> は、<a href=\"https://www.sap.com/products/technology-platform.html\">SAP Business Technology Platform（ SAP BTP ）</a>のサービスの一つであり、フルマネージド型のクラウドネイティブな Database-as-a-Service として、これらの要件に応えます。</p> \n<p>SAP HANA Cloud は主に 2 つの用途で活用されています。1つは、ERP、CRM、HR、ロジシティックスなどの基幹システムを単一の高速プラットフォームで支えること。もう 1 つは、高度な分析とデータアプリケーションを通じて、実践的なビジネスイノベーションを推進・支援することです。また、SAP HANA Cloud は、SAP Analytics Cloud、SAP Datasphere、SAP Cloud Application Programming Model（CAP）で開発されたアプリケーションなどの、様々な SAP BTP サービスの基盤でもあります。</p> \n<p>このブログでは、AWS PrivateLink を通じて SAP HANA Cloud のセキュリティと接続性を強化することにフォーカスし、高性能と信頼性を維持しながらプライベートで安全なデータベースアクセスを必要とする組織の重要なニーズに対応します。</p> \n<h2><strong>AWS が SAP HANA Cloud の稼働基盤として選ばれた理由</strong></h2> \n<p>SAP HANA Cloud は&nbsp;<a href=\"https://news.sap.com/2023/11/sap-hana-cloud-now-supports-aws-graviton/\">AWS Graviton プロセッサーによって対応しており、分析ワークロードで計算性能が最大 30% 向上しを提供し、計算コストを 15% 削減し、同等の EC2 インスタンスと比較して最大 60% 消費エネルギーを抑えることができます</a>。AWS Graviton ベースのインスタンスに移行することで、SAP は SAP HANA Cloud ワークロードの計算カーボンフットプリントを約 45% 削減できると見込んでおり、炭素排出量削減を支援する Amazon の The Climate Pledge の署名企業としての取り組みを支持します。SAP は将来的に AWS Graviton の使用を拡大し、これらの性能向上、コスト削減、エネルギー効率を継続的に活用する計画です。したがって、AWS 上の SAP HANA Cloud を使用するお客様は、性能向上のメリットを享受しながら、カーボンフットプリントを削減も実現できます。</p> \n<h2><strong>AWS 上の SAP HANA Cloud への接続</strong></h2> \n<p>SAP HANA Cloud に接続する際、オンプレミスまたは他のクラウド環境にあるクライアントアプリケーションやユーザーは、インターネットアクセス可能なエンドポイントを通じてパブリック API を使用してデータベースにセキュアにアクセスできます。</p> \n<p style=\"text-align: center\"><a href=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_01.png\"><img loading=\"lazy\" class=\"size-full wp-image-8523 aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_01.png\" alt=\"図1：デフォルトのパブリックエンドポイント経由でのSAP HANA Cloudへの接続\" width=\"529\" height=\"243\"></a>図1：デフォルトのパブリックエンドポイント経由でのSAP HANA Cloudへの接続</p> \n<p>金融サービス、ヘルスケア、政府機関などの規制産業のお客様で、HIPAA、EU/US Privacy Shield、PCI DSS などの規制により、パブリックエンドポイントの使用が制限される場合があります。この場合、SAP HANA Cloud と AWS PrivateLink を組み合わせることをお勧めします。これにより、AWS の安全なネットワークインフラストラクチャを活用しながら、データベースとアプリケーション間の安全かつプライベートな通信を実現できます。また、プライベートIPアドレス範囲（RFC 1918）を使用することで、サービスへの攻撃リスクが低減できます。</p> \n<p>このブログでは、AWS PrivateLink を使用したプライベート接続オプションを活用して、SAP HANA Cloud のデータ転送時のセキュリティを強化する方法について解説します。PrivateLink は、AWS 環境と SAP HANA Cloud 間の安全でプライベートなネットワーク接続を確立でき、パブリックインターネットへの通信を回避し、不正アクセスのリスクを抑制することができます。</p> \n<h2>AWS PrivateLink とは</h2> \n<p><a href=\"https://aws.amazon.com/jp/privatelink/\" target=\"_blank\" rel=\"noopener\">AWS PrivateLink</a> を使うことにで、AWSサービス（ネットワーク、コンピューティング、サーバーレスアプリケーション、AI など）と SAP BTP サービス間の通信をインターネット経由せず、プライベート接続を実現できます。また、AWS PrivateLink を使用して、Direct Connect または VPN 経由で Amazon Virtual Private Cloud（VPC）に接続されたオンプレミスネットワーク間の安全でプライベートな接続を提供することもでき、パブリックネットワークやIPアドレスを完全に回避できます。</p> \n<p>AWS PrivateLink により、異なるアカウントやVPC間でのサービス接続が簡単になり、ネットワークアーキテクチャを大幅に簡素化します。VPC 内のプライベート IP アドレスを持つ Elastic Network Interface であるインターフェースエンドポイント経由で、AWS サービス、他の AWS アカウントで稼働しているサービス（エンドポイントサービス）、AWS Marketplace パートナーサービスに接続できます。</p> \n<p>インターフェースエンドポイントは、VPC のサブネット内の Elastic Network Interface と IP アドレスを使用して、VPC 内に直接作成されます。プロバイダーとコンシューマーは、IPアドレスの重複を避けるためにネットワークセグメントや CIDR ブロックを調整する必要がありません。VPC ピアリングや AWS Transit Gateway 経由の接続は通信に必要ありません。セキュリティグループを関連付け、AWS サービスのインターフェースエンドポイントにエンドポイントポリシーを設定することで、指定されたサービスへのアクセスを制御できます。AWS PrivateLink を使用すると、<a href=\"https://docs.aws.amazon.com/ja_jp/vpc/latest/privatelink/privatelink-access-aws-services.html\" target=\"_blank\" rel=\"noopener\">AWS サービス</a>や他の VPC が提供する他のサービスに、AWS ネットワーク内のプライベート接続を通じて安全にアクセスできます。すべてのネットワークトラフィックはグローバル AWS バックボーン上に留まり、パブリックインターネットを経由することはありません。</p> \n<p style=\"text-align: center\"><a href=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_02.png\"><img loading=\"lazy\" class=\"size-full wp-image-8524 aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_02.png\" alt=\"図2：AWS PrivateLink経由でのSAP HANA Cloudへの接続\" width=\"771\" height=\"226\"></a>図2：AWS PrivateLink 経由での SAP HANA Cloud への接続</p> \n<p>SAP HANA Cloudと AWS PrivateLink との接続するメリットをより理解するために、実際のシナリオでそのメリットを示すいくつかの実用的なユースケースを探ってみましょう。</p> \n<h2>SAP HANA Cloud と AWS PrivateLink を使うユースケース</h2> \n<p>データセキュリティが重要なビジネス環境において、AWS PrivateLink の実装は、データ転送中の機密情報を保護するために不可欠です。AWS のインフラストラクチャが提供するプライベート IP エンドポイントサービスは、重要なセキュリティレイヤーとして機能し、ビジネスへ重大な影響をもたらす可能性のあるセキュリティ侵害を防ぐのに役立ちます。この統合は、現代のクラウドアーキテクチャの複雑な要件に対応するエンタープライズクラスのセキュリティソリューションを提供することに対する AWS のコミットメントを示しています。</p> \n<h3>ユースケース 1 – SAP HANA Cloud 管理アクセスセキュリティ</h3> \n<p>SAP HANA Cloud PrivateLink を実装する重要なユースケースの 1 つは、安全なデータベースアクセスへの対応です。企業の環境では、オフィスで働くデータベース管理者と開発者は、テーブル管理、メンテナンス、開発タスクなどの重要タスクを実行するために SAP HANA Cloud への定期的なアクセスが必要です。これらの技術者は、一般ユーザーとは異なり、タスクに必要な広範なデータベース権限を付与されているため、接続セキュリティが特に重要になります。</p> \n<p>図3に示すように、<strong>AWS PrivateLinkを使用した SAP HANA Cloud </strong>は、組織が機密データの転送をプライベートネットワークでのみに制限できるようにする完璧なソリューションを提供します。データベース操作へのプライベートアクセスは、運用効率を維持しながらパブリック IP を使わず、厳格なアクセス制御を通じて組織のセキュリティを強化します。</p> \n<p style=\"text-align: center\"><a href=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_03.png\"><img loading=\"lazy\" class=\"size-full wp-image-8526 aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_03.png\" alt=\"図3：エンタープライズグレードのSAP HANA Cloud管理アクセスセキュリティ\" width=\"863\" height=\"273\"></a>図3：SAP HANA Cloud 管理アクセスセキュリティ</p> \n<h3>ユースケース 2 – セキュアなデータプラットフォーム統合：SAP HANA Cloud と AWS サービス</h3> \n<p>SAP HANA Cloud と AWS PrivateLink の重要なユースケースは、AWS 上でデータプラットフォームを構築し、SAP HANA Cloud データを分析エコシステムに統合するケースです。AWS データプラットフォーム内で SAP HANA Cloud データにアクセスするには、主に2つの方法があります。AWS Glue ETL ジョブを使用してデータを抽出しAmazon S3 にロードする方法、またはフェデレーションクエリに Amazon Athena SAP HANA コネクタを使用する方法です。両方のアプローチには、AWS サービスと SAP HANA Cloud 間の安全で信頼性の高い接続が必要です。</p> \n<p>これらのデータ統合パターンを実装する際、機密ビジネスデータがシステム間で転送されるため、セキュリティが重要になります。図4は、AWS PrivateLinkが必要なセキュアな接続レイヤーを提供することを示しています。AWS サービス（AWS Glue や Amazon Athena など）と SAP HANA Cloud 間のすべてのデータ転送とクエリがプライベートネットワークチャネルを介して行われ、パブリックインターネットへの通信を介さず、エンタープライズデータ統合シナリオの厳格なセキュリティ要件を満たします。</p> \n<p style=\"text-align: center\"><a href=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_04.png\"><img loading=\"lazy\" class=\"size-full wp-image-8527 aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_04.png\" alt=\"図4：セキュアなデータプラットフォーム統合：SAP HANA CloudとAWSサービス\" width=\"904\" height=\"396\"></a>図4：セキュアなデータプラットフォーム統合：SAP HANA Cloud と AWS サービス</p> \n<h2>AWS PrivateLink を使用した SAP HANA Cloud の設定方法</h2> \n<p>ユースケース 1 のエンタープライズグレードの SAP HANA Cloud アクセスの設定手順を説明します。このブログでは、設定について <a href=\"https://help.sap.com/docs/hana-cloud/sap-hana-cloud-administration-guide/sap-hana-cloud-private-link\" target=\"_blank\" rel=\"noopener\">SAP HANA Cloud 管理ガイド</a>を参照しました。この設定は SAP BTP 有料ティアアカウントで利用可能です。このブログ執筆時点では、データレイクインスタンス用の SAP HANA Cloud PrivateLink はAWS でのみ利用可能であり、<a href=\"https://help.sap.com/docs/hana-cloud/sap-hana-cloud-administration-guide/sap-hana-database-private-link-endpoint-service\" target=\"_blank\" rel=\"noopener\">SAP HANA Cloud PrivateLink ドキュメント</a>に記載されているように、リージョン内の接続のみをサポートしています。以下は設定手順の概要です。</p> \n<ol> \n <li>SAP HANA Cloud で AWS PrivateLink Endpoint ID を有効化</li> \n <li>AWS VPC で VPC エンドポイントを設定</li> \n <li>AWS VPC エンドポイントを HANA Cloud インスタンスの許可リストに追加</li> \n <li>Amazon Route53 でプライベートホストゾーンを設定</li> \n <li>VPC 内から HANA Cloud へのプライベートルーティングをテスト</li> \n <li>インバウンド DNS クエリ転送用のリゾルバーを設定（RISE またはオンプレミスネットワークでの使用例1でのみ必要）</li> \n</ol> \n<p>各ステップの詳細は以下の通りです。さらなるステップバイステップガイダンスについては、<a href=\"https://catalog.workshops.aws/genai-for-sap/en-US\">このワークショップ</a>のラボを参照してください。</p> \n<h3>1. SAP HANA Cloud で AWS PrivateLink Endpoint ID を有効化</h3> \n<p>SAP HANA Cloud の管理画面で、設定したい HANA Cloud インスタンスを選択し、<strong>View Configuration</strong>をクリックします。</p> \n<p style=\"text-align: center\"><a href=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_05.png\"><img loading=\"lazy\" class=\"size-full wp-image-8529 aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_05.png\" alt=\"図5：SAP HANA Cloud - 設定を表示\" width=\"698\" height=\"267\"></a>図5：SAP HANA Cloud – 設定を表示</p> \n<p>接続タブで、AWS PrivateLink Endpoint ID を有効にするボタンをオンにします。これにより、AWS VPC への接続を設定するための PrivateLink Endpoint ID を取得できます。<strong>許可する接続</strong>で、「この BTP リージョンの Cloud Foundry からの IP アドレスのみを許可」または「特定の IP アドレスと IP 範囲を許可（BTP の Cloud Foundry に加えて）」を選択して、すべてのトラフィックがプライベート接続を通過するように制御します。</p> \n<p style=\"text-align: center\"><a href=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_06.png\"><img loading=\"lazy\" class=\"size-full wp-image-8531 aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_06.png\" alt=\"図6：SAP HANA Cloud - 接続\" width=\"700\" height=\"478\"></a>図6：SAP HANA Cloud – 接続</p> \n<h3>2. AWS VPC で VPCエンドポイントを設定</h3> \n<p>このステップでは、AWS VPC で VPC エンドポイントとセキュリティグループを設定して、Amazon VPC からこのエンドポイント経由で HANA Cloud へのアクセスを許可します。ご自身のAWS アカウントに VPC が設定されていない場合は、<a href=\"https://docs.aws.amazon.com/ja_jp/vpc/latest/userguide/create-vpc.html\" target=\"_blank\" rel=\"noopener\">Amazon VPC ドキュメント</a>を参照して VPC を作成してください。SAP HANA Cloud インスタンスの設定タブで <strong>AWS PrivateLink Endpoint Service ID </strong>をコピーします。</p> \n<p><img class=\"aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_07.png\"></p> \n<p style=\"text-align: center\">図7: SAP HANA Cloud – PrivateLink Endpoint Service IDs</p> \n<p>AWS コンソールで、Amazon VPC サービスにアクセスし、<a href=\"https://docs.aws.amazon.com/ja_jp/vpc/latest/privatelink/privatelink-access-saas.html\" target=\"_blank\" rel=\"noopener\">パートナーサービス用の VPC インターフェースエンドポイント</a>を作成します。エンドポイント作成画面で、エンドポイントの名前を入力し、タイプに「PrivateLink Ready partner services」を選択します。サービス設定で、HANA Cloud インスタンスの <strong>AWS PrivateLink Endpoint Service ID </strong>をサービス名ボックスに入力します。次に、サービス確認ボタンをクリックします。</p> \n<p><img class=\"aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_08.png\"></p> \n<p style=\"text-align: center\">図 8: Amazon VPC – VPC エンドポイント作成 (1)</p> \n<p>「サービス名が確認されました」という成功メッセージが表示されたら、ネットワーク設定を選択できるようになります。ネットワーク設定で、エンドポイントを作成したい VPC とアベイラビリティーゾーン、サブネットを選択します。SAP HANA Cloud インスタンスが複数の AZ で利用可能な場合、VPC で複数の AZ とサブネットを選択できます。</p> \n<p><img class=\"aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_09.png\"></p> \n<p style=\"text-align: center\">図 9: Amazon VPC – VPC エンドポイント作成 (2)</p> \n<p>このエンドポイントに、 https トラフィックを許可するセキュリティグループを割り当ててください。このブログでは、同 VPC 内のIP アドレス CIDR からの https トラフィックを許可するインバウンドルールを持つ https-from-sap-vpc という名前のセキュリティグループを作成しました。</p> \n<p><img class=\"aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_10_01.png\"></p> \n<p><img class=\"aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_10_02.png\"></p> \n<p style=\"text-align: center\">図 10: Amazon VPC – VPC エンドポイント作成 (3)</p> \n<p>VPCエンドポイントが作成され、ステータスが「使用可能」になったら、エンドポイントの詳細ページからエンドポイント ID をコピーしてください。この ID は、次のステップで HANA Cloud の設定に使用します。DNS ネームをコピーして、後で Route 53 での DNS 設定時に使用します。プライベート IPv4 アドレスをメモしておいてください。これは、プライベートルーティングをテストする最後のステップで確認することができます。</p> \n<h3><img src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_11.png\"></h3> \n<p style=\"text-align: center\">図 11: Amazon VPC – VPC エンドポイントの確認</p> \n<h3>3. Amazon VPC エンドポイントを HANA Cloud インスタンスの許可リストに追加</h3> \n<p>HANA Cloud 管理画面に戻り、HANA Cloud インスタンスの設定を開きます。接続設定画面で、作成した VPC エンドポイント ID を許可リストに追加します。これにより、先ほどの VPC から作成された VPC エンドポイントで HANA Cloud PrivateLink エンドポイントサービスに接続できるようになります。</p> \n<p><img class=\"aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_12.png\"></p> \n<p style=\"text-align: center\">Figure 12: SAP HANA Cloud – VPC エンドポイント ID 許可</p> \n<h3>4. Amazon Route53 でプライベートホストゾーンを設定</h3> \n<p>このステップでは、VPC 用の Amazon Route 53 のプライベートホストゾーンを設定し、HANA Cloud インスタンスへのトラフィックを VPC エンドポイントに向ける DNS レコードを作成します。SAP HANA Cloud 接続の詳細から、SQL エンドポイントアドレスとランドスケープアドレスを確認します。Route 53 DNS 設定と接続テストで使用するため、これらのアドレスをメモしてください。</p> \n<p><img class=\"aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_13.png\"></p> \n<p style=\"text-align: center\">図 13: SAP HANA Cloud – 接続情報確認</p> \n<p>Amazon Route 53 ホストゾーン設定で、以下のように値を設定します。<br> – ドメイン名として HANA Cloud ランドスケープ名を入力<br> – タイプとしてプライベートホストゾーンを選択<br> – ホストゾーンを VPC に関連付けるために VPC ID を選択<br> 次に、ホストゾーンの作成ボタンをクリックします。</p> \n<p><img class=\"aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_14.png\"></p> \n<p style=\"text-align: center\">図 14: Amazon Route 53 – ホストゾーン作成</p> \n<p>作成されたホストゾーン画面で、すべての HANA Cloud へのトラフィックを VPC エンドポイントにルーティングする新しい DNS レコードを作成します。</p> \n<p><img class=\"aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_15.png\"></p> \n<p style=\"text-align: center\">図 15: Amazon Route 53 – DNS レコード作成</p> \n<h3>5. VPC 内から HANA Cloud へのプライベートルーティングをテスト</h3> \n<p>設定完了後、VPC 内の EC2 インスタンスから dig または nslookup コマンドを実行して、HANA Cloud インスタンスへのトラフィックが VPC エンドポイントのプライベート IP アドレスに向かっていることを確認します。HANA Cloud エンドポイント URL でこれらのコマンドを実行すると、VPC エンドポイントのプライベート IP アドレスが応答されます。</p> \n<p><img class=\"aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_16.png\"></p> \n<p style=\"text-align: center\">図 16: コマンドでプライベートルーティングを確認</p> \n<p>hdbsql コマンドで HANA Cloud エンドポイントへのデータベース接続を確認します。</p> \n<p><img class=\"aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_17.png\"></p> \n<p style=\"text-align: center\">図 17: hdbsql コマンドでデータベース接続を確認</p> \n<h3>6. インバウンド DNS クエリ転送用のリゾルバーを設定（RISE またはオンプレミスネットワークでのユースケース 1 でのみ必要）</h3> \n<p>Route 53 プライベートホストゾーンは AWS アカウントの VPC 内に設定されているため、この VPC からのトラフィックにのみ影響します。ユースケース 1 で、RISE またはオンプレミスネットワークから HANA Cloud へのトラフィックも VPC エンドポイントを通過させたい場合は、<a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/resolver-forwarding-inbound-queries.html\">Route 53 インバウンドリゾルバー</a>を使用し、ネットワークからこのリゾルバーに DNS を転送する必要があります。</p> \n<p>詳細な手順は <a href=\"https://docs.aws.amazon.com/ja_jp/Route53/latest/DeveloperGuide/resolver-forwarding-inbound-queries-configuring.html\" target=\"_blank\" rel=\"noopener\">Route 53 ドキュメント</a> を参照してください。下記の画面は、VPC 内に作成されたインバウンドエンドポイントのサンプルで、2 つのサブネットに 2 つのプライベートIPアドレスが割り当てられています。これらの IP アドレスは、RISE やオンプレミスネットワークでの DNS 設定に使用することができます。</p> \n<p><img class=\"aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_18.png\"></p> \n<p style=\"text-align: center\">図 18: Amazon Route 53 – インバウンドリゾルバー</p> \n<h2>高可用性</h2> \n<p>AWS PrivateLink の高可用性アーキテクチャは、複数のアベイラビリティーゾーン（ AZ ）を通じて堅牢で回復力のある接続を提供し、重要なビジネス運用のための継続的なサービス可用性を確保します。図 19 は、複数の AZ にまたがるエンドポイントネットワークインターフェースで AWS PrivateLink を実装することで、自動フェイルオーバー機能を実現し、ネットワークアーキテクチャにおける単一障害点を排除できることを示しています。この分散設計により、ある AZ が使用不可能になった場合でも、トラフィックは自動的に正常なエンドポイントにルーティングされ、アプリケーションやサービスへのシームレスな接続が維持されます。</p> \n<p>これにより、アプリケーションの信頼性が向上し、ダウンタイムのリスクが軽減され、パフォーマンスが安定するとともに、プライベート接続のセキュリティ上の利点も得られます。さらに、AWS PrivateLink と Amazon Route 53 DNS サービスとの統合により、インテリジェントなルーティングとヘルスチェックが可能となり、ソリューション全体の可用性と耐障害性が向上します。この包括的な高可用性の実装により、セキュアでプライベートなネットワーク通信を維持しながら、厳格なビジネス継続性要件を満たすことができます。</p> \n<p>以下のアーキテクチャは、Network Load Balancer を通じて 2 つの AZ に跨って HA がどのように機能するかを説明しています。</p> \n<p style=\"text-align: center\"><a href=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_19.png\"><img loading=\"lazy\" class=\"size-full wp-image-8548 aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_19.png\" alt=\"図19：高可用性を備えたAWS PrivateLink\" width=\"920\" height=\"385\"></a>図19：高可用性を備えた AWS PrivateLink</p> \n<h2>価格例</h2> \n<p>このブログの公開時点では、SAP HANA Cloud で AWS PrivateLink を有効にする際、SAP BTP で追加料金は発生しません。SAP が Network Load Balancer の実装と有効化を実施します。ご自身の AWS アカウントで作成されたリソースに対してのみ課金されます。</p> \n<p>例えば、高可用性ありとなしでのお客様の AWS アカウントでの AWS PrivateLink のコストを比較してみましょう。両方のオプションは、この<a href=\"https://calculator.aws/#/estimate?id=675147ff211d0e3089cbdfa7dbba55d8c47980fe\" target=\"_blank\" rel=\"noopener\"> AWS 料金計算ツールリンク</a> にあります。</p> \n<p><img class=\"aligncenter\" src=\"https://d2908q01vomqb2.cloudfront.net/17ba0791499db908433b80f37c5fbc89b870084b/2025/07/27/figure_20-1.png\"></p> \n<p style=\"text-align: center\">図20: 料金の例</p> \n<h2>次のステップ</h2> \n<p>AWS PrivateLink の詳細については、AWS ドキュメント<a href=\"https://docs.aws.amazon.com/ja_jp/vpc/latest/privatelink/what-is-privatelink.html\" target=\"_blank\" rel=\"noopener\">「AWS PrivateLink とは？」</a>、<a href=\"https://docs.aws.amazon.com/ja_jp/vpc/latest/userguide/endpoint-services-overview.html\" target=\"_blank\" rel=\"noopener\">「AWS PrivateLink を使用して VPC をサービスに接続する」</a>、およびAWSホワイトペーパー<a href=\"https://docs.aws.amazon.com/ja_jp/whitepapers/latest/aws-vpc-connectivity-options/aws-privatelink.html\" target=\"_blank\" rel=\"noopener\">「AWS PrivateLink」</a>を参照してください。</p> \n<p>同様に、詳細については SAP HANA Cloud <a href=\"https://help.sap.com/docs/hana-cloud?locale=en-US&amp;state=PRODUCTION&amp;version=hanacloud\" target=\"_blank\" rel=\"noopener\">オンラインドキュメント</a> と&nbsp;<a href=\"https://help.sap.com/docs/hana-cloud-database/sap-hana-cloud-sap-hana-database-administration-guide/sap-hana-cloud-sap-hana-database-administration-guide\" target=\"_blank\" rel=\"noopener\">SAP HANA Cloud データベース管理ガイド</a> を参照してください。</p> \n<p>AWS アカウントチームと AWS サポートチャネルに加えて、AWS コミュニティ向けの Q&amp;A 体験である <a href=\"https://repost.aws/\">re:Post</a> を開始しました。AWS for SAP ソリューションアーキテクチャチームは、お客様とパートナーを支援するために回答できる議論と質問について、AWS for SAP トピックを定期的に監視しています。質問がサポート関連でない場合は、re:Post での議論に参加し、コミュニティの知識ベースに貢献することを検討してください。</p> \n<h2>クレジット</h2> \n<p>このブログへの貢献に対して、Derek Ewell、Ferry Mulyadi、Diego Lombardini、Eneko Bilbaoに感謝いたします。</p> \n<p>翻訳は Specialist SA トゥアンが担当しました。原文は<a href=\"https://aws.amazon.com/blogs/awsforsap/secure-sap-hanacloud-connectivity-using-aws-privatelink/\" target=\"_blank\" rel=\"noopener\">こちら</a>です。</p>"
  },
  {
    "title": "AWS Weekly Roundup: Amazon Bedrock、AWS Outposts、Amazon ECS マネージドインスタンス、AWS ビルダー ID など (2025 年 10 月 6 日)",
    "date": "2025-10-09T09:17:49.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/aws-weekly-roundup-amazon-bedrock-aws-outposts-amazon-ecs-managed-instances-aws-builder-id-and-more-october-6-2025/",
    "content": "<p>9 月 29 日週、SWE-Bench によって世界最高のコーディングモデルと評価されている Anthropic の Claude Sonnet 4.5 が、<a href=\"https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/command-line.html\">Amazon Q コマンドラインインターフェイス (CLI)</a> と <a href=\"https://kiro.dev/\">Kiro</a> でご利用いただけるようになりました。このことに高揚感を覚えている理由は 2 つあります:</p> \n<p>まず、私は数週間前に世界中のお客様と 4 日間にわたって集中的に AI 支援開発ワークショップを開催し、<a href=\"https://aws.amazon.com/q/\">Amazon Q</a> CLI がデベロッパーの生産性をいかに向上させるかを実際に体験しました。ワークショップ中、お客様は Amazon Q CLI を使用して 1 日でアプリケーションに新しい特徴量を追加することができました。これは従来であれば少なくとも 2 週間はかかっていた作業です。Amazon Q CLI で Anthropic の Claude Sonnet 4.5 が使用できるようになることで、デベロッパーの生産性がさらに向上すると確信しています。</p> \n<p>2 つ目として、私は <a href=\"https://reinvent.awsevents.com/\">AWS re:Invent 2025</a> でのコードトークの準備を始めました。このコードトークでは、私と共同講演者が Kiro を使用してレガシーコードベースをモダナイズするライブコーディングを行います。Kiro で Anthropic の Claude Sonnet 4.5 を使用してライブデモを作成するのが待ちきれません。このデモや、クラウドと AI に関する 1,000 を超える他のセッションをご覧になりたい方は、12 月 1 日から 5 日までラスベガスで開催される <a href=\"https://reinvent.awsevents.com/\">AWS re:Invent 2025</a> にぜひご参加ください。</p> \n<p><strong><span style=\"text-decoration: underline\">9 月 29 日週のリリース</span></strong><br> 私が注目したリリースをいくつかご紹介します。</p> \n<ul> \n <li><a href=\"https://aws.amazon.com/blogs/aws/introducing-claude-sonnet-4-5-in-amazon-bedrock-anthropics-most-intelligent-model-best-for-coding-and-complex-agents/\">Amazon Bedrock で Claude Sonnet 4.5 が使用可能に</a> – コーディングと複雑なエージェントに最適な、Anthropic の最もインテリジェントなモデルが、Amazon Bedrock でご利用いただけるようになりました。Amazon Bedrock で Claude Sonnet 4.5 を利用することで、デベロッパーは、基盤モデル (FM) 用の統合 API を提供するだけでなく、セキュリティと最適化を実現するためのエンタープライズグレードのツールによってデータを完全に制御できるようにする、フルマネージドサービスにアクセスできます。</li> \n <li><a href=\"https://aws.amazon.com/blogs/aws/announcing-aws-outposts-third-party-storage-integration-with-dell-and-hpe/\">AWS Outposts が Dell および HPE とのサードパーティーストレージ統合をサポート</a> – AWS Outposts のサードパーティーストレージ統合に、<a href=\"https://www.dell.com/en-us/shop/storage-servers-and-networking-for-business/sf/power-store\">Dell PowerStore</a> および <a href=\"https://www.hpe.com/us/en/storage/alletra.html\">HPE Alletra Storage MP B10000</a> システムが含まれるようになりました。これらは、<a href=\"https://aws.amazon.com/blogs/aws/announcing-aws-outposts-third-party-storage-integration-with-dell-and-hpe/#:~:text=NetApp%20on%2Dpremises%20enterprise%20storage%20arrays\">NetApp オンプレミスエンタープライズストレージアレイ</a>および <a href=\"https://aws.amazon.com/blogs/aws/announcing-aws-outposts-third-party-storage-integration-with-dell-and-hpe/#:~:text=Pure%20Storage%20FlashArray\">Pure Storage FlashArray</a> との既存の統合リストに加わりました。この統合には、主に 3 つの目的があります。1 つ目は、お客様が既存のストレージインフラストラクチャを維持しながら VMware ワークロードを AWS に移行するのをサポートすることです。2 つ目は、お客様が AWS サービスを利用しながらデータをオンプレミスに保持することで、厳格なデータレジデンシー要件を満たすのをサポートすることです。3 つ目として、この統合により、お客様は、AWS ツールを通じてサードパーティーストレージアレイとともに AWS Outposts を利用できます。</li> \n <li><a href=\"https://aws.amazon.com/blogs/aws/announcing-amazon-ecs-managed-instances-for-containerized-applications/\">Amazon ECS マネージドインスタンスが利用可能に</a> – コンテナ化されたアプリケーション向けの Amazon ECS マネージドインスタンスは、Amazon ECS 向けの新しいフルマネージドコンピューティングオプションであり、インフラストラクチャ管理のオーバーヘッドを排除しながら、Amazon EC2 の全機能を使用できるように設計されています。ECS マネージドインスタンスは、ワークロードを迅速に起動およびスケールするとともに、パフォーマンスを改善し、総保有コストを削減するのに役立ちます。</li> \n <li><a href=\"https://aws.amazon.com/about-aws/whats-new/2025/10/application-map-generally-available-amazon-cloudwatch/\">Amazon CloudWatch でアプリケーションマップの一般提供を開始</a> – Amazon CloudWatch は、設定とその関係に基づいてサービスを自動的に検出し、グループに整理することで、大規模な分散アプリケーションをモニタリングするのをサポートします。この新しいアプリケーションパフォーマンスモニタリング (APM) 機能を使用すると、分散アプリケーションのトラブルシューティング時に、どのアプリケーションと依存関係に重点を置くべきかを迅速に視覚化できます。</li> \n <li><a href=\"https://aws.amazon.com/about-aws/whats-new/2025/10/open-source-mcp-server-amazon-bedrock-agentcore/\">Amazon Bedrock AgentCore モデルコンテキストプロトコル (MCP) サーバーが使用可能に</a> – ランタイム、ゲートウェイ統合、ID 管理、エージェントメモリのサポートが組み込まれた AgentCore MCP サーバーは、Bedrock AgentCore と互換性のあるコンポーネントの作成を高速化するために特別に構築されています。AgentCore MCP サーバーは、ラピッドプロトタイピング、本番 AI ソリューション、またはエージェントインフラストラクチャのスケールに使用できます。</li> \n</ul> \n<p><span style=\"text-decoration: underline\"><strong>その他のアップデート<br> </strong></span>以下では、私が興味深いと思った他のニュースやブログ記事をいくつかご紹介します:</p> \n<ul> \n <li><a href=\"https://aws.amazon.com/about-aws/whats-new/2025/10/aws-builder-id-sign-in-google/\">AWS ビルダー ID が「Google でログイン」をサポート</a> –「Google でログイン」を使用して AWS ビルダー ID を作成できるようになりました。AWS ビルダー ID は、Kiro、AWS Builder Center、AWS トレーニングと認定、AWS re:Post、AWS スタートアップなどの AWS アプリケーションへのアクセスを提供する個人プロファイルです。</li> \n <li><a href=\"https://aws.amazon.com/about-aws/whats-new/2025/10/aws-api-mcp-server-v1-0-0-release/\">AWS API MCP サーバー v1.0.0 リリース</a> – AWS API MCP サーバーは、AI アシスタントと AWS サービスの間のブリッジとして機能し、構文的に正しい CLI コマンドを作成して実行することで、基盤モデルが自然言語を通じてあらゆる AWS API とインタラクションできるようにします。AWS API MCP サーバーはオープンソースであり、<a href=\"https://github.com/awslabs/mcp/tree/main/src/aws-api-mcp-server\">AWS ラボ GitHub リポジトリ</a>で現在入手可能です。</li> \n <li><a href=\"https://aws.amazon.com/about-aws/whats-new/2025/10/aws-knowledge-mcp-server-generally-available/\">AWS Knowledge MCP サーバーの一般提供を開始</a> – AWS Knowledge サーバーは、AI エージェントと MCP クライアントに、ドキュメント、ブログ記事、新機能のお知らせ、Well-Architected ベストプラクティスなどの信頼できる情報を LLM 互換形式で提供します。このリリースでは、AWS API と CloudFormation のリソースが利用できるリージョンに関する情報もサーバーに含まれます。</li> \n <li><a href=\"https://aws.amazon.com/about-aws/whats-new/2025/09/aws-transform-terraform-vmware-network-automation/\">AWS Transform で VMware ネットワークオートメーションのために Terraform が使用可能に</a> – AWS Transform は、VMware 環境からネットワークインフラストラクチャコードを自動的に生成するための追加オプションとして Terraform を提供するようになりました。このサービスは、ソースネットワーク定義を再使用可能な Terraform モジュールに変換し、現在の AWS CloudFormation と AWS Cloud Development Kit (CDK) のサポートを補完します。</li> \n</ul> \n<p><span style=\"text-decoration: underline\"><strong>近日開催予定の AWS イベント</strong></span><br> カレンダーを確認して、近日開催予定の AWS イベントにサインアップしましょう。</p> \n<ul> \n <li><a href=\"https://info.devpost.com/blog/aws-ai-agent-global-hackathon?trk=c4ea046f-18ad-4d23-a1ac-cdd1267f942c&amp;sc_channel=el\">AWS AI Agent Global Hackathon</a> – AWS の強力な生成 AI スタックを掘り下げて、目を見張るようなすばらしいソリューションを創り出すチャンスです。9 月 8 日から 10 月 20 日までの期間、AWS の AI サービススイートを使用して AI エージェントを作成し、45,000 USD を超える賞金と独占的な市場参入の機会の獲得に向けて競い合いましょう。</li> \n <li><a href=\"https://aws.amazon.com/startups/lp/aws-gen-ai-lofts?trk=c4ea046f-18ad-4d23-a1ac-cdd1267f942c&amp;sc_channel=el\">AWS Gen AI Loft</a> – 特別セッションで AWS の AI 製品とサービスについて学び、業界をリードするエキスパートと交流して、投資家や同業者との有益なネットワーキングの機会を得ることができます。最寄りの都市でご登録ください: <a href=\"https://aws.amazon.com/startups/lp/aws-gen-ai-loft-paris?trk=c4ea046f-18ad-4d23-a1ac-cdd1267f942c&amp;sc_channel=el\">パリ</a> (10 月 7 日～21 日)、<a href=\"https://aws.amazon.com/startups/lp/aws-gen-ai-loft-london?trk=c4ea046f-18ad-4d23-a1ac-cdd1267f942c&amp;sc_channel=el\">ロンドン</a> (10 月 13 日～21 日)、<a href=\"https://aws.amazon.com/startups/lp/aws-gen-ai-loft-tel-aviv?trk=c4ea046f-18ad-4d23-a1ac-cdd1267f942c&amp;sc_channel=el\">テルアビブ</a> (11 月 11 日～19 日)。</li> \n <li><a href=\"https://aws.amazon.com/events/community-day/?trk=c4ea046f-18ad-4d23-a1ac-cdd1267f942c&amp;sc_channel=el\">AWS Community Days</a> – 世界中の AWS ユーザーや業界リーダーによる技術的なディスカッション、ワークショップ、ハンズオンラボを特徴とする、コミュニティ主導のカンファレンスにぜひご参加ください: <a href=\"https://www.aws-community-day.de/\">ミュンヘン</a> (10 月 7 日)、<a href=\"https://awscommunity.eu/\">ブダペスト</a> (10 月 16 日)。</li> \n</ul> \n<p><a href=\"https://aws.amazon.com/events/explore-aws-events?trk=c4ea046f-18ad-4d23-a1ac-cdd1267f942c&amp;sc_channel=el\">今後開催されるすべての AWS イベント</a>と <a href=\"https://aws.amazon.com/startups/events?trk=c4ea046f-18ad-4d23-a1ac-cdd1267f942c&amp;sc_channel=el\">AWS スタートアップイベント</a>をご覧いただけます。</p> \n<p>10 月 6 日週のニュースは以上です。10 月 13 日週にお届けする次回の <a href=\"https://aws.amazon.com/blogs/aws/tag/week-in-review/?trk=7c8639c6-87c6-47d6-9bd0-a5812eecb848&amp;sc_channel=el\">Weekly Roundup</a> もお楽しみに!</p> \n<p>– <a href=\"https://www.linkedin.com/in/kprasadrao/\">Prasad</a></p> \n<p>原文は<a href=\"https://aws.amazon.com/jp/blogs/aws/aws-weekly-roundup-amazon-bedrock-aws-outposts-amazon-ecs-managed-instances-aws-builder-id-and-more-october-6-2025/\">こちら</a>です。</p>"
  },
  {
    "title": "コンテナ化されたアプリケーション用の Amazon ECS マネージドインスタンスの発表",
    "date": "2025-10-09T08:59:46.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/announcing-amazon-ecs-managed-instances-for-containerized-applications/",
    "content": "<p>9 月 30 日、Amazon ECS マネージドインスタンスを発表しました。これは <a href=\"https://aws.amazon.com/ecs/\">Amazon Elastic Container Service (Amazon ECS)</a> の新しいコンピューティングオプションです。開発者はインフラストラクチャ管理の責任を <a href=\"https://aws.amazon.com\">Amazon Web Services (AWS)</a> にオフロードしながら、<a href=\"https://aws.amazon.com/ec2\">Amazon Elastic Compute Cloud (Amazon EC2)</a> の全機能を使用できるようになります。この新しいサービスは、インフラストラクチャのオフロードによる運用のシンプルさと Amazon EC2 の柔軟性および制御を組み合わせたものです。つまり、お客様は総保有コスト (TCO) を削減し、AWS のベストプラクティスを維持しながら、イノベーションを推進するアプリケーションの構築に集中することができます。</p> \n<p>弊社では、コンテナ化されたワークロードを実行しているお客様から、サーバーレスのシンプルさとセルフマネージド EC2 インスタンスの柔軟性を組み合わせたいというご要望をいただいていました。サーバーレスオプションは優れた汎用ソリューションを提供しますが、アプリケーションによっては GPU アクセラレーション、特定の CPU アーキテクチャ、またはネットワークパフォーマンスの強化など、特定のコンピューティング機能が必要となります。さらに、EC2 料金オプションを通じて既に Amazon EC2 キャパシティに投資してくださったお客様は、これらのコミットメントをサーバーレスサービスで十分に活用することができませんでした。</p> \n<p>Amazon ECS マネージドインスタンスは、さまざまな EC2 インスタンスタイプと AWS サービスとの密な統合をサポートする、フルマネージドのコンテナコンピューティング環境を提供します。デフォルトでは、ワークロードに最適なコストの EC2 インスタンスが自動的に選択されますが、必要に応じて特定のインスタンス属性またはタイプを指定できます。AWS がプロビジョニング、スケーリング、セキュリティパッチ処理、コスト最適化など、インフラストラクチャ管理のすべての側面を処理するため、お客様はアプリケーションの構築と実行に集中することが可能です。</p> \n<p><span style=\"text-decoration: underline\"><strong>試してみましょう</strong></span></p> \n<p>新しい Amazon ECS クラスターを作成する <a href=\"https://aws.amazon.com/console/\">AWS マネジメントコンソール</a>のエクスペリエンスを見てみると、ECS マネージドインスタンスを使用するための新しいオプションだということがわかります。それでは、すべての新しいオプションについて簡単に見ていきましょう。</p> \n<p><img loading=\"lazy\" class=\"alignnone size-large wp-image-99478\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/09/24/Screenshot-2025-09-24-at-10.51.19 AM-1024x502.png\" alt=\"マネージドインスタンスを使用した ECS クラスターの作成\" width=\"1024\" height=\"502\"></p> \n<p><strong>[Fargate とマネージドインスタンス]</strong> を選択すると、2 つのオプションが表示されます。<strong>[ECS デフォルトを使用]</strong> を選択すると、Amazon ECS は保留中のタスクをグループ化して汎用インスタンスタイプを選択し、コストと耐障害性のメトリクスに基づいて最適なインスタンスタイプを選択します。これが最もわかりやすい、お勧めの開始方法です。<strong>[カスタムを使用 – 詳細]</strong> を選択すると、Amazon ECS が使用するインスタンスの属性をファインチューニングできる追加の設定パラメータが開きます。</p> \n<p><img loading=\"lazy\" class=\"alignnone size-large wp-image-99479\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/09/24/Screenshot-2025-09-24-at-12.59.44 PM-1024x593.png\" alt=\"マネージドインスタンスを使用した ECS クラスターの作成\" width=\"1024\" height=\"593\"></p> \n<p>デフォルトでは、<strong>CPU</strong> と<strong>メモリ</strong>は属性として表示されますが、さらに 20 個の属性から選択し、Amazon ECS がアクセスできる使用可能なインスタンスタイプのリストを引き続きフィルタリングすることができます。</p> \n<p><img loading=\"lazy\" class=\"alignnone size-large wp-image-99480\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/09/24/Screenshot-2025-09-24-at-12.59.44 PM-1-1024x593.png\" alt=\"マネージドインスタンスを使用した ECS クラスターの作成\" width=\"1024\" height=\"593\"></p> \n<p>属性を選択すると、選択に一致するすべてのインスタンスタイプのリストが表示されます。</p> \n<p><img loading=\"lazy\" class=\"alignnone size-large wp-image-99484\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/09/24/Screenshot-2025-09-24-at-12.59.57 PM-1-1024x466.png\" alt=\"マネージドインスタンスを使用した ECS クラスターの作成\" width=\"1024\" height=\"466\"></p> \n<p>ここから、通常どおり ECS クラスターを作成できます。Amazon ECS は、前のステップで定義した属性と基準に基づき、私に代わってインスタンスをプロビジョニングします。</p> \n<p><span style=\"text-decoration: underline\"><strong>Amazon ECS マネージドインスタンスの主な特徴量</strong></span></p> \n<p>Amazon ECS マネージドインスタンスでは、AWS がインフラストラクチャ管理の全責任を負い、インスタンスのプロビジョニング、スケーリング、メンテナンスのすべての側面を処理します。これには、14 日ごとに開始される定期的なセキュリティパッチの実装 (インスタンスの Connection Draining により、インスタンスの実際の存続期間が長くなる場合があります) や、アプリケーションの中断を最小限に抑えるために Amazon EC2 イベントウィンドウを使用してメンテナンスウィンドウをスケジュールする機能が含まれます。</p> \n<p>このサービスでは、インスタンスタイプを非常に柔軟に選択できます。デフォルトではコスト最適化されたインスタンスタイプが自動的に選択されますが、ワークロードにおいて特定の機能が必要な場合、必要なインスタンス属性を指定することができます。これには GPU アクセラレーション、CPU アーキテクチャ、ネットワークパフォーマンス要件のオプションが含まれており、コンピューティング環境を正確に制御できます。</p> \n<p>Amazon ECS マネージドインスタンスはコストを最適化するために、必要に応じて複数のタスクをより大きなインスタンスに自動的に割り当てることにより、リソースの使用率をインテリジェントに管理します。このサービスはタスク配置を継続的に監視および最適化し、ワークロードを少数のインスタンスに統合してアイドル (空の) 状態のインスタンスを枯渇させ、利用および終了することで、コンテナ化されたアプリケーションの可用性とコスト効率の両方を高めます。</p> \n<p>既存の AWS サービス、特に EC2 料金オプションなどの Amazon EC2 特徴量との統合はシームレスです。この密な統合により、フルマネージドサービスの運用のシンプルさを維持しながら、既存のキャパシティ投資を最大限に活用することができます。</p> \n<p>Amazon ECS マネージドインスタンスでは、引き続きセキュリティが最優先事項です。このサービスは、専用のコンテナオペレーティングシステムである Bottlerocket 上で動作し、自動化されたセキュリティパッチとアップデートを通じてお客様のセキュリティ体制を維持します。Bottlerocket OS イメージに適用されたすべてのアップデートとパッチは、<a href=\"https://bottlerocket.dev/en/os/\">Bottlerocket のウェブサイト</a>で確認できます。この包括的なセキュリティへのアプローチにより、コンテナ化されたアプリケーションを安全かつ管理された環境で引き続き実行することができます。</p> \n<p><span style=\"text-decoration: underline\"><strong>今すぐご利用いただけます</strong></span></p> \n<p>Amazon ECS マネージドインスタンスは現在、米国東部 (バージニア北部)、米国西部 (オレゴン)、欧州 (ダブリン)、アフリカ (ケープタウン)、アジアパシフィック (シンガポール)、アジアパシフィック (東京) の AWS リージョンでご利用いただけます。マネージドインスタンスは、AWS マネジメントコンソール、AWS コマンドラインインターフェイス (AWS CLI)、または AWS Cloud Development Kit (AWS CDK) や AWS CloudFormation などの Infrastructure as Code (IaC) ツールから使用を開始できます。使用する EC2 インスタンスの料金と、サービスの管理料金が請求されます。</p> \n<p>Amazon ECS マネージドインスタンスの詳細については、<a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ManagedInstances.html\">ドキュメント</a>をご覧ください。コンテナインフラストラクチャの簡素化を今すぐ始めましょう。</p> \n<p>原文は<a href=\"https://aws.amazon.com/jp/blogs/aws/announcing-amazon-ecs-managed-instances-for-containerized-applications/\">こちら</a>です。</p>"
  },
  {
    "title": "【自動車業界】SDV時代の車載ソフトウエア開発を支えるAWSソリューション（Vector SDV Symposium Japan 2025で発表）",
    "date": "2025-10-09T05:39:28.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/automotive_vector_sdv_symposium_2025_aws_session/",
    "content": "<h2>はじめに</h2> \n<p>みなさんこんにちは、ソリューションアーキテクトの眞壽田（ますた）です。2025年9月18日に開催された「Vector SDV Symposium Japan 2025」にて、AWSのソリューションアーキテクトとして「SDV時代の車載ソフトウエア開発を支えるAWSソリューション」というテーマでセッションを担当させていただきました。Software-Defined Vehicle（SDV）の波が自動車産業を大きく変革している今、クラウドテクノロジーがどのように車載ソフトウェア開発の課題を解決し、イノベーションを加速させるのか。本セッションでは、仮想開発環境や仮想ECU技術を使ったテストの効率化まで、AWSが提供するソリューションについて紹介しました。</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/aws_masutah_202510_01.jpg\"><img loading=\"lazy\" class=\"alignnone size-medium wp-image-166545\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/aws_masutah_202510_01-300x225.jpg\" alt=\"\" width=\"300\" height=\"225\"></a></p> \n<p>この記事では、セッションの内容を詳しく解説するとともに、SDV時代におけるクラウドの可能性について掘り下げていきたいと思います。</p> \n<h2>これまでのSDV事例のおさらい</h2> \n<p>SDV時代を見据え、AWSを活用して車載ソフトウエア開発の効率化を目指した自動車メーカー様の事例は次の通りです。詳細はリンクやブログを参照頂ければと思います。</p> \n<p><strong>1. ステランティス　Virtual Engineering Workbench（VEW）2022年 <a href=\"https://www.youtube.com/watch?v=9Tse4B-fnbI\" target=\"_blank\" rel=\"noopener\">youtube</a> <a href=\"https://aws.amazon.com/blogs/industries/stellantis-sdv-transformation-with-the-virtual-engineering-workbench-on-aws/\" target=\"_blank\" rel=\"noopener\">blog</a></strong><br> <strong>2. BMW Operating System 9 2023年 <a href=\"https://aws.amazon.com/jp/solutions/case-studies/bmw-software-defined-vehicles/\" target=\"_blank\" rel=\"noopener\">link</a></strong><br> <strong>3. 本田技研工業株式会社　Digital Proving Ground 2023年 <a href=\"https://www.youtube.com/watch?v=eS2yqxDE-08\" target=\"_blank\" rel=\"noopener\">youtube</a></strong></p> \n<p>これらの事例に共通するAWSのソリューションを、次の章でじっくり紹介していきたいと思います。</p> \n<h2>SDV開発を支援するAWSのソリューション</h2> \n<p>自動車産業がソフトウェア定義車両（SDV）へと急速に進化する中、AWSは自動車メーカーが直面する複雑な課題に対して、包括的な支援フレームワークを提供しています。この図が示すように、AWSの支援は三つの主要な柱を中心に構成されています。</p> \n<p>これらの柱に加え、AWSはデジタル人材の育成支援やパートナーとの連携を通じて、自動車メーカーのSDV開発を包括的にサポートしています。この統合的なアプローチにより、お客様は従来の開発モデルからソフトウェア中心の開発へとスムーズに移行し、次世代モビリティの創造に専念することができます。</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/aws_masutah_202510_02.png\"><img loading=\"lazy\" class=\"size-full wp-image-166546\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/aws_masutah_202510_02.png\" alt=\"SDV開発を支援するAWSのソリューション\" width=\"2290\" height=\"1286\"></a></p> \n<h2>自動車業界におけるオンプレミスの開発環境に対する課題</h2> \n<p>以下の例は、AWSがお客様からよく聞く課題をAWSの生成AIのサービス（<a href=\"https://aws.amazon.com/jp/bedrock\" target=\"_blank\" rel=\"noopener\">Amazon Bedrock</a>）でストーリー調に仕立てたものです。</p> \n<blockquote> \n <p style=\"padding-left: 40px\"><em>ある自動車メーカーの制御ECU開発部門では100名以上のエンジニアがモデルベース開発（MBD）環境を使って制御ソフトウェアの開発に取り組んでいます。「開発環境の構築と維持が私たちの最大の頭痛の種なんです」とAさんは語ります。</em><br> <em>「昨年、新たなプロジェクトが始まった時、各エンジニアの開発PC調達だけで数ヶ月を要しました。そして機材が到着した後も、必要なツールのインストールに数週間を費やしました。開発に必要なツール群は多岐にわたり、互換性の問題も頻発します。詳細なインストールマニュアルを整備する専任スタッフまで配置したのですが、それでも約2割のエンジニアが環境構築に失敗し、Q&amp;A対応に追われました」とAさんは振り返ります。</em><br> <em>「さらに、一度環境を構築できても問題は続きます。シミュレーションやテスト実行中はPCリソースが占有されるため、他の作業が事実上不可能になります。また社外エンジニアとの協業においては、セキュリティ上の制約から開発PC利用に制限がかかることも少なくありません。また、すべての開発PCに対するセキュリティパッチの適用にも膨大な時間を要します。静的解析やテスト、シミュレーションの実行にも長時間を要し、開発サイクル全体が遅延する要因となっていました」とAさんは説明します。</em></p> \n</blockquote> \n<p>このような開発環境では、ソフトウエアの開発量が増大するSDV時代に対応することは難しくなります。そこでAWSは、従来のオンプレミスでの開発環境の課題解決のために、主に次の２つのソリューションを提供しています。</p> \n<h2>開発環境課題を解決するためのAWSソリューション ２選</h2> \n<h3>1. Research and Engineering Studio on AWS (RES)</h3> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/aws_masutah_202510_03.png\"><img loading=\"lazy\" class=\"size-full wp-image-166547\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/aws_masutah_202510_03.png\" alt=\"Research and Engineering Studio on AWS (RES)\" width=\"2296\" height=\"1282\"></a></p> \n<p>RESに関する情報　<a href=\"https://github.com/aws/res\" target=\"_blank\" rel=\"noopener\">GitHub</a>　<a href=\"https://docs.aws.amazon.com/res/\" target=\"_blank\" rel=\"noopener\">AWS Document</a>　<a href=\"https://aws.amazon.com/blogs/hpc/new-research-and-engineering-studio-on-aws/\" target=\"_blank\" rel=\"noopener\">AWS Blog</a>　<a href=\"https://www.youtube.com/watch?v=M0rc0Rwj6Tg\" target=\"_blank\" rel=\"noopener\">YouTube</a></p> \n<p>RESの特徴的な機能として、<strong>専用ウェブポータルからデスクトップ環境を簡単に作成</strong>できることが挙げられます。<strong>各プロジェクトでデスクトップイメージを保存</strong>し、チームメンバーがそれを必要に応じてデプロイできる柔軟性も備えています。さらに、共有データストアを活用した共同作業環境の構築や、既存のID管理インフラ（AWS Managed Microsoft AD）との統合も実現しています。<br> 先ほどの車載ソフトウエア開発の例では、RESを導入することで彼らの課題を以下のように解決できます：</p> \n<ol> \n <li><strong>迅速な環境構築</strong>: 専用ウェブポータルからデスクトップ環境を短時間で作成でき、数ヶ月かかっていたPC調達・環境構築のプロセスを大幅に短縮</li> \n <li><strong>環境の標準化と再利用</strong>: プロジェクト毎にデスクトップイメージを保存し、チームメンバーが即座にデプロイできるため、環境構築の失敗によるQ&amp;A対応の負担が限りなく軽減される</li> \n <li><strong>共同作業の効率化</strong>: 共有データストアを活用した共同作業が可能となり、OEM、サプライヤーが所属するチームのコラボレーションが促進される</li> \n <li><strong>セキュリティの強化と簡素化</strong>: 既存のID管理インフラ（AWS Managed Microsoft AD）との統合により、社外エンジニアとの協業におけるセキュリティ課題が解決され、一元的なセキュリティ管理が可能</li> \n <li>メンテナンス作業の軽減: セキュリティパッチを当てた開発環境をイメージとして保存することで、開発者は最新の環境をデプロイすることが可能</li> \n</ol> \n<h3>2. Virtual Engineering Workbench (VEW)</h3> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/aws_masutah_202510_04.png\"><img loading=\"lazy\" class=\"size-full wp-image-166548\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/aws_masutah_202510_04.png\" alt=\"Virtual Engineering Workbench (VEW)\" width=\"2290\" height=\"1288\"></a></p> \n<p>ステランティスの事例で紹介したVirtual Engineering Workbenchは、AWSのソリューションとしても展開しています。<br> このソリューションは、前述のRESで提供する開発環境やシミュレーション環境だけではなく、特定の仮想ECUのイメージも管理することで、今まで評価ボードを調達しなければECUのテストができなかった機能テストや結合テストが、仮想環境で実現することを可能とします。ステランティスの事例では、Github actionsやArtifactoryを用いたDevOpS環境の構築と、そのWorkflowで作成したアーティファクトの仮想ECUのバイナリファイルを、専用線で接続したオンプレミスのHILS環境へ連携するユースケースも実現しています。ご興味のある方は、こちらの<a href=\"https://aws.amazon.com/blogs/industries/stellantis-sdv-transformation-with-the-virtual-engineering-workbench-on-aws/\" target=\"_blank\" rel=\"noopener\">ブログ</a>もご覧ください。</p> \n<h2>Shift Leftを実現する仮想ECU技術</h2> \n<p>車載ソフトウエア開発のV字モデルの開発プロセスでは、ECU間の結合テストがV字の右側（後半）で実施されることがありました。右側の段階で不具合が発見されると、開発の手戻りが大きくなり、コストや時間の増大につながっており、多くのお客様が仮想ECUに興味を持っていただいています。</p> \n<h3>1. AWS Graviton と ARM on ARM技術</h3> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/aws_masutah_202510_05.png\"><img loading=\"lazy\" class=\"alignnone size-full wp-image-166549\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/aws_masutah_202510_05.png\" alt=\"\" width=\"1511\" height=\"844\"></a></p> \n<p>AWSはARMアーキテクチャを採用したデータセンター向けLSIであるGravitonを自ら設計し、2015年にLSI設計会社のAnnapuruna Labsを完全子会社化することでその技術基盤を強化しました。特に自動車開発において重要な点として、<a href=\"https://aws.amazon.com/jp/ec2/graviton/\" target=\"_blank\" rel=\"noopener\">AWS Graviton</a>は、ARMとの協力により、実際のECUで使用されるARMのCortex-A、Cortex-M、Cortex-Rシリーズの命令コードをAWS Graviton上でそのまま実行できる「ARM on ARM技術」を搭載しています。これにより、仮想ECUの環境を正確かつ効率的に構築することが可能となっています。<br> このARM on ARMの技術を活用したソリューションがAWS Marketplaceで公開されました。Corellium社が提供する<a href=\"https://aws.amazon.com/marketplace/pp/prodview-ec3yp6hoxpgby\" target=\"_blank\" rel=\"noopener\">Atlas Private Cloud</a>です。</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/aws_masutah_202510_06.png\"><img loading=\"lazy\" class=\"alignnone size-full wp-image-166550\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/aws_masutah_202510_06.png\" alt=\"\" width=\"1063\" height=\"771\"></a></p> \n<p>詳細は、<a href=\"https://aws.amazon.com/marketplace/pp/prodview-ec3yp6hoxpgby\" target=\"_blank\" rel=\"noopener\">Marketplaceのページ</a>をご覧頂ければと思いますが、このAtlas Private Cloudは、<a href=\"https://aws.amazon.com/jp/ec2/instance-types/c8g/\" target=\"_blank\" rel=\"noopener\">AWS Graviton 4 c8g.metal24xl</a> EC2インスタンス上で、32ビットと64ビットのArm Cortex A、R、MコアをベースにしたARM Virtual Hardware（AVH）を実行することができます。2025年10月現在、AWS Graviton 4 c8g.metal24xl １つのEC2インスタンス上で動作可能なAVHは、トータル80 core分で、１つのEC2インスタンス上で複数の仮想ECUを起動することが可能です。今まで、制御系ECUを仮想化する場合、x86上のEC2インスタンスでエミュレーターを動かすのが通常でしたが、GravitonとARM on ARM技術を利用したソリューションで解決できるようになるケースが期待できます。<br> 例えば、2025年のAWS Summit JapanのAutomotiveデモブースでは、下記の構成でコックピットとパワートレインのECUを仮想化し、Autosar APのSOME/IPで接続するデモンストレーションを紹介しました（下の図）。③の仮想ECUのスタックでは、AWS Graviton EC2 + Corellium上で、Cortex-R82AEのVirtual Hardwareを動作させ、パワートレインのアプリケーションを動作させています。</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/aws_masutah_202510_07.png\"><img loading=\"lazy\" class=\"size-full wp-image-166551\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/aws_masutah_202510_07.png\" alt=\"2025年のAWS Summit JapanのAutomotiveデモブース\" width=\"2640\" height=\"1488\"></a></p> \n<h3>2. QNX Hypervisor on AWS</h3> \n<p>Blackberry社のQNXが、<a href=\"https://aws.amazon.com/marketplace/pp/prodview-cse7ii7pszrxa\" target=\"_blank\" rel=\"noopener\">QNX Hypervisor 2.2</a>をAWS Marketplaceから提供しています。2025年10月現在、AWS上でQNX Hypervisor 2.2を利用するには、Blackberry社と別途ライセンス契約が必要になります。ご興味がある方は、Blackberry社にお問い合わせ頂ければと思います。</p> \n<div id=\"attachment_166552\" style=\"width: 1315px\" class=\"wp-caption alignnone\">\n <a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/aws_masutah_202510_08.png\"><img aria-describedby=\"caption-attachment-166552\" loading=\"lazy\" class=\"size-full wp-image-166552\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/08/aws_masutah_202510_08.png\" alt=\"QNX Hypervisor on AWS\" width=\"1305\" height=\"733\"></a>\n <p id=\"caption-attachment-166552\" class=\"wp-caption-text\">QNX Hypervisor on AWS</p>\n</div> \n<p>QNX Hypervisor 2.2 on AWSは、AWS Graviton EC2インスタンスである、c6g.metal, r6g.metal, m6g.metalインスタンスで稼働します。アプリケーションから周辺デバイスへのアクセスは、Hardware Abstraction Layer（HAL層）のVirtIO経由で行います。仮に、従来のアプリケーションを、QNX Hypervisor 2.2上で仮想化するには、そのアプリケーション内で、ハードウエアに依存した処理をVirtIOで分離させる必要があります。どのハードウエアへのアクセスを抽象化するかという点において、サポートするVirtIOのバージョンやQNXとのライセンス契約にも依存しますので、Blackberry社にお問い合わせ頂ければと思います。</p> \n<p>QNX Hypervisor on AWSに関する情報は以下のブログでもまとめられています。<br> <a href=\"https://aws.amazon.com/jp/blogs/industries/elevating-cluster-software-development-with-qnx-hypervisor-on-aws/\" target=\"_blank\" rel=\"noopener\">Elevating cluster software development with QNX Hypervisor on AWS</a></p> \n<h2>おわりに</h2> \n<p>このブログでは、SDV時代を支えるAWSソリューションとして、開発環境と検証環境の２点に絞って紹介しました。特に、開発環境の課題については多くのお客様が解決したい課題ではないかと思います。量産開始後も継続してソフトウエアのアップデートが本格化する将来、開発環境を必要に応じて伸縮自在に調整することが望まれ、クラウドベースのエコシステムを構築していくことは多くのお客様において急務となっています。このブログを読んでAWSの人と少しお話してみたいなと思われる読者様がいらっしゃいましたら、お近くのAWSのアカウントチームや<a href=\"https://aws.amazon.com/jp/automotive/\" target=\"_blank\" rel=\"noopener\">AWS for Automotive</a>（チャット）までご連絡下さいませ。</p> \n<h2>著者</h2> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2023/09/26/masutah2.png\"><img loading=\"lazy\" class=\"wp-image-38823 alignleft\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2023/09/26/masutah2.png\" alt=\"\" width=\"65\" height=\"86\"></a>眞壽田 英輝 (Masuta, Hideki)</p> \n<p>アマゾン ウェブ サービス ジャパン 合同会社<br> 自動車製造領域のお客様を支援するシニアソリューションアーキテクト。長年乗っていた車を最近買い替えたところ、車載ソフトウェアの目覚ましい進化に驚かされる日々を過ごしています。今後さらに高度な運転支援システムが普及することで、交通死亡事故ゼロの社会へと一歩ずつ近づいていくでしょう。そのような未来の実現に貢献すべく、自動車産業のお客様のイノベーションを技術面からバックアップしています。</p>"
  },
  {
    "title": "AWS 流通小売消費財業界向けイベント「AWS Retail CPG Expo 2025」を開催：カスタマーエンゲージメントからスマートストアまで – 戦略的イノベーションが牽引する次世代小売",
    "date": "2025-10-09T03:29:15.000Z",
    "source": "Amazon Web Services ブログ",
    "url": "https://aws.amazon.com/jp/blogs/news/aws-retail-cpg-expo-2025-announce/",
    "content": "<p><img loading=\"lazy\" class=\"aligncenter size-full wp-image-166513\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/07/thumbnail-retcpg-expo-2025.png\" alt=\"\" width=\"1001\" height=\"346\"></p> \n<h2>イベント概要</h2> \n<p>AWS は Amazon の流通小売事業における知見と経験をもとにソリューションを提供しており、流通小売・消費財業界におけるイノベーションのカギとして、「カスタマーエンゲージメント」「デジタル コマース」「インテリジェント・サプライチェーン」「マーチャンダイジング &amp; プランニング」「スマートストア」の 5 つのテーマを重視しています。<br> 本イベントでは、この 5 つのテーマから、特に「カスタマーエンゲージメント」「デジタル コマース」 「スマートストア」の 3 つのテーマにフォーカスをして、AWS のテクノロジー、専門知識を活用して提供しているソリューションプロバイダーから業界に固有の課題と機会に応えるサービスやベストプラクティスをご紹介します。<br> 「イノベーションを加速させたいが、スピードや人材が課題」といった状況でもすぐに活用できるソリューションを学び、展示ブースで製品デモをご覧いただけるほか、ソリューションプロバイダー各社と個別にご相談できる機会も提供いたします。</p> \n<p>日時：2025 年 11 月 25 日（火）16:00–19:00（15:30 受付開始）</p> \n<p>場所：AWS 目黒オフィス 目黒セントラルスクエア 21 階（東京都品川区上大崎 3-1-1）</p> \n<p>主催：アマゾン ウェブ サービス ジャパン合同会社</p> \n<p>参加費：無料（要事前申込）</p> \n<p>参加申込：こちらの<a href=\"https://pulse.aws/survey/SXMCHRFV?p=0\" target=\"_blank\" rel=\"noopener\">お申込みフォーム</a>からお申込みください。</p> \n<h2>展示テーマと出展企業</h2> \n<h3>「カスタマーエンゲージメント」</h3> \n<p>カスタマー 360° によって顧客セグメントの関係性や特徴、顧客生涯価値を理解し、CRM、顧客データプラットフォーム、コンタクトセンター DX など、データ主導のインサイトによるカスタマーエンゲージメントの促進に役立つソリューションをご紹介します。</p> \n<p><strong>＜出展企業（アルファベット順）＞</strong></p> \n<p><a href=\"https://amplitude.com/ja-jp\" target=\"_blank\" rel=\"noopener\">Amplitude Analytics 合同会社</a></p> \n<p><a href=\"https://www.braze.com/ja/product\" target=\"_blank\" rel=\"noopener\">Braze 株式会社</a></p> \n<p><a href=\"https://www.dentsudigital.co.jp/\" target=\"_blank\" rel=\"noopener\">株式会社電通デジタル</a></p> \n<p><a href=\"https://www.serverworks.co.jp/service/architectingandbuild/amazon_connect/\" target=\"_blank\" rel=\"noopener\">株式会社サーバーワークス</a></p> \n<p><a href=\"https://www.treasuredata.co.jp/\" target=\"_blank\" rel=\"noopener\">トレジャーデータ株式会社</a></p> \n<hr> \n<h3>「デジタルコマース」</h3> \n<p>生成 AI を利用した魅力的なサイトや、俊敏なコマース基盤など、デジタルコマースソリューションへの投資は不可欠です。デジタルコマースのイノベーションを加速し、あらゆるチャネルでカスタマーエクスペリエンスを高めるためのソリューションをご紹介します。</p> \n<p><strong>＜出展企業（アルファベット順）＞</strong></p> \n<p><a href=\"https://retail-solution.aq-dx.jp/\" target=\"_blank\" rel=\"noopener\">アジアクエスト株式会社</a></p> \n<p><a href=\"https://contentsquare.com/ja-ja/\" target=\"_blank\" rel=\"noopener\">Contentsquare Japan 合同会社</a></p> \n<hr> \n<h3>「スマート ストア」</h3> \n<p>小売業に新たな収益の柱をもたらすことが期待される店舗内の先進ソリューションや、顧客接点の可能性を広げる POS データ活用、店舗省人化に応える最新のテクノロジーなどをご紹介します。</p> \n<p><strong>＜出展企業（アルファベット順）＞</strong></p> \n<p><a href=\"https://forgevision.com/\" target=\"_blank\" rel=\"noopener\">フォージビジョン株式会社</a></p> \n<p><a href=\"https://www.fsi.co.jp/\" target=\"_blank\" rel=\"noopener\">富士ソフト株式会社</a></p> \n<p><a href=\"https://www.intec.co.jp/column/proto-01.html\" target=\"_blank\" rel=\"noopener\">株式会社インテック</a></p> \n<p><a href=\"https://www.sony.co.jp/Products/felica/navicx/\" target=\"_blank\" rel=\"noopener\">ソニー株式会社</a></p> \n<p><a href=\"https://teal-bi.com/\" target=\"_blank\" rel=\"noopener\">株式会社ティールテクノロジーズ</a></p> \n<p><a href=\"https://usen-camera.co.jp/service/\" target=\"_blank\" rel=\"noopener\">株式会社 USEN Camera Solutions</a></p> \n<hr> \n<h3>来場者特典</h3> \n<p><img loading=\"lazy\" class=\"alignright size-full wp-image-166521\" src=\"https://d2908q01vomqb2.cloudfront.net/b3f0c7f6bb763af1be91d9e74eabfeb199dc1f1f/2025/10/07/aws-logo-mag.png\" alt=\"\" width=\"168\" height=\"165\">事前お申込みのうえ当日ご来場いただきましたお客様へ<span style=\"text-decoration: underline\">先着 150 名限定</span>で、イベント特製のステンレスマグカップ（AWS ロゴ入り）をプレゼントいたします！</p> \n<p>※ 画像はイメージです。実物と異なる場合がございます。</p> \n<p>当日はパートナー各社のブースにて、展示ブースで製品デモをご覧いただけるほか、ソリューションプロバイダー各社と個別にご相談できる機会も提供いたします</p> \n<h3>この特別な機会をお見逃しなく。お申し込みは<a href=\"https://pulse.aws/survey/SXMCHRFV?p=0\" target=\"_blank\" rel=\"noopener\">こちら</a>から。</h3> \n<p>皆様のご参加を楽しみにお待ちしております！</p>"
  },
  {
    "title": "vitejs/vite – v7.1.9",
    "date": "2025-10-03T00:41:51.000Z",
    "source": "GitHub",
    "url": "https://github.com/vitejs/vite/releases/tag/v7.1.9",
    "content": "Please refer to [CHANGELOG.md](https://github.com/vitejs/vite/blob/v7.1.9/packages/vite/CHANGELOG.md) for details."
  },
  {
    "title": "vitejs/vite – v7.1.8",
    "date": "2025-10-02T06:15:47.000Z",
    "source": "GitHub",
    "url": "https://github.com/vitejs/vite/releases/tag/v7.1.8",
    "content": "Please refer to [CHANGELOG.md](https://github.com/vitejs/vite/blob/v7.1.8/packages/vite/CHANGELOG.md) for details."
  },
  {
    "title": "vitejs/vite – create-vite@8.0.2",
    "date": "2025-10-02T05:51:22.000Z",
    "source": "GitHub",
    "url": "https://github.com/vitejs/vite/releases/tag/create-vite%408.0.2",
    "content": "Please refer to [CHANGELOG.md](https://github.com/vitejs/vite/blob/create-vite@8.0.2/packages/create-vite/CHANGELOG.md) for details."
  },
  {
    "title": "facebook/react – 19.2.0 (Oct 1, 2025)",
    "date": "2025-10-01T21:50:48.000Z",
    "source": "GitHub",
    "url": "https://github.com/facebook/react/releases/tag/v19.2.0",
    "content": "Below is a list of all new features, APIs, and bug fixes.\r\n\r\nRead the [React 19.2 release post](https://react.dev/blog/2025/10/01/react-19-2) for more information.\r\n\r\n## New React Features\r\n\r\n- [`<Activity>`](https://react.dev/reference/react/Activity): A new API to hide and restore the UI and internal state of its children.\r\n- [`useEffectEvent`](https://react.dev/reference/react/useEffectEvent) is a React Hook that lets you extract non-reactive logic into an [Effect Event](https://react.dev/learn/separating-events-from-effects#declaring-an-effect-event).\r\n- [`cacheSignal`](https://react.dev/reference/react/cacheSignal) (for RSCs) lets your know when the `cache()` lifetime is over.\r\n- [React Performance tracks](https://react.dev/reference/developer-tooling/react-performance-tracks) appear on the Performance panel’s timeline in your browser developer tools\r\n\r\n## New React DOM Features\r\n\r\n- Added resume APIs for partial pre-rendering with Web Streams:\r\n  - [`resume`](https://react.dev/reference/react-dom/server/resume): to resume a prerender to a stream.\r\n  - [`resumeAndPrerender`](https://react.dev/reference/react-dom/static/resumeAndPrerender): to resume a prerender to HTML.\r\n- Added resume APIs for partial pre-rendering with Node Streams:\r\n  - [`resumeToPipeableStream`](https://react.dev/reference/react-dom/server/resumeToPipeableStream): to resume a prerender to a stream.\r\n  - [`resumeAndPrerenderToNodeStream`](https://react.dev/reference/react-dom/static/resumeAndPrerenderToNodeStream): to resume a prerender to HTML.\r\n- Updated [`prerender`](https://react.dev/reference/react-dom/static/prerender) APIs to return a `postponed` state that can be passed to the `resume` APIs.\r\n\r\n## Notable changes\r\n\r\n- React DOM now batches suspense boundary reveals, matching the behavior of client side rendering. This change is especially noticeable when animating the reveal of Suspense boundaries e.g. with the upcoming `<ViewTransition>` Component. React will batch as much reveals as possible before the first paint while trying to hit popular first-contentful paint metrics.\r\n- Add Node Web Streams (`prerender`, `renderToReadableStream`) to server-side-rendering APIs for Node.js\r\n- Use underscore instead of `:` IDs generated by useId\r\n\r\n## All Changes\r\n\r\n### React\r\n\r\n- `<Activity />` was developed over many years, starting before `ClassComponent.setState` (@acdlite @sebmarkbage and many others)\r\n- Stringify context as \"SomeContext\" instead of \"SomeContext.Provider\" (@kassens [#33507](https://github.com/facebook/react/pull/33507))\r\n- Include stack of cause of React instrumentation errors with `%o` placeholder (@eps1lon [#34198](https://github.com/facebook/react/pull/34198))\r\n- Fix infinite `useDeferredValue` loop in popstate event (@acdlite [#32821](https://github.com/facebook/react/pull/32821))\r\n- Fix a bug when an initial value was passed to `useDeferredValue` (@acdlite [#34376](https://github.com/facebook/react/pull/34376))\r\n- Fix a crash when submitting forms with Client Actions (@sebmarkbage [#33055](https://github.com/facebook/react/pull/33055))\r\n- Hide/unhide the content of dehydrated suspense boundaries if they resuspend (@sebmarkbage [#32900](https://github.com/facebook/react/pull/32900))\r\n- Avoid stack overflow on wide trees during Hot Reload (@sophiebits [#34145](https://github.com/facebook/react/pull/34145))\r\n- Improve Owner and Component stacks in various places (@sebmarkbage, @eps1lon: [#33629](https://github.com/facebook/react/pull/33629), [#33724](https://github.com/facebook/react/pull/33724), [#32735](https://github.com/facebook/react/pull/32735), [#33723](https://github.com/facebook/react/pull/33723))\r\n- Add `cacheSignal` (@sebmarkbage [#33557](https://github.com/facebook/react/pull/33557))\r\n\r\n### React DOM\r\n\r\n- Block on Suspensey Fonts during reveal of server-side-rendered content (@sebmarkbage [#33342](https://github.com/facebook/react/pull/33342))\r\n- Use underscore instead of `:` for IDs generated by `useId` (@sebmarkbage, @eps1lon: [#32001](https://github.com/facebook/react/pull/32001), [https://github.com/facebook/react/pull/33342](https://github.com/facebook/react/pull/33342)[#33099](https://github.com/facebook/react/pull/33099), [#33422](https://github.com/facebook/react/pull/33422))\r\n- Stop warning when ARIA 1.3 attributes are used (@Abdul-Omira [#34264](https://github.com/facebook/react/pull/34264))\r\n- Allow `nonce` to be used on hoistable styles (@Andarist [#32461](https://github.com/facebook/react/pull/32461))\r\n- Warn for using a React owned node as a Container if it also has text content (@sebmarkbage [#32774](https://github.com/facebook/react/pull/32774))\r\n- s/HTML/text for for error messages if text hydration mismatches (@rickhanlonii [#32763](https://github.com/facebook/react/pull/32763))\r\n- Fix a bug with `React.use` inside `React.lazy`\\-ed Component (@hi-ogawa [#33941](https://github.com/facebook/react/pull/33941))\r\n- Enable the `progressiveChunkSize` option for server-side-rendering APIs (@sebmarkbage [#33027](https://github.com/facebook/react/pull/33027))\r\n- Fix a bug with deeply nested Suspense inside Suspense fallback when server-side-rendering (@gnoff [#33467](https://github.com/facebook/react/pull/33467))\r\n- Avoid hanging when suspending after aborting while rendering (@gnoff [#34192](https://github.com/facebook/react/pull/34192))\r\n- Add Node Web Streams to server-side-rendering APIs for Node.js (@sebmarkbage [#33475](https://github.com/facebook/react/pull/33475))\r\n\r\n### React Server Components\r\n\r\n- Preload `<img>` and `<link>` using hints before they're rendered (@sebmarkbage [#34604](https://github.com/facebook/react/pull/34604))\r\n- Log error if production elements are rendered during development (@eps1lon [#34189](https://github.com/facebook/react/pull/34189))\r\n- Fix a bug when returning a Temporary reference (e.g. a Client Reference) from Server Functions (@sebmarkbage [#34084](https://github.com/facebook/react/pull/34084), @denk0403 [#33761](https://github.com/facebook/react/pull/33761))\r\n- Pass line/column to `filterStackFrame` (@eps1lon [#33707](https://github.com/facebook/react/pull/33707))\r\n- Support Async Modules in Turbopack Server References (@lubieowoce [#34531](https://github.com/facebook/react/pull/34531))\r\n- Add support for .mjs file extension in Webpack (@jennyscript [#33028](https://github.com/facebook/react/pull/33028))\r\n- Fix a wrong missing key warning (@unstubbable [#34350](https://github.com/facebook/react/pull/34350))\r\n- Make console log resolve in predictable order (@sebmarkbage [#33665](https://github.com/facebook/react/pull/33665))\r\n\r\n### React Reconciler\r\n\r\n- [createContainer](https://github.com/facebook/react/blob/v19.2.0/packages/react-reconciler/src/ReactFiberReconciler.js#L255-L261) and [createHydrationContainer](https://github.com/facebook/react/blob/v19.2.0/packages/react-reconciler/src/ReactFiberReconciler.js#L305-L312) had their parameter order adjusted after `on*` handlers to account for upcoming experimental APIs\r\n\r\n## eslint-plugin-react-hooks@6.1.0\r\n\r\n**Note:** Version 6.0.0 was mistakenly released and immediately deprecated and untagged on npm. This is the first official 6.x major release and includes breaking changes. \r\n\r\n- **Breaking:** Require Node.js 18 or newer. ([@michaelfaith](https://github.com/michaelfaith) in [#32458](https://github.com/facebook/react/pull/32458))\r\n- **Breaking:** Flat config is now the default `recommended` preset. Legacy config moved to `recommended-legacy`. ([@michaelfaith](https://github.com/michaelfaith) in [#32457](https://github.com/facebook/react/pull/32457))\r\n- **New Violations:** Disallow calling `use` within try/catch blocks. ([@poteto](https://github.com/poteto) in [#34040](https://github.com/facebook/react/pull/34040))\r\n- **New Violations:** Disallow calling `useEffectEvent` functions in arbitrary closures. ([@jbrown215](https://github.com/jbrown215) in [#33544](https://github.com/facebook/react/pull/33544))\r\n- Handle `React.useEffect` in addition to `useEffect` in rules-of-hooks. ([@Ayc0](https://github.com/Ayc0) in [#34076](https://github.com/facebook/react/pull/34076))\r\n- Added `react-hooks` settings config option that to accept `additionalEffectHooks` that are used across exhaustive-deps and rules-of-hooks rules. ([@jbrown215](https://github.com/jbrown215)) in [#34497](https://github.com/facebook/react/pull/34497)"
  }
]